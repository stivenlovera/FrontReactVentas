{"version":3,"sources":["icons/Shopping.jsx","page-sections/ecommerce/Heading.jsx","pages/configuracion-inicial/components/configure-planes/ConfigurePlanes.jsx","pages/configuracion-inicial/components/clasificacion/clasificacion.jsx","pages/configuracion-inicial/configuracion/configuracion.jsx","components/input-fields/AppTextField.jsx","components/flexbox/FlexRowAlign.jsx","components/input-fields/SearchInput.jsx","components/AppModal.jsx","page-sections/data-table/dataTableV2/styledComponents.js","page-sections/admin-ecommerce/CustomTable.jsx","components/IconWrapper.jsx","icons/ShoppingBasket.jsx","contexts/ContextDataTable.js","icons/Delete.jsx","icons/DeleteIcon.jsx","icons/Add.jsx","page-sections/admin-ecommerce/CreateProductModal.jsx","pages/admin-ecommerce/product-management.jsx","page-sections/admin-ecommerce/fakeData.js","pages/configuracion-inicial/components/general/general.jsx","Services/api-ventas-erp/PlanCuentaService.js","pages/configuracion-inicial/components/plan-cuentas/components/create-plan-cuenta-modal.jsx","pages/configuracion-inicial/components/plan-cuentas/hooks/useGuardarPadrePlanCuenta.js","pages/configuracion-inicial/components/plan-cuentas/hooks/useGuardarHIjoPlanCuenta.js","pages/configuracion-inicial/components/plan-cuentas/components/plan-cuenta-columns.jsx","pages/configuracion-inicial/components/plan-cuentas/hooks/useEditarPlanCuenta.js","pages/configuracion-inicial/components/plan-cuentas/plan-cuentas-list.jsx","pages/configuracion-inicial/components/plan-cuentas/hooks/useListarPlanCuenta.js","pages/configuracion-inicial/components/plan-cuentas/utils/utilPlanCuenta.js","pages/configuracion-inicial/components/plan-cuentas/hooks/useCreatePlanCuenta.js","page-sections/accounts/account/common/StyledComponents.js","Services/api-ventas-erp/procesoService.js","pages/configuracion-inicial/components/procesos-list/components/create-proceso-modal.jsx","pages/configuracion-inicial/components/procesos-list/hooks/UseGuardarProceso.js","pages/configuracion-inicial/components/procesos-list/components/proceso-columns.jsx","pages/configuracion-inicial/components/procesos-list/hooks/UseEditarProceso.js","pages/configuracion-inicial/components/procesos-list/procesos-list.jsx","pages/configuracion-inicial/components/procesos-list/hooks/UseListaProceso.js","pages/configuracion-inicial/components/procesos-list/utils/utilsProceso.js","pages/configuracion-inicial/components/procesos-list/hooks/UseCrearProceso.js","Services/api-ventas-erp/tipoAsiento.js","pages/configuracion-inicial/components/tipo-proceso/utils/searchTipoAsiento.js","pages/configuracion-inicial/components/tipo-proceso/components/create-tipo-asiento-modal.jsx","pages/configuracion-inicial/components/tipo-proceso/hooks/UseGuardarTipoAsiento.js","pages/configuracion-inicial/components/tipo-proceso/components/tipo-asiento-columns.jsx","pages/configuracion-inicial/components/tipo-proceso/hooks/UseEditarTipoAsiento.js","pages/configuracion-inicial/components/tipo-proceso/tipo-proceso.jsx","pages/configuracion-inicial/components/tipo-proceso/hooks/UseListTipoAsiento.js","pages/configuracion-inicial/components/tipo-proceso/hooks/UseCrearTipoAsiento.js"],"names":["Shopping","props","SvgIcon","viewBox","d","Heading","title","Icon","Stack","direction","alignItems","IconWrapper","sx","color","ConfigurePlanes","Card","padding","mb","Divider","my","Box","mt","Grid","container","spacing","item","xs","AppTextField","fullWidth","size","name","placeholder","FlexBox","justifyContent","gap","marginTop","Button","type","variant","Clasificacion","Configuracion","useNavigate","useState","pt","pb","md","StyledTextField","styled","TextField","theme","fontWeight","palette","text","primary","borderRadius","borderColor","action","disabled","hover","FlexRowAlign","children","display","StyledInputBase","InputBase","bordered","height","fontSize","width","maxWidth","backgroundColor","background","paper","border","breakpoints","down","SearchInput","icon_style","startAdornment","marginRight","Wrapper","top","left","position","transform","lightTheme","default","AppModal","open","handleClose","onClose","StyledPagination","TableRow","selected_row","alpha","light","content","main","Pagination","margin","SearchIcon","marginLeft","CustomTable","data","rowClick","showFooter","columnShape","hidePagination","tableData","useMemo","columns","useTable","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","Table","borderSpacing","borderCollapse","TableHead","map","headerGroup","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","paddingY","borderBottom","minWidth","textAlign","render","TableBody","row","getRowProps","onClick","original","cursor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","cells","cell","getCellProps","paddingLeft","paddingRight","marginY","count","length","shape","onChange","_e","currentPageNo","FlexBetween","ButtonBase","disableRipple","ArrowRightAlt","ShoppingBasket","Context","React","createContext","Delete","DeleteIcon","fill","Add","outline","right","error","minHeight","grey","HeadingWrapper","format","Date","marginBottom","flexWrap","General","ObtenerPlanCuentaService","axios","get","process","CrearPlanCuentaService","nivel","vPlanCuentaId","GuardarPlanCuentaService","codigo","nombreCuenta","moneda","valor","codigoIdentificador","debe","haber","post","EditarPlanCuentaService","id","delete","StyledAppModal","CreatePlanCuentaModal","editPlanCuenta","tipo","downXl","useMediaQuery","useContext","setContext","setSelectedMoneda","validationSchema","Yup","required","nullable","useFormik","initialValues","onSubmit","values","handlerSubmitGuardarPadre","resetForm","errors","handleChange","handleSubmit","touched","setFieldValue","isValid","setValues","useEffect","console","log","enqueueSnackbar","useSnackbar","ApiGuardar","status","message","UseGuardarPadrePlanCuenta","handlerSubmitGuardar","UseGuardarHijoPlanCuenta","style","maxHeight","sm","value","Boolean","helperText","select","event","target","SelectProps","native","IconComponent","KeyboardArrowDown","PlanCuentaColumns","Header","accessor","Cell","transition","isSelected","setTipo","openModal","setOpenModal","nombreClasificacion","clasificacionId","nombreClasificacionPadre","editar","setEditar","options","apiEditar","clasificacion","handlerOpen","e","handlerClose","UseEditarPlanCuenta","IconButton","Edit","alert","PlanCuentasList","t","useTranslation","filteredItem","setFilteredItem","searchValue","setSearchValue","listar","filter","result","listData","toLocaleLowerCase","match","toLowerCase","searchByNombre","UseListPlanCuenta","create","setCreate","setOptions","ApiCrearPlanCuenta","clasificaciones","UseCreatePlanCuenta","actualizarTable","setActualizarTableContext","Provider","lineHeight","endIcon","BodyTableCell","paddingTop","paddingBottom","secondary","divider","HeadTableCell","BodyTableCellV2","ObtenerProcesoService","CrearProcesoService","GuardarProcesoService","nombreAsiento","tipoAsientoId","nombreTipoAsiento","cuentas","CreateProcesoModal","editProceso","optionTipoAsiento","optionPlanCuenta","optionRol","setSelect","setSelectPlanCuenta","rol","items","setItems","hadlerClose","UseGuardarProceso","Autocomplete","getOptionLabel","autoSelect","isOptionEqualToValue","option","newValue","renderInput","params","label","autoHide","push","VPlanCuentaId","asientoId","i","codigoCliente","Fragment","ProcesoColumns","setOptionTipoAsiento","setOptionPlanCuenta","setOptionRol","ApiCrearProceso","tipoAsiento","planCuenta","UseEditarProceso","ProcesosList","searchByProceso","UseListProceso","UseCrearProceso","ObtenerTipoAsientoService","GuardarTipoAsientoService","EditarTipoAsientoService","CreateTipoAsientoModal","UseGuardarTipoAsiento","ClasificacionColumns","ApiEditarProceso","UseEditarTipoAsiento","TipoProceso","searchByNombreTipoAsiento","UseListTipoAsiento","UseCrearTipoAsiento","TipoAsientoColumns"],"mappings":"2LAQeA,EANE,SAAAC,GACf,OAAO,cAACC,EAAA,EAAO,yBAACC,QAAQ,aAAgBF,GAAK,aACzC,sBAAMG,EAAE,ySAEd,E,iCCceC,EAdC,SAAH,GAGN,IAFLC,EAAK,EAALA,MACAC,EAAI,EAAJA,KAEA,OAAO,eAACC,EAAA,EAAK,CAACC,UAAU,MAAMC,WAAW,SAAQ,UAC7C,cAACC,EAAA,EAAW,UACV,cAACJ,EAAI,CAACK,GAAI,CACVC,MAAO,oBAGT,cAAC,IAAE,UAAEP,MAEX,E,sECyFeQ,EArGS,WAEpB,OACI,eAACC,EAAA,EAAI,CAACH,GAAI,CACNI,QAAS,GACX,UACE,cAAC,IAAE,CAACC,GAAI,EAAE,SAAC,2BACX,cAACC,EAAA,EAAO,CAACN,GAAI,CACTO,GAAI,KAER,eAACC,EAAA,EAAG,CAACC,GAAI,EAAGJ,GAAI,EAAE,UACd,eAACK,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACvB,cAACF,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,EAAE,SACb,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,qCAqCf,eAACK,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACb,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,gBACX,cAACU,EAAA,EAAY,CACTC,WAAS,EAACC,KAAK,QACfC,KAAK,gBACLC,YAAY,sBAOpB,eAACT,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACb,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,eACX,cAACU,EAAA,EAAY,CACTC,WAAS,EAACC,KAAK,QACfC,KAAK,gBACLC,YAAY,sBAOpB,eAACT,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,EAAE,UACb,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,cACX,cAACU,EAAA,EAAY,CACTC,WAAS,EAACC,KAAK,QACfC,KAAK,gBACLC,YAAY,yBAQxB,cAACT,EAAA,EAAI,CAACC,WAAS,WACX,cAACD,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SACd,cAACM,EAAA,EAAO,CAACC,eAAe,WAAWC,IAAK,EAAGC,UAAW,EAAE,SACpD,cAACC,EAAA,EAAM,CAACC,KAAK,SAASC,QAAQ,YAAW,SAAC,uBAStE,EC1EeC,EA1BO,WAClB,OACI,cAACxB,EAAA,EAAI,CAACH,GAAI,CACNI,QAAS,EACTC,GAAI,GACN,SACE,eAACK,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,UACd,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,kBACX,cAACC,EAAA,EAAO,CAACN,GAAI,CACTO,GAAI,KAER,cAAC,IAAE,CAACF,GAAI,EAAE,SAAC,kBACX,cAACU,EAAA,EAAY,CACTC,WAAS,EAACC,KAAK,QACfC,KAAK,gBACLC,YAAY,uBAShC,E,kBCmBeS,UApCO,WACHC,cAAjB,IACA,EAAsDC,mBAAS,UAAS,mBAA9C,KAAwB,KAKlD,OACE,cAACtB,EAAA,EAAG,CAACuB,GAAI,EAAGC,GAAI,EAAE,SAChB,eAACtB,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACzB,cAACF,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SAChB,cAAC,EAAO,CAACpB,MAAM,gBAAgBC,KAAMP,MAEvC,cAACsB,EAAA,EAAI,CAACG,MAAI,EAACoB,GAAI,EAAGnB,GAAI,GAAG,SACvB,cAAC,IAAO,MAEV,cAACJ,EAAA,EAAI,CAACG,MAAI,EAACoB,GAAI,EAAGnB,GAAI,GAAG,SACvB,cAAC,EAAa,MAEhB,cAACJ,EAAA,EAAI,CAACG,MAAI,EAACoB,GAAI,GAAInB,GAAI,GAAG,SACxB,cAAC,IAAe,MAElB,cAACJ,EAAA,EAAI,CAACG,MAAI,EAACoB,GAAI,GAAInB,GAAI,GAAG,SACxB,cAAC,EAAe,MAElB,cAACJ,EAAA,EAAI,CAACG,MAAI,EAACoB,GAAI,EAAGnB,GAAI,GAAG,SACvB,cAAC,IAAY,MAEf,cAACJ,EAAA,EAAI,CAACG,MAAI,EAACoB,GAAI,EAAGnB,GAAI,GAAG,SACvB,cAAC,IAAW,UAKtB,C,6EC5CMoB,EAAkBC,YAAOC,IAAPD,EAAkB,gBACxCE,EAAK,EAALA,MAAK,MACA,CACL,4BAA6B,CAC3BC,WAAY,IACZrC,MAAOoC,EAAME,QAAQC,KAAKC,SAE5B,qCAAsC,CACpCC,aAAc,MACdC,YAAaN,EAAME,QAAQK,OAAOC,UAEpC,yEAA0E,CACxEF,YAAaN,EAAME,QAAQK,OAAOE,OAEpC,wBAAyB,CACvBR,WAAY,IACZrC,MAAOoC,EAAME,QAAQC,KAAKK,UAE5B,oCAAqC,CACnCP,WAAY,KAEd,qBAAsB,CACpBrC,MAAOoC,EAAME,QAAQC,KAAKK,UAE7B,IAMc9B,IAJM,SAAA1B,GACnB,OAAO,cAAC6C,EAAe,eAAK7C,GAC9B,C,qFCrBe0D,IAPM,SAAH,OAChBC,EAAQ,EAARA,SACG3D,EAAK,wBACJ,cAAC,IAAG,yBAAC4D,QAAQ,OAAOnD,WAAW,SAASuB,eAAe,UAAahC,GAAK,aAC1E2D,IACI,C,sFCJHE,EAAkBf,YAAOgB,IAAPhB,EAAkB,kBACxCE,EAAK,EAALA,MACAe,EAAQ,EAARA,SAAQ,UAERC,OAAQ,GACRC,SAAU,GACVC,MAAO,OACPC,SAAU,IACVlB,WAAY,IACZlC,QAAS,SACTsC,aAAc,MACdzC,MAAOoC,EAAME,QAAQC,KAAKC,QAC1BgB,gBAAiBpB,EAAME,QAAQmB,WAAWC,MAC1CC,OAAQR,EAAQ,oBAAgBf,EAAME,QAAQK,OAAOC,UAAa,QAAM,cACvER,EAAMwB,YAAYC,KAAK,KAAO,CAC7BN,SAAU,SACX,cACD,gBAAiB,CACfvD,MAAOoC,EAAME,QAAQC,KAAKK,WAC3B,KAiBYkB,IAbK,SAAA1E,GAClB,MAGIA,EAFF2E,kBAAU,MAAG,CAAC,EAAC,IAEb3E,EADF+D,gBAAQ,OAAO,EAEjB,OAAO,cAACF,EAAe,aAACE,SAAUA,EAAUa,eAAgB,cAAC,IAAU,CAACjE,GAAE,aACxEsD,SAAU,GACVY,YAAa,EACbjE,MAAO,iBACJ+D,MACM3E,GACb,C,mICjCM8E,EAAUhC,YAAO3B,IAAP2B,EAAY,gBAC1BE,EAAK,EAALA,MAAK,MACA,CACL+B,IAAK,MACLC,KAAM,MACNjE,QAAS,GACToD,SAAU,IACVD,MAAO,OACPb,aAAc,MACd4B,SAAU,WACVC,UAAW,wBACXd,gBAAiBe,YAAWnC,GAAS,OAASA,EAAME,QAAQmB,WAAWe,QACxE,IAacC,IAXE,SAAH,GAKP,IAJL1B,EAAQ,EAARA,SACA2B,EAAI,EAAJA,KACAC,EAAW,EAAXA,YACGvF,EAAK,iBAER,OAAO,cAAC,IAAK,CAACsF,KAAMA,EAAME,QAASD,EAAY,SAC3C,cAACT,EAAO,2BAAK9E,GAAK,aAAG2D,MAE3B,C,4LCTa8B,GAhBqB3C,YAAO4C,IAAP5C,EAAiB,gBACjDE,EAAK,EAALA,MACY,MACS,WADT,EAAZ2C,aACgC,CAChCvB,gBAAiBwB,YAAM5C,EAAME,QAAQE,QAAQyC,MAAO,IACpDZ,SAAU,WACV,WAAY,CACVF,IAAK,EACLC,KAAM,EACNd,MAAO,MACP4B,QAAS,KACT9B,OAAQ,OACRiB,SAAU,WACVb,gBAAiBpB,EAAME,QAAQE,QAAQ2C,OAEvC,CAAC,CAAC,IAC0BjD,YAAOkD,IAAPlD,EAAmB,gBACjDE,EAAK,EAALA,MAAK,MACA,CACL,4BAA6B,CAC3BiB,SAAU,GACVhB,WAAY,IACZrC,MAAOoC,EAAME,QAAQC,KAAKK,UAE5B,kCAAmC,CACjCH,aAAc,GACde,gBAAiB,cACjBxD,MAAOoC,EAAME,QAAQE,QAAQ2C,KAC7BxB,OAAO,aAAD,OAAevB,EAAME,QAAQE,QAAQ2C,OAE7C,yCAA0C,CACxC1C,aAAc,GACde,gBAAiB,cACjBxD,MAAOoC,EAAME,QAAQE,QAAQ2C,KAC7BxB,OAAO,aAAD,OAAevB,EAAME,QAAQE,QAAQ2C,OAE7C,oCAAqC,CACnCE,OAAQ,GACR5C,aAAc,GACdzC,MAAOoC,EAAME,QAAQE,QAAQ2C,KAC7BxB,OAAO,aAAD,OAAevB,EAAME,QAAQE,QAAQ2C,MAC3C,UAAW,CACT3B,gBAAiB,gBAGtB,K,GACgCtB,YAAOgB,IAAPhB,EAAkB,YAC5C,MACA,CACLkB,OAAQ,GACRC,SAAU,GACVE,SAAU,IACVD,MAAO,OACPjB,WAAY,IACZlC,QAAS,SACTsC,aAAc,MACde,gBAAiB,QACjBxD,MAVK,EAALoC,MAUaE,QAAQC,KAAKC,QAC3B,IAC+BN,YAAOoD,IAAPpD,EAAmB,YAC5C,MACA,CACLmB,SAAU,GACVkC,WAAY,SACZtB,YAAa,SACbjE,MALK,EAALoC,MAKaE,QAAQE,QAAQ2C,KAC9B,I,+BCwDcK,IAlHK,SAAApG,GAClB,IACEqG,EAKErG,EALFqG,KACAC,EAIEtG,EAJFsG,SACAC,EAGEvG,EAHFuG,WACAC,EAEExG,EAFFwG,YACAC,EACEzG,EADFyG,eAGIC,EAAYC,mBAAQ,kBAAMN,CAAI,GAAE,CAACA,IACjCO,EAAUD,mBAAQ,kBAAMH,CAAW,GAAE,CAACA,IAC5C,EAQIK,mBAAS,CACXD,UACAP,KAAMK,GACLI,YAAWC,cAAaC,gBAAeC,gBAVxCC,EAAa,EAAbA,cACAC,EAAiB,EAAjBA,kBACAC,EAAY,EAAZA,aACAC,EAAU,EAAVA,WACAC,EAAI,EAAJA,KACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SAUF,OAAO,eAACrG,EAAA,EAAG,WACP,cAAC,IAAS,UACR,eAACsG,EAAA,EAAK,2BAAKP,KAAe,IAAEvG,GAAI,CAChC+G,cAAe,SACfC,eAAgB,YAChB,UACE,cAACC,EAAA,EAAS,UACPR,EAAaS,KAAI,SAAAC,GAAW,OAAI,cAACpC,EAAA,EAAQ,2BAAKoC,EAAYC,uBAAqB,aAC3ED,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAAI,cAACC,EAAA,EAAS,2BAAKD,EAAOE,eAAeF,EAAOG,yBAAuB,IAAEzH,GAAI,CAC9G0H,SAAU,EACVpE,SAAU,GACVhB,WAAY,IACZqF,aAAc,EACdpE,MAAO+D,EAAO/D,MACdtD,MAAO,iBACP2H,SAAUN,EAAOM,SACjBpE,SAAU8D,EAAO9D,SACjB,eAAgB,CACdqE,UAAW,WAEb,SACOP,EAAOQ,OAAO,YACL,MACL,MAGf,cAACC,EAAA,EAAS,2BAAKvB,KAAmB,aAC/BG,EAAKO,KAAI,SAAAc,GAEV,OADAtB,EAAWsB,GACJ,cAACjD,EAAA,EAAQ,2BAAKiD,EAAIC,eAAa,IAAEC,QAASvC,GAAYA,EAASqC,EAAIG,UAAWnI,GAAI,CACvFyD,gBAAiB,mBACjB2E,OAAQzC,EAAW,UAAY,QAC/B,qBAAsB,CACpB0C,WAAY,IACZC,oBAAqB,MACrBC,uBAAwB,OAE1B,oBAAqB,CACnBC,YAAa,IACbX,UAAW,SACXY,qBAAsB,MACtBC,wBAAyB,QAE3B,SACKV,EAAIW,MAAMzB,KAAI,SAAA0B,GACjB,OAAO,cAACrB,EAAA,EAAS,2BAAKqB,EAAKC,gBAAc,IAAE7I,GAAI,CAC7C4D,OAAQ,EACRN,SAAU,GACVhB,WAAY,IACZrC,MAAO,iBACP,gBAAiB,CACf6I,YAAa,QAEf,eAAgB,CACdC,aAAc,SAEhB,SACOH,EAAKd,OAAO,UAEvB,MAEJ,cAKFhC,GAAkB,cAAClG,EAAA,EAAK,CAACE,WAAW,WAAWkJ,QAAS,EAAE,SACxD,cAAClE,EAAgB,CAACmE,MAAOrC,EAAYsC,OAAQC,MAAM,UAAUC,SAvEhD,SAACC,EAAIC,GACxBzC,EAASyC,EAAgB,EAC3B,MAwEK1D,GAAc,eAAC2D,EAAA,EAAW,CAACjI,IAAK,GAAI,UACjC,cAAC,IAAE,CAACrB,MAAM,iBAAiBqD,SAAU,GAAG,SAAC,8BAGzC,eAACkG,EAAA,EAAU,CAACC,eAAa,EAACzJ,GAAI,CAChCsD,SAAU,GACVhB,WAAY,IACZrC,MAAO,kBACP,UAAC,UAEG,cAACyJ,EAAA,EAAa,YAI1B,C,oGCxHMvF,EAAUhC,YAAO3B,IAAP2B,EAAY,YACrB,MACA,CACLoB,MAAO,GACPF,OAAQ,GACRJ,QAAS,OACTP,aAAc,MACd5C,WAAY,SACZoE,YAAa,SACb7C,eAAgB,SAChBoC,gBATK,EAALpB,MASuBE,QAAQE,QAAQyC,MACxC,IAScnF,IAPK,SAAH,GAGV,IAFLiD,EAAQ,EAARA,SACG3D,EAAK,iBAER,OAAO,cAAC8E,EAAO,2BAAK9E,GAAK,aAAG2D,IAC9B,C,8DCZe2G,IANQ,SAAAtK,GACrB,OAAO,cAAC,IAAO,yBAACE,QAAQ,aAAgBF,GAAK,aACzC,sBAAMG,EAAE,6OAEd,C,mCCNA,6CACaoK,EADb,OACuBC,EAAMC,e,8DCOdC,IANA,SAAA1K,GACb,OAAO,cAAC,IAAO,yBAACE,QAAQ,aAAgBF,GAAK,aACzC,sBAAMG,EAAE,8LAEd,C,8DCKewK,IATI,SAAA3K,GACjB,OAAO,eAAC,IAAO,yBAACE,QAAQ,aAAgBF,GAAK,cACzC,sBAAMG,EAAE,oDAAoDyK,KAAK,iBACjE,sBAAMzK,EAAE,oDAAoDyK,KAAK,iBACjE,sBAAMzK,EAAE,mDAAmDyK,KAAK,iBAChE,sBAAMzK,EAAE,wsBAAwsByK,KAAK,oBAE3tB,C,8DCDeC,IANH,SAAA7K,GACV,OAAO,cAAC,IAAO,yBAACE,QAAQ,aAAgBF,GAAK,aACzC,sBAAMG,EAAE,6LAEd,C,kQCQuB2C,YAAOuC,IAAPvC,EAAiB,YACjC,EAALE,MAAK,MACA,CACLmB,SAAU,IACVoE,SAAU,IACVuC,QAAS,OACT/J,QAAS,SACV,IAC0B+B,YAAOY,IAAPZ,EAAqB,YACzC,MACA,CACLiC,IAAK,EACLgG,MAAO,EACP7G,MAAO,GACPF,OAAQ,GACRX,aAAc,MACd4B,SAAU,WACVb,gBARK,EAALpB,MAQuBE,QAAQ8H,MAAMjF,KACtC,IAC0BjD,YAAOY,IAAPZ,EAAqB,YACzC,MACA,CACLmI,UAAW,IACXlC,OAAQ,UACR1F,aAAc,MACde,gBALK,EAALpB,MAKuBE,QAAQgI,KAAK,KACrC,I,eC7BYC,GCSLC,YAAO,IAAIC,KAAQ,cAOnBD,YAAO,IAAIC,KAAQ,cAOnBD,YAAO,IAAIC,KAAQ,cAOnBD,YAAO,IAAIC,KAAQ,cAMnBD,YAAO,IAAIC,KAAQ,gBASnBD,YAAO,IAAIC,KAAQ,gBASnBD,YAAO,IAAIC,KAAQ,gBASnBD,YAAO,IAAIC,KAAQ,gB,OD/DGvI,YAAOf,IAAPe,EAAgB,gBAC5CE,EAAK,EAALA,MAAK,oBAELsI,aAAc,GACdC,SAAU,QACTvI,EAAMwB,YAAYC,KAAK,KAAO,CAC7B,oBAAqB,CACnBP,MAAO,QAET,uBAAwB,CACtBC,SAAU,OACVmH,aAAc,KAEjB,I,mCExBH,wFAwDeE,IAlDC,WACZ,OAEI,eAAC,IAAI,CAAC7K,GAAI,CACNI,QAAS,GACX,UACE,cAAC,IAAE,CAACC,GAAI,EAAE,SAAC,YAEX,cAAC,IAAO,CAACL,GAAI,CACTO,GAAI,KAGR,eAAC,IAAG,CAACE,GAAI,EAAGJ,GAAI,EAAE,UACd,eAAC,IAAI,CAACM,WAAS,EAACC,QAAS,EAAE,UACvB,eAAC,IAAI,CAACC,MAAI,EAACC,GAAI,GAAG,UACd,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,mBACX,cAAC,IAAY,CACTW,WAAS,EAACC,KAAK,QACfC,KAAK,gBACLC,YAAY,sBAQpB,cAAC,IAAI,CAACN,MAAI,EAACoB,GAAI,EAAGnB,GAAI,KAItB,cAAC,IAAI,CAACD,MAAI,EAACoB,GAAI,EAAGnB,GAAI,QAK1B,cAAC,IAAI,CAACH,WAAS,WACX,cAAC,IAAI,CAACE,MAAI,EAACC,GAAI,GAAG,SACd,cAAC,IAAO,CAACO,eAAe,WAAWC,IAAK,EAAGC,UAAW,EAAE,SACpD,cAAC,IAAM,CAACE,KAAK,SAASC,QAAQ,YAAW,SAAC,uBAStE,C,iSCpDO,SAAeoJ,IAAwB,+BAE7C,sDAFM,wGACUC,IAAMC,IAAI,GAAD,OAAIC,oCAAyB,oBAAkB,oFACxE,sBACM,SAAeC,EAAuB,EAAD,kCAE3C,sDAFM,WAAsCC,EAAOC,GAAa,2FAChDL,IAAMC,IAAI,GAAD,OAAIC,oCAAyB,wCAAgCE,EAAK,kBAAUC,IAAgB,oFACrH,sBACM,SAAeC,EAAyB,GAAD,+BAE7C,sDAFM,+GAAqI,OAA3FC,EAAM,EAANA,OAAQC,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAmB,EAAnBA,oBAAqBP,EAAK,EAALA,MAAOQ,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOR,EAAa,EAAbA,cAAa,SAC3HL,IAAMc,KAAK,GAAD,OAAIZ,oCAAyB,mBAAmB,CAAEK,SAAQC,eAAcC,SAAQC,QAAOC,sBAAqBP,QAAOQ,OAAMC,QAAOR,kBAAiB,KAAD,+EAC1K,sBAOM,SAAeU,EAAwB,GAAD,+BAE5C,sDAFM,WAAuCC,GAAE,2FAC/BhB,IAAMiB,OAAO,GAAD,OAAIf,oCAAyB,kCAA0Bc,GAAM,CAAC,GAAG,KAAD,+EAC5F,sB,oBCFKE,EAAiB9J,YAAOuC,IAAPvC,EAAiB,YAC/B,EAALE,MAAK,MACF,CACHmB,SAAU,IACVoE,SAAU,IACVuC,QAAS,OACT/J,QAAS,SACZ,IAwMc8L,GAvMY/J,YAAOY,IAAPZ,EAAqB,YACvC,MACF,CACHiC,IAAK,EACLgG,MAAO,EACP7G,MAAO,GACPF,OAAQ,GACRX,aAAc,MACd4B,SAAU,WACVb,gBARK,EAALpB,MAQuBE,QAAQ8H,MAAMjF,KACxC,IAC0BjD,YAAOY,IAAPZ,EAAqB,YACvC,MACF,CACHmI,UAAW,IACXlC,OAAQ,UACR1F,aAAc,MACde,gBALK,EAALpB,MAKuBE,QAAQgI,KAAK,KACvC,IAE6B,SAAH,GAMpB,IAAD,EALF5F,EAAI,EAAJA,KACAe,EAAI,EAAJA,KACAb,EAAO,EAAPA,QACAsH,EAAc,EAAdA,eACAC,EAAI,EAAJA,KAEMC,EAASC,aAAc,SAAAjK,GAAK,OAAIA,EAAMwB,YAAYC,KAAK,KAAK,IAClE,EAA8ByI,qBAAW3C,KAAQ,mBAAjC4C,GAAF,KAAY,MAC1B,EAA4C1K,mBAAS,KAAI,mBAAlC2K,GAAF,KAAmB,MAKlCC,EAAmBC,MAAaxD,OAAK,GACvCmC,OAAQqB,MAAaC,SAAS,wBAC9BrB,aAAcoB,MAAaC,SAAS,wBACpCpB,OAAQmB,MAAaC,SAAS,yBAAuB,6BACvCD,MAAaC,SAAS,yBAAuB,sBACpDD,MAAaC,SAAS,uBAAqB,oCAC7BD,MAAaC,SAAS,wBAAsB,mBAC7DD,MAAaE,YAAU,sBACpBF,MAAaC,YAAU,qBACxBD,MAAaC,SAAS,sBAAoB,sBACzCD,MAAaC,SAAS,uBAAqB,8BACnCD,MAAaC,SAAS,6BAA2B,IAEpE,EAUIE,YAAU,CACVC,cAAerH,EACfgH,mBAEAM,SAAS,WAAD,sCAAE,WAAOC,GAAM,2EACnBT,GAAW,GACPL,GAGAe,IAEJrI,IACAsI,IAAW,2CACd,mDATQ,KAbTF,EAAM,EAANA,OACAG,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAY,EAAZA,aACAC,EAAO,EAAPA,QAEAC,GADO,EAAPC,QACa,EAAbD,eACAL,EAAS,EAATA,UACAO,EAAS,EAATA,UAiBJC,qBAAU,WACNC,QAAQC,IAAIzB,GACZsB,EAAUhI,EACd,GAAG,CAACA,IAEJ,MCnGqC,SAACuH,GACtC,IAAQa,EAAoBC,cAApBD,gBAIFE,EAAU,iDAAG,gHACQ3C,EAAyB4B,GAAQ,KAAD,WACpC,IADXvH,EAAI,EAAJA,MACCuI,OACLH,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,YAGzCoM,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,UAC5C,2CACJ,kBARe,mCAShB,MAAO,CACHwL,0BAb8B,WAC9Bc,GACJ,EAaJ,CDkFyCG,CAA0BlB,GAAvDC,EAAyB,EAAzBA,0BAER,OAFuE,YEnGnC,SAACD,GACrC,IAAQa,EAAoBC,cAApBD,gBAIFE,EAAU,iDAAG,gGACI,OAAnBJ,QAAQC,IAAIZ,GAAO,SACI5B,EAAyB4B,GAAQ,KAAD,WACpC,IADXvH,EAAI,EAAJA,MACCuI,OACLH,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,YAGzCoM,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,UAC5C,2CACJ,kBATe,mCAUhB,MAAO,CACH0M,qBAdyB,WACzBJ,GACJ,EAcJ,CFkFgBK,CAAyBpB,IAC9B,eAAChB,EAAc,CAACtH,KAAMA,EAAMC,YAAaC,EAAQ,UACpD,cAAC,IAAE,CAAC8F,aAAc,EAAE,SACP,SAARyB,GAA2B,QAARA,EAAiB,wBAAuB,uBAGhE,uBAAMY,SAAUM,EAAa,UACzB,cAAC,IAAS,CAACgB,MAAO,CACdC,UAAWlC,EAAS,IAAM,QAC5B,SACE,eAAC3L,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACvB,eAACF,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,WACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,SACLC,YAAY,SACZsN,MAAOxB,EAAO3B,OACdlC,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQjC,QAAU8B,EAAO9B,QACxCqD,WAAYpB,EAAQjC,QAAU8B,EAAO9B,YAI7C,eAAC5K,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,UACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZsN,MAAOxB,EAAO9B,MACd/B,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQpC,OAASiC,EAAOjC,OACvCwD,WAAYpB,EAAQpC,OAASiC,EAAOjC,WAE5C,eAACzK,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,UACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZsN,MAAOxB,EAAOxB,MACdrC,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQ9B,OAAS2B,EAAO3B,OACvCkD,WAAYpB,EAAQ9B,OAAS2B,EAAO3B,WAG5C,eAAC/K,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,WACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,eACLC,YAAY,SACZsN,MAAOxB,EAAO1B,aACdnC,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQhC,cAAgB6B,EAAO7B,cAC9CoD,WAAYpB,EAAQhC,cAAgB6B,EAAO7B,kBAEnD,eAAC7K,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,WACX,eAACU,EAAA,EAAY,CAAC6N,QAAM,EAAC5N,WAAS,EAACC,KAAK,QAAQC,KAAK,SAASuN,MAAOxB,EAAOzB,OAAQpC,SAjHzE,SAAAyF,GACvBrB,EAAc,SAAUqB,EAAMC,OAAOL,OACrChC,EAAkBoC,EAAMC,OAAOL,MACnC,EA8GkIM,YAAa,CACvHC,QAAQ,EACRC,cAAeC,KACjB,UACE,wBAAQT,MAAM,IAAG,SAAC,cAClB,wBAAQA,MAAM,IAAG,SAAC,gBAI1B,eAAC/N,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,SACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLC,YAAY,OACZsN,MAAOxB,EAAOtB,KACdvC,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQ5B,MAAQyB,EAAOzB,MACtCgD,WAAYpB,EAAQ5B,MAAQyB,EAAOzB,KACnClK,KAAK,cAGb,eAACf,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,UACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZsN,MAAOxB,EAAOrB,MACdxC,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQ3B,OAASwB,EAAOxB,OACvC+C,WAAYpB,EAAQ3B,OAASwB,EAAOxB,MACpCnK,KAAK,mBAKrB,cAACf,EAAA,EAAI,CAACC,WAAS,WACX,cAACD,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SACd,eAACM,EAAA,EAAO,CAACC,eAAe,WAAWC,IAAK,EAAGC,UAAW,EAAE,UACpD,cAACC,EAAA,EAAM,CAACR,WAAS,EAACU,QAAQ,WAAWwG,QAASrD,EAAQ,SAAC,aAGvD,cAACrD,EAAA,EAAM,CAACR,WAAS,EAACS,KAAK,SAASC,QAAQ,YAAW,SAAG,wBAQ9E,G,6CGtNMyN,EAAoB,CACtB,CACIC,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,SACRC,SAAU,gBAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,OACRC,SAAU,QAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,WACRC,SAAU,WACVC,KAAM,YAEC,IADHtH,EAAG,EAAHA,IAEA,EAQIA,EAAIG,SACFmG,GARI,EAANhD,OACY,EAAZC,aACM,EAANC,OACK,EAALC,MACK,EAALN,MACI,EAAJQ,KACK,EAALC,MAEU,CACVtI,SAAU,GACViM,WAAY,aACZtP,MAAO+H,EAAIwH,WAAa,QAAU,kBAEtC,EAAwB1N,mBAAS,IAAG,mBAA7BsK,EAAI,KAAEqD,EAAO,KACpB,ECrDuB,SAAE1D,GACjC,MAAkCjK,oBAAS,GAAM,mBAA1C4N,EAAS,KAAEC,EAAY,KAE9B,EAA4B7N,mBAAS,CACjCiK,GAAI,EACJ6D,oBAAqB,GACrBC,gBAAiB,EACjBC,yBAA0B,KAC5B,mBALKC,EAAM,KAAEC,EAAS,KAMxB,EAA8BlO,mBAAS,CACnC,CAAEiK,GAAI,EAAG6D,oBAAqB,gBAChC,mBAFKK,EAAO,KAIRC,GAJoB,KAIX,iDAAG,gHACSpE,EAAwBC,GAAI,KAAD,WAA1CrG,EAAI,EAAJA,KACRsK,EAAUtK,EAAKA,KAAKyK,eAAe,2CACtC,kBAHc,oCAWf,MAAO,CACHJ,SACAE,UACAP,YACAU,YAXgB,SAACC,GACjBV,GAAa,GACbO,GACJ,EASII,aARiB,SAACD,GAClBV,GAAa,EACjB,EAQJ,CDsB6EY,CAAoBvI,EAAIG,SAAS4D,IAA3F2D,EAAS,EAATA,UAAmBY,GAAF,EAANP,OAAoB,EAAZO,cAAcF,EAAW,EAAXA,YAAoB,EAAPH,QACrD,OAAO,eAAC,WAAQ,WACZ,cAACO,EAAA,EAAU,CACPtI,QAAS,WACLuH,EAAQ,OAEZ,EAAE,SAEF,cAAC,IAAa,CAACzP,GAAI,CACfsD,SAAU,GACVrD,MAAO,qBAGf,cAACuQ,EAAA,EAAU,CAACtI,QAASkI,EAAY,SAC7B,cAACK,EAAA,EAAI,CAACzQ,GAAI,CACNsD,SAAU,GACVrD,MAAO,qBAGf,cAACuQ,EAAA,EAAU,CAACtI,QAAS,WAAQwI,MAAM,oBAAqB,EAAE,SACtD,cAAC3G,EAAA,EAAM,CAAC/J,GAAIsO,MAEhB,cAAC,EAAqB,CAACnC,gBAAc,EAACC,KAAMA,EAAMzH,KAAM+K,EAAWhK,KAAMsC,EAAIG,SAAUtD,QAASyL,MAExG,IAEOnB,I,yBEvBAwB,IA3CS,WACtB,IACEC,EACEC,cADFD,EAEF,ECjB+B,WAE/B,MAAwC9O,mBAAS,IAAG,mBAA7CgP,EAAY,KAAEC,EAAe,KACpC,EAAsCjP,mBAAS,IAAG,mBAA3CkP,EAAW,KAAEC,EAAc,KAM5BC,EAAM,iDAAG,gHACUpG,IAA2B,KAAD,WAAzCpF,EAAI,EAAJA,KACRqL,EAAgBrL,EAAKA,MAAK,2CAC3B,kBAHW,mCAIZ,MAAO,CACLoL,eACAC,kBACAC,cACAC,iBACAE,OAba,WACb,IAAMC,ECVoB,SAACC,EAAUL,GACrC,OAAIA,EAAY9H,OAAS,EACFmI,EAASF,QAAO,SAAAtQ,GAAI,OAAIA,EAAK0K,aAAa+F,oBAAoBC,MAAMP,EAAYQ,cAAc,IAG5GH,CAEX,CDGiBI,CAAeX,EAAcE,GAC5CD,EAAgBK,EAClB,EAWEF,SAEJ,CDJwEQ,GAAtDZ,GAAF,EAANK,OAAoB,EAAZL,cAAcI,EAAM,EAANA,OAAQF,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eACnD,EGnBiC,WAC/B,MAAkCnP,oBAAS,GAAM,mBAA1C4N,EAAS,KAAEC,EAAY,KAE9B,EAA4B7N,mBAAS,CACjCsK,KAAM,GACNL,GAAI,GACJT,OAAQ,GACRC,aAAc,GACdC,OAAQ,IACRC,MAAO,IACPC,oBAAqB,IACrBP,MAAO,IACPQ,KAAM,IACNC,MAAO,IACPR,cAAe,MACjB,mBAZKuG,EAAM,KAAEC,EAAS,KAaxB,EAA8B9P,mBAAS,CACnC,CAAEiK,GAAI,EAAG6D,oBAAqB,gBAChC,mBAFKK,EAAO,KAAE4B,EAAU,KAIpBC,EAAkB,iDAAG,gHACA5G,EAAuB,EAAG,GAAG,KAAD,WAA3CxF,EAAI,EAAJA,KACRkM,EAAU,2BAAKD,GAAM,IAAErG,OAAQ5F,EAAKA,KAAK4F,OAAQH,MAAOzF,EAAKA,KAAKyF,SAClE0G,EAAWnM,EAAKA,KAAKqM,iBAAiB,2CACzC,kBAJuB,mCAYxB,MAAO,CACH9B,UACA0B,SACAC,YACAlC,YACAU,YAZgB,SAACC,GACjBV,GAAa,GACbmC,GACJ,EAUIxB,aATiB,SAACD,GAClBV,GAAa,EACjB,EAQIjK,KAAM,CACFiM,SACA1B,WAGZ,CHzB+E+B,GAArEL,EAAM,EAANA,OAA4BjC,GAAb,EAAPO,QAAkB,EAAT2B,UAAoB,EAATlC,WAAWU,EAAW,EAAXA,YAAaE,EAAY,EAAZA,aAC5D,EAAqDxO,oBAAS,GAAM,mBAA7DmQ,EAAe,KAAEC,EAAyB,KAKjD,OAJAvE,qBAAU,WACRuD,IACAgB,GAA0B,EAC5B,GAAG,CAAClB,EAAaiB,IAEf,cAAC,IAAQE,SAAQ,CAAC1D,MAAO,CAACwD,EAAiBC,GAA2B,SACpE,eAAC/R,EAAA,EAAI,CAACH,GAAI,CACRI,QAAS,GACT,UACA,cAAC,IAAE,CAACC,GAAI,EAAE,SAAC,iBACX,cAACC,EAAA,EAAO,CAACN,GAAI,CACXO,GAAI,KAEN,eAACC,EAAA,EAAG,CAACC,GAAI,EAAGJ,GAAI,EAAE,UAChB,cAAC,IAAI,CAAC+R,WAAY,IAAI,SAAE,2CAGxB,uBACA,eAAC,IAAc,CAAC/Q,eAAe,gBAAgBvB,WAAW,SAAQ,UAChE,cAACiE,EAAA,EAAW,CAACX,SAAU,OAAQjC,YAAY,qBAAqBiI,SAAU,SAAAiH,GAAC,OAAIY,EAAeZ,EAAEvB,OAAOL,MAAM,IAC7G,cAACjN,EAAA,EAAM,CACLE,QAAQ,YACR2Q,QAAS,cAACnI,EAAA,EAAG,IACbhC,QAASkI,EAAY,SAEpBQ,EAAE,8BAGP,cAACnL,EAAA,EAAW,CAACI,YAAasJ,EAAmBzJ,KAAMoL,IACnD,cAAC,EAAqB,CAACpL,KAAMiM,EAAQvF,KAAM,QAASzH,KAAM+K,EAAW7K,QAASyL,WAKxF,C,kXItDagC,EAAgBnQ,YAAOoF,IAAPpF,EAAkB,gBAC7CE,EAAK,EAALA,MAAK,MACA,CACLiB,SAAU,GACVhB,WAAY,IACZiQ,WAAY,SACZC,cAAe,SACfvS,MAAOoC,EAAME,QAAQC,KAAKiQ,UAC1B9K,aAAa,aAAD,OAAenD,YAAWnC,GAASA,EAAME,QAAQgI,KAAK,KAAOlI,EAAME,QAAQmQ,SACvF,kBAAmB,CACjB5J,YAAa,IAEf,iBAAkB,CAChBC,aAAc,IAEjB,IACY4J,EAAgBxQ,YAAOmQ,EAAPnQ,EAAsB,YAC5C,MACA,CACLoQ,WAAY,OACZC,cAAe,OACflQ,WAAY,IACZrC,MALK,EAALoC,MAKaE,QAAQC,KAAKC,QAC3B,IAIYmQ,EAAkBzQ,YAAOoF,IAAPpF,EAAkB,gBAC/CE,EAAK,EAALA,MAAK,MACA,CACLiB,SAAU,GACVhB,WAAY,IACZiQ,WAAY,OACZC,cAAe,OACf7K,aAAa,aAAD,OAAenD,YAAWnC,GAASA,EAAME,QAAQgI,KAAK,KAAOlI,EAAME,QAAQmQ,SACvF,kBAAmB,CACjB5J,YAAa,GACbxG,WAAY,KAEd,iBAAkB,CAChByG,aAAc,GACdvF,SAAU,IAEb,I,GAC8BrB,YAAOyQ,EAAPzQ,EAAwB,YAChD,MACA,CACLG,WAAY,IACZiQ,WAAY,OACZC,cAAe,OACfvS,MALK,EAALoC,MAKaE,QAAQC,KAAKC,QAC3B,I,gBCrDM,SAAeoQ,IAAqB,+BAE1C,sDAFM,wGACU9H,IAAMC,IAAI,GAAD,OAAIC,oCAAyB,gBAAc,oFACpE,sBACM,SAAe6H,IAAmB,+BAExC,sDAFM,wGACU/H,IAAMC,IAAI,GAAD,OAAIC,oCAAyB,uBAAqB,oFAC3E,sBACM,SAAe8H,EAAsB,GAAD,+BAE1C,sDAFM,uGAAmG,OAA5DC,EAAa,EAAbA,cAAeC,EAAa,EAAbA,cAAelH,EAAE,EAAFA,GAAImH,EAAiB,EAAjBA,kBAAmBC,EAAO,EAAPA,QAAO,SACzFpI,IAAMc,KAAK,GAAD,OAAIZ,oCAAyB,eAAe,CAAE+H,gBAAeC,gBAAelH,KAAImH,oBAAmBC,YAAW,KAAD,+EACvI,sB,8BCUKlH,GAAiB9J,YAAOuC,IAAPvC,EAAiB,YAC/B,EAALE,MAAK,MACF,CACHmB,SAAU,IACVoE,SAAU,IACVuC,QAAS,OACT/J,QAAS,SACZ,IAsTcgT,IArTYjR,YAAOY,IAAPZ,EAAqB,YACvC,MACF,CACHiC,IAAK,EACLgG,MAAO,EACP7G,MAAO,GACPF,OAAQ,GACRX,aAAc,MACd4B,SAAU,WACVb,gBARK,EAALpB,MAQuBE,QAAQ8H,MAAMjF,KACxC,IAC0BjD,YAAOY,IAAPZ,EAAqB,YACvC,MACF,CACHmI,UAAW,IACXlC,OAAQ,UACR1F,aAAc,MACde,gBALK,EAALpB,MAKuBE,QAAQgI,KAAK,KACvC,IAE0B,SAAH,GASjB,IARH5F,EAAI,EAAJA,KACAe,EAAI,EAAJA,KACAb,EAAO,EAAPA,QACAwO,EAAW,EAAXA,YACAjH,EAAI,EAAJA,KACAkH,EAAiB,EAAjBA,kBACAC,EAAgB,EAAhBA,iBACAC,EAAS,EAATA,UAEMnH,EAASC,aAAc,SAAAjK,GAAK,OAAIA,EAAMwB,YAAYC,KAAK,KAAK,IAClE,EAA4BhC,mBAAS,MAAK,mBAAnC8M,EAAM,KAAE6E,EAAS,KACxB,EAAoC3R,mBAAS,IAAG,mBAChD,GADiB,KAAe,KACgBA,mBAAS,CAAC,CACtDiK,GAAI,EACJR,aAAc,GACdD,OAAQ,OACT,mBAJsBoI,GAAF,KAAqB,MAK5C,EAAkC5R,mBAAS,CAAC,CACxCiK,GAAI,EACJ4H,IAAK,MACN,mBACH,IAJgB,KAAc,KAIApH,qBAAW3C,MAAQ,qBAAjC4C,IAAF,MAAY,OAC1B,GAA0B1K,mBAAS,IAAG,qBAA/B8R,GAAK,MAAEC,GAAQ,MA4BhBnH,GAAmBC,MAAaxD,MAAM,CACxC6J,cAAerG,MAAaC,SAAS,wBACrCqG,cAAetG,MAAaC,SAAS,8BACrCb,GAAIY,MAAaE,WACjBqG,kBAAmBvG,MAAaC,SAAS,2BACzCuG,QAASxG,QAEb,GAUIG,YAAU,CACVC,cAAerH,EACfgH,oBAEAM,SAAS,WAAD,sCAAE,WAAOC,GAAM,2EACfoG,IAGAjF,GAAqBnB,GACrB6G,KACAtH,IAAW,IACd,2CACJ,mDARQ,KAbTS,GAAM,GAANA,OACAG,GAAM,GAANA,OACAC,GAAY,GAAZA,aACAC,GAAY,GAAZA,aACAC,GAAO,GAAPA,QAGAJ,IAFO,GAAPM,QACa,GAAbD,cACS,GAATL,WACAO,GAAS,GAATA,UAeJC,qBAAU,WAEV,GAAG,CAACvB,IACJ,OClI6B,WAC7B,IAAQ0B,EAAoBC,cAApBD,gBAIFE,EAAU,iDAAG,WAAOf,GAAM,mFACT,OAAnBW,QAAQC,IAAIZ,GAAO,SACI8F,EAAsB9F,GAAQ,KAAD,WACjC,IADXvH,EAAI,EAAJA,MACCuI,OACLH,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,YAGzCoM,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,UAC5C,2CACJ,gBATe,sCAUhB,MAAO,CACH0M,qBAdyB,SAACnB,GAC1Be,EAAWf,EACf,EAcJ,CDgHqC8G,GAAzB3F,GAAoB,GAApBA,qBACF0F,GAAc,WAChBjP,IACAsI,KACA0G,GAAS,IACTJ,EAAU,KACd,EACA,OAAO,gBAACxH,GAAc,CAACtH,KAAMA,EAAMC,YAAakP,GAAY,UACxD,eAAC,IAAE,CAACnJ,aAAc,EAAE,SACf0I,EAAc,iBAAmB,sBAGtC,wBAAMrG,SAAU,SAACqD,GACbzC,QAAQC,IAAIZ,IACZW,QAAQC,IAAI+F,IACZtG,GAAa+C,EACjB,EAAE,UACE,eAAC,IAAS,CAAC/B,MAAO,CACdC,UAAWlC,EAAS,IAAM,QAC5B,SACE,gBAAC3L,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACvB,gBAACF,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,eAAC,IAAE,CAACT,GAAI,EAAE,SAAC,mBACX,eAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,gBACLC,YAAY,qBACZsN,MAAOxB,GAAO+F,cACd5J,SAAUiE,GACVhD,MAAOqE,QAAQnB,GAAQyF,eAAiB5F,GAAO4F,eAC/CrE,WAAYpB,GAAQyF,eAAiB5F,GAAO4F,mBAGpD,gBAACtS,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,EAAG1N,GAAI,GAAG,UACrB,eAAC,IAAE,CAACT,GAAI,EAAE,SAAC,iBACX,eAAC2T,EAAA,EAAY,CACThT,WAAS,EACTiT,eAAgB,SAACX,GAAiB,OAAKA,EAAkBJ,iBAAiB,EAC1EjD,QAASqD,EACTY,YAAY,EACZzF,MAAOG,GAAkB,KACzB3N,KAAK,QACLkT,qBAAsB,SAACC,EAAQ3F,GAC3B,OAAIA,GACAb,QAAQC,IAAI,mBACJuG,EAAO3F,QAAUA,EAAMA,QAE/Bb,QAAQC,IAAI,yBACL,EAEf,EACAzE,SAAU,SAACyF,EAAOwF,GACE,MAAZA,GACAZ,EAAUY,GACV3G,GAAU,2BAAKT,IAAM,IAAEgG,cAAeoB,EAAStI,GAAImH,kBAAmBmB,EAASnB,qBAC/EtF,QAAQC,IAAIwG,IAEZZ,EAAU,KAElB,EAEAa,YACI,SAACC,GAAM,OAAK,eAACnS,EAAA,EAAS,2BACdmS,GAAM,IACVC,MAAM,cACNnK,MAAOqE,QAAQnB,GAAQ2F,mBAAqB9F,GAAO8F,mBACnDvE,WAAYpB,GAAQ2F,mBAAqB9F,GAAO8F,oBAClD,OAId,eAACxS,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,GAAI1N,GAAI,GAAG,SACtB,eAACN,EAAA,EAAG,CAACD,GAAI,EAAE,SACP,gBAAC,IAAS,CAACkU,UAAU,EAAM,UACvB,eAACjT,EAAA,EAAM,CACHE,QAAQ,YACR2Q,QAAS,eAACnI,EAAA,EAAG,IACbhC,QA3IV,WAClB0L,GAAMc,KAAK,CACP3I,GAAI6H,GAAM1K,OACVoC,OAAQ,GACRC,aAAc,GACdoJ,cAAe,EACfC,UAAW,EACXjB,IAAK,SAGTE,GAAS,YAAID,KACblG,GAAU,2BAAKT,IAAM,IAAEkG,QAASS,KACpC,EA+HuD,SAEtBhD,YAAE,sBAEP,gBAAC9J,EAAA,EAAK,CAAC9G,GAAI,CACP4H,SAAU,KACZ,UACE,eAACX,EAAA,EAAS,UACN,gBAAClC,EAAA,EAAQ,WACL,eAAC4N,EAAa,CAACpP,MAAO,IAAI,SAAC,WAC3B,eAACoP,EAAa,CAACpP,MAAO,IAAI,SAAC,kBAC3B,eAACoP,EAAa,UAAC,QACf,eAACA,EAAa,UAAC,gBAIvB,eAAC5K,EAAA,EAAS,UACL6L,GAAM1M,KAAI,SAACrG,EAAMgU,GAAC,OAAK,gBAAC9P,EAAA,EAAQ,WAC7B,eAACuN,EAAa,UACV,eAACvR,EAAA,EACG,CACAC,WAAS,EACTC,KAAK,QACLC,KAAK,OACLsT,MAAM,SACN/F,MAAOmF,GAAMiB,GAAGvJ,WAIxB,eAACgH,EAAa,UACV,eAAC0B,EAAA,EAAY,CACThT,WAAS,EACTiT,eAAgB,SAAChE,GAAO,OAAKA,EAAQ1E,YAAY,EAEjD0E,QAASsD,EACTW,YAAY,EAEZzF,MAAOmF,GAAMiB,GAAKjB,GAAMiB,GAAK,KAC7B5T,KAAK,QACLkT,qBAAsB,SAACC,EAAQ3F,GAC3B,QAAIA,GACQ2F,EAAO3F,QAAUA,EAAMA,KAIvC,EACArF,SAAU,SAACyF,EAAOwF,GACE,MAAZA,GACAX,EAAoBW,GACpBT,GAAMiB,GAAGF,cAAgBN,EAAStI,GAClC6H,GAAMiB,GAAGtJ,aAAe8I,EAAS9I,aACjCqI,GAAMiB,GAAGvJ,OAAS+I,EAAS/I,OAC3BuI,GAAS,YAAID,OAEbF,EAAoB,MACpBE,GAAMiB,GAAGF,cAAgB,GACzBf,GAAMiB,GAAGtJ,aAAe,GACxBqI,GAAMiB,GAAGvJ,OAAS,GAClBuI,GAAS,YAAID,KAErB,EAEAU,YACI,SAACC,GAAM,OAAK,eAACnS,EAAA,EAAS,2BACdmS,GAAM,IACVC,MAAM,cACNnK,MAAOqE,QAAQnB,GAAQ0F,eAAiB7F,GAAO6F,eAC/CtE,WAAYpB,GAAQ0F,eAAiB7F,GAAO6F,gBAC9C,MAKd,eAACX,EAAa,UACV,eAACvR,EAAA,EAAY,CAAC6N,QAAM,EAAC5N,WAAS,EAACC,KAAK,QAAQC,KAAK,eAAeuN,MAAOmF,GAAMiB,GAAGlB,IAAKvK,SAAU,SAACiH,GAC5FzC,QAAQC,IAAIwC,EAAEvB,OAAOL,OACrBmF,GAAMiB,GAAGlB,IAAMtD,EAAEvB,OAAOL,MACxBb,QAAQC,IAAI+F,IACZC,GAAS,YAAID,IACjB,EAAG7E,YAAa,CACZC,QAAQ,EACRC,cAAeC,KAChBP,WAAYpB,GAAQ0F,eAAiB7F,GAAO6F,cAAe5I,MAAOqE,QAAQnB,GAAQuH,eAAiB1H,GAAO0H,eAAe,SACxH,eAAC,IAAMC,SAAQ,UAEE,OAATvB,QAAS,IAATA,OAAS,EAATA,EAAWtM,KACP,SAACyM,EAAKkB,GAAC,OAAK,yBAAgBpG,MAAOkF,EAAI5H,GAAG,SAAE4H,EAAIA,KAAvBkB,EAAoC,UAQjF,eAACvC,EAAa,UACV,eAAC9B,EAAA,EAAU,CAACtI,QAAS,kBAnNxC6D,EAmN+DlL,EAAKkL,QAlNzF8H,IAAS,SAAAD,GAAK,OAAIA,EAAMzC,QAAO,SAAAtQ,GAAI,OAAIA,EAAKkL,KAAOA,CAAE,GAAC,IADjC,IAAAA,CAmNuE,EAAC,SACjD,eAAChC,EAAA,EAAM,CAAC/J,GAAI,CACRC,MAAO,yBAhFgBY,EAAKkL,GAoFjC,qBAQvC,eAACrL,EAAA,EAAI,CAACC,WAAS,WACX,eAACD,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SACd,gBAACM,EAAA,EAAO,CAACC,eAAe,WAAWC,IAAK,EAAGC,UAAW,EAAE,UACpD,eAACC,EAAA,EAAM,CAACR,WAAS,EAACU,QAAQ,WAAWwG,QAAS4L,GAAY,SAAC,aAG3D,eAACtS,EAAA,EAAM,CAACR,WAAS,EAACS,KAAK,SAASC,QAAQ,YAAW,SAAG,wBAQ9E,G,UEvUMsT,GAAiB,CACnB,CACI5F,OAAQ,eACRC,SAAU,qBAEd,CACID,OAAQ,iBACRC,SAAU,iBAEd,CACID,OAAQ,WACRC,SAAU,WACVC,KAAM,YAEC,IADHtH,EAAG,EAAHA,IAEA,EAQIA,EAAIG,SACFmG,GARI,EAANhD,OACY,EAAZC,aACM,EAANC,OACK,EAALC,MACK,EAALN,MACI,EAAJQ,KACK,EAALC,MAEU,CACVtI,SAAU,GACViM,WAAY,aACZtP,MAAO+H,EAAIwH,WAAa,QAAU,kBAEtC,EAAwB1N,mBAAS,UAAS,mBAAnCsK,EAAI,KAAEqD,EAAO,KACpB9B,qBAAU,WAEV,GAAG,CAACvB,IACJ,MCrCoB,WAC5B,MAAkCtK,oBAAS,GAAM,mBAA1C4N,EAAS,KAAEC,EAAY,KAC9B,EAA4B7N,mBAAS,CACjCkR,cAAe,GACfjH,GAAI,EACJkH,cAAe,EACfC,kBAAkB,GAClBC,QAAQ,KACV,mBANKpD,EAAM,KAAE6B,EAAS,KAOxB,EAAkD9P,mBAAS,IAAG,mBAAvDwR,EAAiB,KAAE2B,EAAoB,KAC9C,EAAgDnT,mBAAS,IAAG,mBAArDyR,EAAgB,KAAE2B,EAAmB,KAC5C,EAAkCpT,mBAAS,IAAG,mBAAvC0R,EAAS,KAAE2B,EAAY,KAExBC,EAAe,iDAAG,gHACGtC,IAAsB,KAAD,WAApCpN,EAAI,EAAJA,KACRuP,EAAqBvP,EAAKA,KAAK2P,aAC/BH,EAAoBxP,EAAKA,KAAK4P,YAC9BH,EAAazP,EAAKA,KAAKiO,KAAK,2CAC/B,kBALoB,mCAarB,MAAO,CACHL,oBACAC,mBACAC,YACAzD,SACA6B,YACAlC,YACAU,YAdgB,SAACC,GACjBV,GAAa,GACbyF,GACJ,EAYI9E,aAXiB,SAACD,GAClBV,GAAa,EACjB,EAWJ,CDCoH4F,GAAhGxF,EAAM,EAANA,OAAQL,EAAS,EAATA,UAAW6D,EAAgB,EAAhBA,iBAAkBD,EAAiB,EAAjBA,kBAAmBE,EAAS,EAATA,UAAWlD,EAAY,EAAZA,aAAaF,EAAW,EAAXA,YACxF,OAAO,gBAAC,WAAQ,WACZ,eAACI,EAAA,EAAU,CAACtI,QAAS,SAACmI,GAClBD,EAAYC,GACZZ,EAAQ,SACZ,EAAE,SACE,eAACgB,GAAA,EAAI,CAACzQ,GAAI,CACNsD,SAAU,GACVrD,MAAO,qBAGf,eAACuQ,EAAA,EAAU,CAACtI,QAAS,WAAQwI,MAAM,oBAAqB,EAAE,SACtD,eAAC3G,EAAA,EAAM,CAAC/J,GAAIsO,MAEhB,eAAC,GAAkB,CACfgF,kBAAmBA,EACnBC,iBAAkBA,EAClBC,UAAWA,EACXpH,KAAMA,EACNiH,aAAW,EACX1O,KAAM+K,EACNhK,KAAMqK,EACNlL,QACI,SAACwL,GACGC,IACAb,EAAQ,GACZ,MAIhB,IAEOuF,MEdAQ,IA5CM,WACjB,IACI5E,EACAC,cADAD,EAEJ,EAAqD9O,oBAAS,GAAM,mBAA7DmQ,EAAe,KAAEC,EAAyB,KACjD,ECf0B,WAE5B,MAAwCpQ,mBAAS,IAAG,mBAA7CgP,EAAY,KAAEC,EAAe,KACpC,EAAsCjP,mBAAS,IAAG,mBAA3CkP,EAAW,KAAEC,EAAc,KAM5BC,EAAM,iDAAG,gHACU2B,IAAwB,KAAD,WAAtCnN,EAAI,EAAJA,KACRqL,EAAgBrL,EAAKA,MAAK,2CAC3B,kBAHW,mCAIZ,MAAO,CACLoL,eACAC,kBACAC,cACAC,iBACAE,OAba,WACb,IAAMC,ECVqB,SAACC,EAAUL,GACtC,OAAIA,EAAY9H,OAAS,EACFmI,EAASF,QAAO,SAAAtQ,GAAI,OAAIA,EAAK0K,aAAa+F,oBAAoBC,MAAMP,EAAYQ,cAAc,IAG5GH,CAEX,CDGiBoE,CAAgB3E,EAAcE,GAC7CD,EAAgBK,EAClB,EAWEF,SAEJ,CDN0EwE,GAAtD5E,GAAF,EAANK,OAAoB,EAAZL,cAAcI,EAAM,EAANA,OAAQF,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eACnD,EGjB2B,WAC3B,MAAkCnP,oBAAS,GAAM,mBAA1C4N,EAAS,KAAEC,EAAY,KAC9B,EAA4B7N,mBAAS,CACjCkR,cAAe,GACfjH,GAAI,EACJkH,cAAe,EACfC,kBAAkB,GAClBC,QAAQ,KACV,mBANKxB,EAAM,KAAEC,EAAS,KAOxB,EAAkD9P,mBAAS,IAAG,mBAAvDwR,EAAiB,KAAE2B,EAAoB,KAC9C,EAAgDnT,mBAAS,IAAG,mBAArDyR,EAAgB,KAAE2B,EAAmB,KAC5C,EAAkCpT,mBAAS,IAAG,mBAAvC0R,EAAS,KAAE2B,EAAY,KAExBC,EAAe,iDAAG,gHACGtC,IAAsB,KAAD,WAApCpN,EAAI,EAAJA,KACRuP,EAAqBvP,EAAKA,KAAK2P,aAC/BH,EAAoBxP,EAAKA,KAAK4P,YAC9BH,EAAazP,EAAKA,KAAKiO,KAAK,2CAC/B,kBALoB,mCAarB,MAAO,CACHL,oBACAC,mBACAC,YACA7B,SACAC,YACAlC,YACAU,YAdgB,SAACC,GACjBV,GAAa,GACbyF,GACJ,EAYI9E,aAXiB,SAACD,GAClBV,GAAa,EACjB,EAWJ,CHnBwHgG,GAA5GhE,EAAM,EAANA,OAAQ4B,EAAgB,EAAhBA,iBAAkBC,EAAS,EAATA,UAAWF,EAAiB,EAAjBA,kBAA8B5D,GAAF,EAATkC,UAAoB,EAATlC,WAAWU,EAAW,EAAXA,YAAaE,EAAY,EAAZA,aAMnG,OALA3C,qBAAU,WACNuD,IACAgB,GAA0B,EAC9B,GAAG,CAAClB,EAAaiB,IAGb,eAAC,IAAQE,SAAQ,CAAC1D,MAAO,CAACwD,EAAiBC,GAA2B,SAClE,gBAAC/R,EAAA,EAAI,CAACH,GAAI,CACNI,QAAS,GACX,UACE,eAAC,IAAE,CAACC,GAAI,EAAE,SAAC,uBACX,eAACC,EAAA,EAAO,CAACN,GAAI,CACTO,GAAI,KAER,gBAACC,EAAA,EAAG,CAACC,GAAI,EAAGJ,GAAI,EAAE,UACd,eAAC,IAAI,CAAC+R,WAAY,IAAI,SAAE,kGAGxB,wBACA,gBAAC,IAAc,CAAC/Q,eAAe,gBAAgBvB,WAAW,SAAQ,UAC9D,eAACiE,EAAA,EAAW,CAACX,SAAU,OAAQjC,YAAY,qBAAqBiI,SAAU,SAAAiH,GAAC,OAAIY,EAAeZ,EAAEvB,OAAOL,MAAM,IAC7G,eAACjN,EAAA,EAAM,CACHE,QAAQ,YACR2Q,QAAS,eAACnI,EAAA,EAAG,IACbhC,QAASkI,EAAY,SAEpBQ,EAAE,0BAGX,eAACnL,EAAA,EAAW,CAACI,YAAamP,GAAgBtP,KAAMoL,IAChD,eAAC,GAAkB,CAACpL,KAAMiM,EAAQ2B,kBAAmBA,EAAmBC,iBAAkBA,EAAkBC,UAAWA,EAAWpH,KAAM,QAASzH,KAAM+K,EAAW7K,QAASyL,WAK/L,C,4IItDO,SAAesF,IAAyB,+BAE9C,sDAFM,wGACU7K,IAAMC,IAAI,GAAD,OAAIC,oCAAyB,qBAAmB,oFACzE,sBAIM,SAAe4K,EAA0B,GAAD,+BAE9C,sDAFM,iGAAgE,OAArB9J,EAAE,EAAFA,GAAImH,EAAiB,EAAjBA,kBAAiB,SACtDnI,IAAMc,KAAK,GAAD,OAAIZ,oCAAyB,oBAAoB,CAACc,KAAImH,sBAAqB,KAAD,+EACpG,sBAIM,SAAe4C,EAAyB,GAAD,+BAE7C,sDAFM,WAAwC/J,GAAE,2FAChChB,IAAMC,IAAI,GAAD,OAAIC,oCAAyB,mCAA2Bc,IAAO,KAAD,+EACvF,sBChBM,I,uKCcDE,EAAiB9J,YAAOuC,IAAPvC,EAAiB,YAC/B,EAALE,MAAK,MACF,CACHmB,SAAU,IACVoE,SAAU,IACVuC,QAAS,OACT/J,QAAS,SACZ,IAkHc2V,GAjHY5T,YAAOY,IAAPZ,EAAqB,YACvC,MACF,CACHiC,IAAK,EACLgG,MAAO,EACP7G,MAAO,GACPF,OAAQ,GACRX,aAAc,MACd4B,SAAU,WACVb,gBARK,EAALpB,MAQuBE,QAAQ8H,MAAMjF,KACxC,IAC0BjD,YAAOY,IAAPZ,EAAqB,YACvC,MACF,CACHmI,UAAW,IACXlC,OAAQ,UACR1F,aAAc,MACde,gBALK,EAALpB,MAKuBE,QAAQgI,KAAK,KACvC,IAE8B,SAAH,GAOrB,IANH5F,EAAI,EAAJA,KACAe,EAAI,EAAJA,KACAb,EAAO,EAAPA,QACAwO,EAAW,EAAXA,YAIMhH,GAHF,EAAJD,KACE,EAAFL,GAEeO,aAAc,SAAAjK,GAAK,OAAIA,EAAMwB,YAAYC,KAAK,KAAK,KAClE,EAA8ByI,qBAAW3C,KAAQ,mBAAjC4C,GAAF,KAAY,MAEpBE,EAAmBC,MAAaxD,MAAM,CACxC+J,kBAAmBvG,MAAaC,SAAS,wBACzCb,GAAIY,MAAaE,aAErB,EAUIC,YAAU,CACVC,cAAerH,EACfgH,mBAEAM,SAAS,WAAD,sCAAE,WAAOC,GAAM,2EACfoG,IAGAjF,EAAqBnB,GACrB6G,IACAtH,GAAW,GACXA,GAAW,IACd,2CACJ,mDATQ,KAbTS,EAAM,EAANA,OACAG,EAAM,EAANA,OACAC,EAAY,EAAZA,aACAC,EAAY,EAAZA,aACAC,EAAO,EAAPA,QAGAJ,GAFO,EAAPM,QACa,EAAbD,cACS,EAATL,WACAO,EAAS,EAATA,UAgBJC,qBAAU,WACND,EAAUhI,EACd,GAAG,CAACA,IAEJ,MCnFiC,WACjC,IAAQoI,EAAoBC,cAApBD,gBAIFE,EAAU,iDAAG,WAAOf,GAAM,mGACL4I,EAA0B5I,GAAQ,KAAD,WACrC,IADXvH,EAAI,EAAJA,MACCuI,OACLH,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,YAGzCoM,EAAgBpI,EAAKwI,QAAS,CAAExM,QAAS,UAC5C,2CACJ,gBARe,sCAShB,MAAO,CACH0M,qBAbyB,SAACnB,GAC1Be,EAAWf,EACf,EAaJ,CDkEqC+I,GAAzB5H,EAAoB,EAApBA,qBAEF0F,EAAc,WAChBjP,IACAsI,GACJ,EACA,OAAO,eAAClB,EAAc,CAACtH,KAAMA,EAAMC,YAAakP,EAAY,UACxD,cAAC,IAAE,CAACnJ,aAAc,EAAE,SACf0I,EAAc,sBAAwB,iBAG3C,uBAAMrG,SAAU,SAACqD,GACb/C,EAAa+C,EACjB,EAAE,UACE,cAAC,IAAS,CAAC/B,MAAO,CACdC,UAAWlC,EAAS,IAAM,QAC5B,SACE,cAAC3L,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,SACvB,eAACF,EAAA,EAAI,CAACG,MAAI,EAAC2N,GAAI,GAAI1N,GAAI,GAAG,UACtB,cAAC,IAAE,CAACT,GAAI,EAAE,SAAC,wBACX,cAACU,EAAA,EAAY,CACTC,WAAS,EACTC,KAAK,QACLC,KAAK,oBACLuN,MAAOxB,EAAOiG,kBACd/R,YAAY,qBACZiI,SAAUiE,EACVhD,MAAOqE,QAAQnB,EAAQ2F,mBAAqB9F,EAAO8F,mBACnDvE,WAAYpB,EAAQ2F,mBAAqB9F,EAAO8F,2BAKhE,cAACxS,EAAA,EAAI,CAACC,WAAS,WACX,cAACD,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SACd,eAACM,EAAA,EAAO,CAACC,eAAe,WAAWC,IAAK,EAAGC,UAAW,EAAE,UACpD,cAACC,EAAA,EAAM,CAACR,WAAS,EAACU,QAAQ,WAAWwG,QAAS4L,EAAY,SAAC,aAG3D,cAACtS,EAAA,EAAM,CAACR,WAAS,EAACS,KAAK,SAASC,QAAQ,YAAW,SAAG,wBAQ9E,GE/HMuU,EAAuB,CACzB,CACI7G,OAAQ,sBACRC,SAAU,qBAEd,CACID,OAAQ,WACRC,SAAU,KACVC,KAAM,YAEC,IADHtH,EAAG,EAAHA,IAEMsG,EAAQ,CACVhL,SAAU,GACViM,WAAY,aACZtP,MAAO+H,EAAIwH,WAAa,QAAU,iBAEtC,EAAwB1N,mBAAS,IAAG,mBAA7BsK,EAAI,KAAEqD,EAAO,KACpB,ECnBwB,SAAC1D,GACjC,MAAkCjK,oBAAS,GAAM,mBAA1C4N,EAAS,KAAEC,EAAY,KAC9B,EAA4B7N,mBAAS,CACjCiK,GAAI,EACJmH,kBAAkB,KACpB,mBAHKnD,EAAM,KAAEC,EAAS,KAIlBkG,EAAgB,iDAAG,gHACEJ,EAAyB/J,GAAI,KAAD,WAA3CrG,EAAI,EAAJA,KACRsK,EAAUtK,EAAKA,KAAK2P,aAAY,2CACnC,kBAHqB,mCAWtB,MAAO,CACHtF,SACAL,YACAU,YAVgB,SAACC,GACjBV,GAAa,GACbuG,GACJ,EAQI5F,aAPiB,SAACD,GAClBV,GAAa,EACjB,EAOJ,CDJqEwG,CAAqBnO,EAAIG,SAAS4D,IAAnF2D,EAAS,EAATA,UAAWK,EAAM,EAANA,OAAQO,EAAY,EAAZA,aAAcF,EAAW,EAAXA,YACzC,OAAO,eAAC,WAAQ,WACZ,cAACI,EAAA,EAAU,CAACtI,QAAS,WACjBuH,EAAQ,UACRW,GACJ,EAAE,SACE,cAACK,EAAA,EAAI,CAACzQ,GAAI,CACNsD,SAAU,GACVrD,MAAO,qBAGf,cAACuQ,EAAA,EAAU,CAACtI,QAAS,WAAQwI,MAAM,oBAAqB,EAAE,SACtD,cAAC3G,EAAA,EAAM,CAAC/J,GAAIsO,MAEhB,cAAC,EAAsB,CACnB+E,aAAW,EACX1O,KAAM+K,EACNhK,KAAMqK,EACNlL,QACI,SAACwL,GACGC,IACAb,EAAQ,GACZ,EAEJ1D,GAAI/D,EAAIG,SAAS4D,GACjBK,KAAMA,MAElB,IAEO6J,IEKAG,IA3CK,WAChB,IACIxF,EACAC,cADAD,EAEJ,EAAqD9O,oBAAS,GAAM,mBAA7DmQ,EAAe,KAAEC,EAAyB,KACjD,ECf8B,WAEhC,MAAwCpQ,mBAAS,IAAG,mBAA7CgP,EAAY,KAAEC,EAAe,KACpC,EAAsCjP,mBAAS,IAAG,mBAA3CkP,EAAW,KAAEC,EAAc,KAM5BC,EAAM,iDAAG,gHACU0E,IAA4B,KAAD,WAA1ClQ,EAAI,EAAJA,KACRkI,QAAQC,IAAInI,EAAKA,MACjBqL,EAAgBrL,EAAKA,MAAK,2CAC3B,kBAJW,mCAKZ,MAAO,CACLoL,eACAC,kBACAC,cACAC,iBACAE,OAda,WACb,IAAMC,ENV+B,SAACC,EAAUL,GAChD,OAAIA,EAAY9H,OAAS,EACFmI,EAASF,QAAO,SAAAtQ,GAAI,OAAIA,EAAKqS,kBAAkB5B,oBAAoBC,MAAMP,EAAYQ,cAAc,IAGjHH,CAEX,CMGiBgF,CAA0BvF,EAAcE,GACvDD,EAAgBK,EAClB,EAYEF,SAEJ,CDP0EoF,GAAtDxF,GAAF,EAANK,OAAoB,EAAZL,cAAcI,EAAM,EAANA,OAAQF,EAAW,EAAXA,YACtC,GADiE,EAAdC,eEjBpB,WAC/B,MAAkCnP,oBAAS,GAAM,mBAA1C4N,EAAS,KAAEC,EAAY,KAC9B,EAA4B7N,mBAAS,CACjCiK,GAAI,EACJmH,kBAAkB,KACpB,mBAHKvB,EAAM,KAAEC,EAAS,KAKlBwD,EAAe,iDAAG,4HAGvB,kBAHoB,mCAWrB,MAAO,CACHzD,SACAC,YACAlC,YACAU,YAXgB,SAACC,GACjBV,GAAa,GACbyF,GACJ,EASI9E,aARiB,SAACD,GAClBV,GAAa,EACjB,EAQJ,CFPwH4G,IAA5G5E,EAAM,EAANA,OAAmEjC,GAA3C,EAAhB6D,iBAA2B,EAATC,UAA4B,EAAjBF,kBAA4B,EAAT1B,UAAoB,EAATlC,WAAWU,EAAW,EAAXA,YAAaE,EAAY,EAAZA,aAKnG,OAJA3C,qBAAU,WACNuD,IACAgB,GAA0B,EAC9B,GAAG,CAAClB,EAAaiB,IAEb,cAAC,IAAQE,SAAQ,CAAC1D,MAAO,CAACwD,EAAiBC,GAA2B,SACtE,eAAC/R,EAAA,EAAI,CAACH,GAAI,CACNI,QAAS,GACX,UACE,cAAC,IAAE,CAACC,GAAI,EAAE,SAAC,yBACX,cAACC,EAAA,EAAO,CAACN,GAAI,CACTO,GAAI,KAER,eAACC,EAAA,EAAG,CAACC,GAAI,EAAGJ,GAAI,EAAE,UACd,cAAC,IAAI,CAAC+R,WAAY,IAAI,SAAC,mFAGvB,uBACA,cAAC,IAAc,CAAC/Q,eAAe,gBAAgBvB,WAAW,SAAQ,SAC9D,cAAC0B,EAAA,EAAM,CACHE,QAAQ,YACR2Q,QAAS,cAACnI,EAAA,EAAG,IACbhC,QAASkI,EAAY,SAEpBQ,EAAE,yBAIX,cAACnL,EAAA,EAAW,CAACI,YAAa2Q,EAAoB9Q,KAAMoL,IACpD,cAAC,EAAsB,CAACpL,KAAMiM,EAAQvF,KAAM,QAASzH,KAAM+K,EAAW7K,QAASyL,WAK/F,C","file":"static/js/7.614a3c51.chunk.js","sourcesContent":["import { SvgIcon } from \"@mui/material\";\n\nconst Shopping = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M20,7H17A5,5,0,0,0,7,7H4A1,1,0,0,0,3,8V20a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V8A1,1,0,0,0,20,7ZM9,10.5a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5v-1A.5.5,0,0,1,7.5,9h1a.5.5,0,0,1,.5.5ZM12,4a3,3,0,0,1,3,3H9A3,3,0,0,1,12,4Zm5,6.5a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5v-1a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5Z\" />\n    </SvgIcon>;\n};\n\nexport default Shopping;","import { Stack } from \"@mui/material\";\nimport { H5 } from \"components/Typography\";\nimport IconWrapper from \"components/IconWrapper\";\nimport React from \"react\"; // ---------------------------------------------------\n\n// ---------------------------------------------------\nconst Heading = ({\n  title,\n  Icon\n}) => {\n  return <Stack direction=\"row\" alignItems=\"center\">\n      <IconWrapper>\n        <Icon sx={{\n        color: \"primary.main\"\n      }} />\n      </IconWrapper>\n      <H5>{title}</H5>\n    </Stack>;\n};\n\nexport default Heading;","import { Box, Button, Card, Divider, Grid } from '@mui/material'\r\nimport { H5, H6, Tiny } from 'components/Typography'\r\nimport FlexBox from 'components/flexbox/FlexBox'\r\nimport AppTextField from 'components/input-fields/AppTextField'\r\nimport React from 'react'\r\n\r\nconst ConfigurePlanes = () => {\r\n    \r\n    return (\r\n        <Card sx={{\r\n            padding: 3\r\n        }}>\r\n            <H5 mb={3}>Configure Plan cuentas</H5>\r\n            <Divider sx={{\r\n                my: 2\r\n            }} />\r\n            <Box mt={2} mb={3}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <H6 mb={1}>Configurar plan cuenta cliente</H6>  \r\n                       {/*  <Autocomplete\r\n                            fullWidth\r\n                            getOptionLabel={(optionTipoAsiento) => optionTipoAsiento.nombreTipoAsiento}\r\n                            options={optionTipoAsiento}\r\n                            autoSelect={true}\r\n                            value={select ? select : null}\r\n                            size=\"small\"\r\n                            isOptionEqualToValue={(option, value) => {\r\n                                if (value) {\r\n                                    console.log('obtener select ')\r\n                                    return (option.value === value.value)\r\n                                } else {\r\n                                    console.log('obtener select vacio')\r\n                                    return false;\r\n                                }\r\n                            }}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setSelect(newValue);\r\n                                    setValues({ ...values, tipoAsientoId: newValue.id, nombreTipoAsiento: newValue.nombreTipoAsiento })\r\n                                    console.log(newValue)\r\n                                } else {\r\n                                    setSelect(null);\r\n                                }\r\n                            }}\r\n\r\n                            renderInput={\r\n                                (params) => <TextField\r\n                                    {...params}\r\n                                    label=\"Pertenece a\"\r\n                                    error={Boolean(touched.nombreTipoAsiento && errors.nombreTipoAsiento)}\r\n                                    helperText={touched.nombreTipoAsiento && errors.nombreTipoAsiento}\r\n                                />\r\n                            }\r\n                        /> */}\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <H6 mb={1}>Proveedores</H6>\r\n                        <AppTextField\r\n                            fullWidth size=\"small\"\r\n                            name=\"codigoCliente\"\r\n                            placeholder=\"Nombre negocio\"\r\n                        //value={values.codigoCliente}\r\n                        //onChange={handleChange}\r\n                        //error={Boolean(touched.codigoCliente && errors.codigoCliente)}\r\n                        //helperText={touched.codigoCliente && errors.codigoCliente}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <H6 mb={1}>Vendedores</H6>\r\n                        <AppTextField\r\n                            fullWidth size=\"small\"\r\n                            name=\"codigoCliente\"\r\n                            placeholder=\"Nombre negocio\"\r\n                        //value={values.codigoCliente}\r\n                        //onChange={handleChange}\r\n                        //error={Boolean(touched.codigoCliente && errors.codigoCliente)}\r\n                        //helperText={touched.codigoCliente && errors.codigoCliente}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <H6 mb={1}>Productos</H6>\r\n                        <AppTextField\r\n                            fullWidth size=\"small\"\r\n                            name=\"codigoCliente\"\r\n                            placeholder=\"Nombre negocio\"\r\n                        //value={values.codigoCliente}\r\n                        //onChange={handleChange}\r\n                        //error={Boolean(touched.codigoCliente && errors.codigoCliente)}\r\n                        //helperText={touched.codigoCliente && errors.codigoCliente}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                            <Button type=\"submit\" variant=\"contained\">\r\n                                Guardar\r\n                            </Button>\r\n                        </FlexBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ConfigurePlanes\r\n","import { Card, Divider, Grid } from '@mui/material'\r\nimport { H5, H6 } from 'components/Typography'\r\nimport AppTextField from 'components/input-fields/AppTextField'\r\nimport React from 'react'\r\n\r\nconst Clasificacion = () => {\r\n    return (\r\n        <Card sx={{\r\n            padding: 3,\r\n            mb: 3\r\n        }}>\r\n            <Grid item xs={12}>\r\n                <H5 mb={3}>Clasificacion</H5>\r\n                <Divider sx={{\r\n                    my: 2\r\n                }} />\r\n                <H6 mb={1}>Clasificacion</H6>\r\n                <AppTextField\r\n                    fullWidth size=\"small\"\r\n                    name=\"codigoCliente\"\r\n                    placeholder=\"Nombre negocio\"\r\n                //value={values.codigoCliente}\r\n                //onChange={handleChange}\r\n                //error={Boolean(touched.codigoCliente && errors.codigoCliente)}\r\n                //helperText={touched.codigoCliente && errors.codigoCliente}\r\n                />\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Clasificacion\r\n","import { Box, Grid } from \"@mui/material\";\r\nimport Shopping from \"icons/Shopping\";\r\nimport Heading from \"page-sections/ecommerce/Heading\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport General from \"../components/general/general\";\r\nimport PlanCuentasList from \"../components/plan-cuentas/plan-cuentas-list\";\r\nimport ConfigurePlanes from \"../components/configure-planes/ConfigurePlanes\";\r\nimport Clasificacion from \"../components/clasificacion/clasificacion\";\r\nimport ProcesosList from \"../components/procesos-list/procesos-list\";\r\nimport TipoProceso from \"../components/tipo-proceso/tipo-proceso\";\r\n\r\nconst Configuracion = () => {\r\n  const navigate = useNavigate();\r\n  const [selectPaymentMethod, setSelectPaymentMethod] = useState(\"paypal\");\r\n  \r\n  const handleChangePaymentMethod = event => {\r\n    setSelectPaymentMethod(event.target.value);\r\n  };\r\n  return (\r\n    <Box pt={2} pb={4}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Heading title=\"Configuracion\" Icon={Shopping} />\r\n        </Grid>\r\n        <Grid item md={8} xs={12}>\r\n          <General />\r\n        </Grid>\r\n        <Grid item md={4} xs={12}>\r\n          <Clasificacion />\r\n        </Grid>\r\n        <Grid item md={12} xs={12}>\r\n          <PlanCuentasList />\r\n        </Grid>\r\n        <Grid item md={12} xs={12}>\r\n          <ConfigurePlanes />\r\n        </Grid>\r\n        <Grid item md={8} xs={12}>\r\n          <ProcesosList />\r\n        </Grid>\r\n        <Grid item md={4} xs={12}>\r\n          <TipoProceso />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Configuracion\r\n","import { styled, TextField } from \"@mui/material\";\nimport React from \"react\";\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  \"& .MuiOutlinedInput-input\": {\n    fontWeight: 500,\n    color: theme.palette.text.primary\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: theme.palette.action.disabled\n  },\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n    borderColor: theme.palette.action.hover\n  },\n  \"& .MuiInputLabel-root\": {\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiInputLabel-root.Mui-focused\": {\n    fontWeight: 600\n  },\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AppTextField = props => {\n  return <StyledTextField {...props} />;\n};\n\nexport default AppTextField;","import { Box } from \"@mui/material\";\n\nconst FlexRowAlign = ({\n  children,\n  ...props\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\n    {children}\n  </Box>;\n\nexport default FlexRowAlign;","import { InputBase, styled } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\n// styled component\nconst StyledInputBase = styled(InputBase)(({\n  theme,\n  bordered\n}) => ({\n  height: 45,\n  fontSize: 12,\n  width: \"100%\",\n  maxWidth: 350,\n  fontWeight: 600,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  border: bordered ? `1px solid ${theme.palette.action.disabled}` : \"none\",\n  [theme.breakpoints.down(500)]: {\n    maxWidth: \"100%\"\n  },\n  \"::placeholder\": {\n    color: theme.palette.text.disabled\n  }\n})); // ------------------------------------------------------------\n\n// ------------------------------------------------------------\nconst SearchInput = props => {\n  const {\n    icon_style = {},\n    bordered = true\n  } = props;\n  return <StyledInputBase bordered={bordered} startAdornment={<SearchIcon sx={{\n    fontSize: 18,\n    marginRight: 1,\n    color: \"text.disabled\",\n    ...icon_style\n  }} />} {...props} />;\n};\n\nexport default SearchInput;","import { Box, Modal, styled } from \"@mui/material\";\nimport { lightTheme } from \"../constants\"; // ---------------------------------------------------------\n\n// ---------------------------------------------------------\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  padding: 24,\n  maxWidth: 680,\n  width: \"100%\",\n  borderRadius: \"4px\",\n  position: \"absolute\",\n  transform: \"translate(-50%, -50%)\",\n  backgroundColor: lightTheme(theme) ? \"#fff\" : theme.palette.background.default\n}));\n\nconst AppModal = ({\n  children,\n  open,\n  handleClose,\n  ...props\n}) => {\n  return <Modal open={open} onClose={handleClose}>\n      <Wrapper {...props}>{children}</Wrapper>\n    </Modal>;\n};\n\nexport default AppModal;","import { alpha, InputBase, Pagination, styled, TableRow } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\nexport const StyledTableBodyRow = styled(TableRow)(({\n  theme,\n  selected_row\n}) => selected_row === \"select\" ? {\n  backgroundColor: alpha(theme.palette.primary.light, 0.5),\n  position: \"relative\",\n  \"&::after\": {\n    top: 0,\n    left: 0,\n    width: \"3px\",\n    content: '\"\"',\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: theme.palette.primary.main\n  }\n} : {});\nexport const StyledPagination = styled(Pagination)(({\n  theme\n}) => ({\n  \"& .MuiPaginationItem-root\": {\n    fontSize: 12,\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiPaginationItem-page:hover\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-page.Mui-selected\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-previousNext\": {\n    margin: 10,\n    borderRadius: 20,\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n}));\nexport const StyledSearchInput = styled(InputBase)(({\n  theme\n}) => ({\n  height: 40,\n  fontSize: 12,\n  maxWidth: 450,\n  width: \"100%\",\n  fontWeight: 500,\n  padding: \"0.5rem\",\n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: theme.palette.text.primary\n}));\nexport const StyledSearchIcon = styled(SearchIcon)(({\n  theme\n}) => ({\n  fontSize: 16,\n  marginLeft: \"0.5rem\",\n  marginRight: \"0.5rem\",\n  color: theme.palette.primary.main\n}));","import { ArrowRightAlt } from \"@mui/icons-material\";\r\nimport { Box, Stack, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport { H5 } from \"components/Typography\";\r\nimport { StyledPagination } from \"page-sections/data-table/dataTableV2/styledComponents\";\r\nimport { useMemo } from \"react\";\r\nimport { useExpanded, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\r\nimport ScrollBar from \"simplebar-react\"; // component props interface\r\n\r\nconst CustomTable = props => {\r\n  const {\r\n    data,\r\n    rowClick,\r\n    showFooter,\r\n    columnShape,\r\n    hidePagination\r\n  } = props; // hooks\r\n\r\n  const tableData = useMemo(() => data, [data]);\r\n  const columns = useMemo(() => columnShape, [columnShape]);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    gotoPage\r\n  } = useTable({\r\n    columns,\r\n    data: tableData\r\n  }, useSortBy, useExpanded, usePagination, useRowSelect); // handle pagination\r\n\r\n  const handleChange = (_e, currentPageNo) => {\r\n    gotoPage(currentPageNo - 1);\r\n  };\r\n\r\n  return <Box>\r\n      <ScrollBar>\r\n        <Table {...getTableProps()} sx={{\r\n        borderSpacing: \"0 1rem\",\r\n        borderCollapse: \"separate\"\r\n      }}>\r\n          <TableHead>\r\n            {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps(column.getSortByToggleProps())} sx={{\r\n              paddingY: 0,\r\n              fontSize: 12,\r\n              fontWeight: 600,\r\n              borderBottom: 0,\r\n              width: column.width,\r\n              color: \"text.secondary\",\r\n              minWidth: column.minWidth,\r\n              maxWidth: column.maxWidth,\r\n              \"&:last-child\": {\r\n                textAlign: \"center\"\r\n              }\r\n            }}>\r\n                    {column.render(\"Header\")}\r\n                  </TableCell>)}\r\n              </TableRow>)}\r\n          </TableHead>\r\n\r\n          <TableBody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row);\r\n            return <TableRow {...row.getRowProps()} onClick={rowClick && rowClick(row.original)} sx={{\r\n              backgroundColor: \"background.paper\",\r\n              cursor: rowClick ? \"pointer\" : \"unset\",\r\n              \"& td:first-of-type\": {\r\n                borderLeft: \"0\",\r\n                borderTopLeftRadius: \"8px\",\r\n                borderBottomLeftRadius: \"8px\"\r\n              },\r\n              \"& td:last-of-type\": {\r\n                borderRight: \"0\",\r\n                textAlign: \"center\",\r\n                borderTopRightRadius: \"8px\",\r\n                borderBottomRightRadius: \"8px\"\r\n              }\r\n            }}>\r\n                  {row.cells.map(cell => {\r\n                return <TableCell {...cell.getCellProps()} sx={{\r\n                  border: 0,\r\n                  fontSize: 13,\r\n                  fontWeight: 500,\r\n                  color: \"text.secondary\",\r\n                  \"&:first-child\": {\r\n                    paddingLeft: \"16px\"\r\n                  },\r\n                  \"&:last-child\": {\r\n                    paddingRight: \"16px\"\r\n                  }\r\n                }}>\r\n                        {cell.render(\"Cell\")}\r\n                      </TableCell>;\r\n              })}\r\n                </TableRow>;\r\n          })}\r\n          </TableBody>\r\n        </Table>\r\n      </ScrollBar>\r\n\r\n      {!hidePagination && <Stack alignItems=\"flex-end\" marginY={1}>\r\n          <StyledPagination count={pageOptions.length} shape=\"rounded\" onChange={handleChange} />\r\n        </Stack>}\r\n\r\n      {showFooter && <FlexBetween gap={0.5}>\r\n          <H5 color=\"text.secondary\" fontSize={13}>\r\n            Showing 1-12 of 24 result\r\n          </H5>\r\n          <ButtonBase disableRipple sx={{\r\n        fontSize: 13,\r\n        fontWeight: 600,\r\n        color: \"text.secondary\"\r\n      }}>\r\n            See All\r\n            <ArrowRightAlt />\r\n          </ButtonBase>\r\n        </FlexBetween>}\r\n    </Box>;\r\n};\r\n\r\nexport default CustomTable;","import { Box, styled } from \"@mui/material\";\nimport React from \"react\";\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  width: 40,\n  height: 40,\n  display: \"flex\",\n  borderRadius: \"5px\",\n  alignItems: \"center\",\n  marginRight: \"0.5rem\",\n  justifyContent: \"center\",\n  backgroundColor: theme.palette.primary.light\n}));\n\nconst IconWrapper = ({\n  children,\n  ...props\n}) => {\n  return <Wrapper {...props}>{children}</Wrapper>;\n};\n\nexport default IconWrapper;","import { SvgIcon } from \"@mui/material\";\n\nconst ShoppingBasket = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M22.5,10h-4L12.73,2.3a.77.77,0,0,0-.6-.3h-.26a.77.77,0,0,0-.6.3L5.5,10h-4a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5H2l1.71,7.65A3,3,0,0,0,6.6,22H17.4a3,3,0,0,0,2.92-2.35L22,12h.47a.5.5,0,0,0,.5-.5v-1A.5.5,0,0,0,22.5,10ZM8,10l4-5.33L16,10Z\" />\n    </SvgIcon>;\n};\n\nexport default ShoppingBasket;","import React from \"react\";\r\nexport const Context = React.createContext();","import { SvgIcon } from \"@mui/material\";\n\nconst Delete = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M20,4.5v1a.5.5,0,0,1-.5.5H4.5A.5.5,0,0,1,4,5.5v-1A.5.5,0,0,1,4.5,4H9V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V4h4.5A.5.5,0,0,1,20,4.5ZM5.87,20.14a2,2,0,0,0,2,1.86h8.28a2,2,0,0,0,2-1.86L19,8H5Z\" />\n    </SvgIcon>;\n};\n\nexport default Delete;","import { SvgIcon } from \"@mui/material\";\n\nconst DeleteIcon = props => {\n  return <SvgIcon viewBox=\"0 0 10 12\" {...props}>\n      <path d=\"M4.23535 5.64706H4.94123V9.52942H4.23535V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M2.82349 5.64706H3.52937V9.52942H2.82349V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M5.64722 5.64706H6.3531V9.52942H5.64722V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M9.17647 1.41176H6.35294V1.05882C6.35294 0.474988 5.87798 0 5.29412 0H3.88235C3.29849 0 2.82353 0.474988 2.82353 1.05882V1.41176H0V3.52941H0.735247L1.38428 10.994C1.41231 11.5588 1.87518 12 2.44179 12H6.73466C7.30127 12 7.76414 11.5588 7.79217 10.994L8.44123 3.52941H9.17647V1.41176ZM3.52941 1.05882C3.52941 0.864212 3.68774 0.705882 3.88235 0.705882H5.29412C5.48875 0.705882 5.64706 0.864212 5.64706 1.05882V1.41176H3.52941V1.05882ZM0.705882 2.11765H8.47059V2.82353H0.705882V2.11765ZM7.08732 10.9559C7.07941 11.1455 6.92452 11.2941 6.73468 11.2941H2.44179C2.25195 11.2941 2.09706 11.1456 2.08915 10.9559C1.39861 3.00981 1.44584 3.55313 1.44376 3.52941H7.73271C7.73082 3.55071 7.77478 3.04544 7.08732 10.9559Z\" fill=\"currentColor\" />\n    </SvgIcon>;\n};\n\nexport default DeleteIcon;","import { SvgIcon } from \"@mui/material\";\n\nconst Add = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19,11.5v1a.5.5,0,0,1-.5.5H13v5.5a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5V13H5.5a.5.5,0,0,1-.5-.5v-1a.5.5,0,0,1,.5-.5H11V5.5a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5V11h5.5A.5.5,0,0,1,19,11.5Z\" />\n    </SvgIcon>;\n};\n\nexport default Add;","import { Add } from \"@mui/icons-material\";\nimport { Button, Grid, IconButton, styled, useMediaQuery } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport AppModal from \"components/AppModal\";\nimport FlexBox from \"components/flexbox/FlexBox\";\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\nimport AppTextField from \"components/input-fields/AppTextField\";\nimport Scrollbar from \"components/ScrollBar\";\nimport { H2, H6, Small } from \"components/Typography\";\nimport { useFormik } from \"formik\";\nimport DeleteIcon from \"icons/DeleteIcon\";\nimport * as Yup from \"yup\"; // component props interface\n\n// styled components\nconst StyledAppModal = styled(AppModal)(({\n  theme\n}) => ({\n  maxWidth: 700,\n  minWidth: 300,\n  outline: \"none\",\n  padding: \"1.5rem\"\n}));\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\n  theme\n}) => ({\n  top: 5,\n  right: 5,\n  width: 25,\n  height: 25,\n  borderRadius: \"50%\",\n  position: \"absolute\",\n  backgroundColor: theme.palette.error.main\n}));\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\n  theme\n}) => ({\n  minHeight: 140,\n  cursor: \"pointer\",\n  borderRadius: \"8px\",\n  backgroundColor: theme.palette.grey[200]\n}));\n\nconst CreateProductModal = ({\n  open,\n  data,\n  onClose,\n  editProduct\n}) => {\n  const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\n  const initialValues = {\n    productName: \"\",\n    storeName: \"\",\n    price: \"\",\n    discountPrice: \"\",\n    description: \"\",\n    category: \"\",\n    tags: \"\",\n    stock: \"\",\n    sku: \"\",\n    images: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    productName: Yup.string().min(3, \"Too Short\").required(\"Product Name is Required!\"),\n    storeName: Yup.string().required(\"Store Name is Required!\"),\n    price: Yup.number().required(\"Price is Required!\"),\n    description: Yup.string().required(\"Description is Required!\"),\n    category: Yup.string().required(\"Category is Required!\"),\n    stock: Yup.number().required(\"Stock is Required!\"),\n    sku: Yup.string().required(\"SKU is Required!\")\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit,\n    touched\n  } = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  return <StyledAppModal open={open} handleClose={onClose}>\n      <H2 marginBottom={2}>\n        {editProduct && data ? \"Edit Product\" : \"Add new product\"}\n      </H2>\n\n      <form onSubmit={handleSubmit}>\n        <Scrollbar style={{\n        maxHeight: downXl ? 500 : \"auto\"\n      }}>\n          <Grid container spacing={2}>\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Product Name</H6>\n              <AppTextField fullWidth size=\"small\" name=\"productName\" placeholder=\"Enter product name\" value={values.productName} onChange={handleChange} error={Boolean(touched.productName && errors.productName)} helperText={touched.productName && errors.productName} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Store Name</H6>\n              <AppTextField fullWidth size=\"small\" name=\"storeName\" placeholder=\"Enter store name\" value={values.storeName} onChange={handleChange} error={Boolean(touched.storeName && errors.storeName)} helperText={touched.storeName && errors.storeName} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Price</H6>\n              <AppTextField fullWidth size=\"small\" name=\"price\" type=\"number\" placeholder=\"Price\" value={values.price} onChange={handleChange} error={Boolean(touched.price && errors.price)} helperText={touched.price && errors.price} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Discount Price</H6>\n              <AppTextField fullWidth size=\"small\" type=\"number\" name=\"discountPrice\" placeholder=\"Discount price\" value={values.discountPrice} onChange={handleChange} error={Boolean(touched.discountPrice && errors.discountPrice)} helperText={touched.discountPrice && errors.discountPrice} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 mb={1}>Description</H6>\n              <AppTextField fullWidth multiline rows={3} name=\"description\" placeholder=\"Write about product\" value={values.description} onChange={handleChange} error={Boolean(touched.description && errors.description)} helperText={touched.description && errors.description} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Category</H6>\n              <AppTextField fullWidth size=\"small\" name=\"category\" placeholder=\"Category\" value={values.category} onChange={handleChange} error={Boolean(touched.category && errors.category)} helperText={touched.category && errors.category} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Tags</H6>\n              <AppTextField fullWidth size=\"small\" name=\"tags\" placeholder=\"Add Tags\" value={values.tags} onChange={handleChange} error={Boolean(touched.tags && errors.tags)} helperText={touched.tags && errors.tags} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>Stock</H6>\n              <AppTextField fullWidth size=\"small\" type=\"number\" name=\"stock\" placeholder=\"04\" value={values.stock} onChange={handleChange} error={Boolean(touched.stock && errors.stock)} helperText={touched.stock && errors.stock} />\n            </Grid>\n\n            <Grid item sm={6} xs={12}>\n              <H6 mb={1}>SKU</H6>\n              <AppTextField fullWidth size=\"small\" name=\"sku\" placeholder=\"UY8076\" value={values.sku} onChange={handleChange} error={Boolean(touched.sku && errors.sku)} helperText={touched.sku && errors.sku} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <H6 pb={1}>Product Image</H6>\n              <Box sx={{\n              padding: 1,\n              borderRadius: \"8px\",\n              border: \"1px dashed\",\n              borderColor: \"text.disabled\",\n              backgroundColor: \"grey.100\"\n            }}>\n                <Grid container spacing={1}>\n                  {images.map(item => <Grid item sm={3} xs={4} key={item}>\n                      <Box sx={{\n                    minHeight: 140,\n                    borderRadius: \"8px\",\n                    overflow: \"hidden\",\n                    position: \"relative\"\n                  }}>\n                        <img src={item} width=\"100%\" height=\"100%\" alt=\"\" />\n\n                        <ImageDeleteWrapper>\n                          <IconButton>\n                            <DeleteIcon sx={{\n                          fontSize: 12,\n                          color: \"white\"\n                        }} />\n                          </IconButton>\n                        </ImageDeleteWrapper>\n                      </Box>\n                    </Grid>)}\n\n                  <Grid item sm={3} xs={4}>\n                    <label htmlFor=\"image-upload\">\n                      <input type=\"file\" accept=\"image/*\" id=\"image-upload\" style={{\n                      display: \"none\"\n                    }} />\n                      <ImageUploadWrapper textAlign=\"center\">\n                        <Box>\n                          <Add color=\"disabled\" />\n                          <Small fontWeight={600} display=\"block\">\n                            Choose a file\n                          </Small>\n                          <Small fontWeight={600} color=\"text.disabled\">\n                            or drag it here\n                          </Small>\n                        </Box>\n                      </ImageUploadWrapper>\n                    </label>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Grid>\n          </Grid>\n        </Scrollbar>\n\n        <Grid container>\n          <Grid item xs={12}>\n            <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\n              <Button fullWidth variant=\"outlined\" onClick={onClose}>\n                Cancel\n              </Button>\n              <Button fullWidth type=\"submit\" variant=\"contained\">\n                Save\n              </Button>\n            </FlexBox>\n          </Grid>\n        </Grid>\n      </form>\n    </StyledAppModal>;\n};\n\nconst images = [\"/static/products/watch.png\", \"/static/products/camera.png\", \"/static/products/headphone.png\"];\nexport default CreateProductModal;","import { Add } from \"@mui/icons-material\";\nimport { Box, Button, styled } from \"@mui/material\";\nimport FlexBox from \"components/flexbox/FlexBox\";\nimport SearchInput from \"components/input-fields/SearchInput\";\nimport ProductColumnShape from \"page-sections/admin-ecommerce/columnShapes/ProductColumnShape\";\nimport CreateProductModal from \"page-sections/admin-ecommerce/CreateProductModal\";\nimport CustomTable from \"page-sections/admin-ecommerce/CustomTable\";\nimport { almacenFake } from \"page-sections/admin-ecommerce/fakeData\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { searchByName } from \"utils/utils\";\nexport const HeadingWrapper = styled(FlexBox)(({\n  theme\n}) => ({\n  marginBottom: 20,\n  flexWrap: \"wrap\",\n  [theme.breakpoints.down(530)]: {\n    \"& .MuiButton-root\": {\n      width: \"100%\"\n    },\n    \"& .MuiInputBase-root\": {\n      maxWidth: \"100%\",\n      marginBottom: 15\n    }\n  }\n}));\n\nconst ProductManagement = () => {\n  const {\n    t\n  } = useTranslation();\n  const [openModal, setOpenModal] = useState(false); // search input\n\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [filteredItem, setFilteredItem] = useState(almacenFake);\n  useEffect(() => {\n    const result = searchByName(almacenFake, searchValue);\n    setFilteredItem(result);\n  }, [searchValue]);\n  return <Box pt={2} pb={4}>\n      <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\n        <SearchInput bordered={false} placeholder=\"Find Products\" onChange={e => setSearchValue(e.target.value)} />\n        <Button variant=\"contained\" endIcon={<Add />} onClick={() => setOpenModal(true)}>\n          {t(\"Add Products\")}\n        </Button>\n      </HeadingWrapper>\n\n      <CustomTable columnShape={ProductColumnShape} data={filteredItem} />\n\n      <CreateProductModal open={openModal} onClose={() => setOpenModal(false)} />\n    </Box>;\n};\n\nexport default ProductManagement;","import { format } from \"date-fns\";\nexport const almacenFake = [{\n  id:1,\n  codigo: \"demo\",\n  nombre: \"almacen 1\",\n  dirrecion: \"bla bla\",\n  acciones: \"\",\n}, {\n  id:2,\n  codigo: \"demo\",\n  nombre: \"almacen 2\",\n  dirrecion:  \"bla bla\",\n  acciones: \"\",\n}];\n\n\n\nexport const ordersFakeData = [{\n  orderNo: \"UY3769\",\n  customer: \"Mark Ruffle\",\n  date: format(new Date(), \"dd-MM-yyyy\"),\n  total: \"$789\",\n  payment: \"Paypal\",\n  status: \"Unpaid\"\n}, {\n  orderNo: \"UY3770\",\n  customer: \"Mark Ruffle\",\n  date: format(new Date(), \"dd-MM-yyyy\"),\n  total: \"$789\",\n  payment: \"Paypal\",\n  status: \"Paid\"\n}, {\n  orderNo: \"UY3761\",\n  customer: \"Mark Ruffle\",\n  date: format(new Date(), \"dd-MM-yyyy\"),\n  total: \"$789\",\n  payment: \"Paypal\",\n  status: \"Unpaid\"\n}, {\n  orderNo: \"UY3762\",\n  customer: \"Mark Ruffle\",\n  date: format(new Date(), \"dd-MM-yyyy\"),\n  total: \"$789\",\n  payment: \"Paypal\",\n  status: \"Paid\"\n}];\nexport const customersFakeData = [{\n  date: format(new Date(), \"MMM dd, yyyy\"),\n  name: \"Natalie Dormer\",\n  position: \"UI Designer\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/001-man.svg\",\n  email: \"Uilib@gmail.com\",\n  location: \"Austin, USA\",\n  status: \"Active\"\n}, {\n  date: format(new Date(), \"MMM dd, yyyy\"),\n  name: \"Natalie Dormer\",\n  position: \"Editor\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/002-girl.svg\",\n  email: \"Uilib@gmail.com\",\n  location: \"Austin, USA\",\n  status: \"Blocked\"\n}, {\n  date: format(new Date(), \"MMM dd, yyyy\"),\n  name: \"Lily Collins\",\n  position: \"UI Designer\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/003-boy.svg\",\n  email: \"Uilib@gmail.com\",\n  location: \"Corner View, Sylhet\",\n  status: \"Active\"\n}, {\n  date: format(new Date(), \"MMM dd, yyyy\"),\n  name: \"Natalie Dormer\",\n  phone: \"+00578115245\",\n  avatar: \"/static/avatar/004-woman.svg\",\n  email: \"Uilib@gmail.com\",\n  location: \"Corner View, Sylhet\",\n  status: \"Blocked\"\n}];","import { Box, Button, Card, Divider, Grid } from '@mui/material'\r\nimport { H5, H6 } from 'components/Typography'\r\nimport FlexBox from 'components/flexbox/FlexBox'\r\nimport AppTextField from 'components/input-fields/AppTextField'\r\nimport React from 'react'\r\n\r\nconst General = () => {\r\n    return (\r\n\r\n        <Card sx={{\r\n            padding: 3\r\n        }}>\r\n            <H5 mb={3}>Empresa</H5>\r\n\r\n            <Divider sx={{\r\n                my: 2\r\n            }} />\r\n\r\n            <Box mt={2} mb={3}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <H6 mb={1}>Nombre negocio</H6>\r\n                        <AppTextField\r\n                            fullWidth size=\"small\"\r\n                            name=\"codigoCliente\"\r\n                            placeholder=\"Nombre negocio\"\r\n                        //value={values.codigoCliente}\r\n                        //onChange={handleChange}\r\n                        //error={Boolean(touched.codigoCliente && errors.codigoCliente)}\r\n                        //helperText={touched.codigoCliente && errors.codigoCliente}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item md={6} xs={12}>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item md={6} xs={12}>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={0}>\r\n                            <Button type=\"submit\" variant=\"contained\">\r\n                                Guardar\r\n                            </Button>\r\n                        </FlexBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default General\r\n","import axios from \"axios\";\r\n\r\nexport async function ObtenerPlanCuentaService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/plan-cuenta`)\r\n}\r\nexport async function CrearPlanCuentaService(nivel, vPlanCuentaId) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/plan-cuenta/create?nivel=${nivel}&padre=${vPlanCuentaId}`)\r\n}\r\nexport async function GuardarPlanCuentaService({ codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vPlanCuentaId }) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/plan-cuenta`, { codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vPlanCuentaId });\r\n}\r\nexport async function GuardarPlanCuentaHijoService({ id, codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vPlanCuentaId }) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/plan-cuenta?padre=${id}`, { codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vPlanCuentaId });\r\n}\r\nexport async function ModificarPlanCuentaService({ id, codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vPlanCuentaId }) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/plan-cuenta/${id}`, { id, codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vPlanCuentaId });\r\n}\r\nexport async function EditarPlanCuentaService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/plan-cuenta/editar/${id}`, {});\r\n}\r\nexport async function EliminarPlanCuentaService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/plan-cuenta/${id}`, {});\r\n}","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Button, Grid, IconButton, RadioGroup, styled, useMediaQuery } from \"@mui/material\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\"; // component props interface\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nimport { UseGuardarHijoPlanCuenta, UseGuardarPlanCuenta } from \"../hooks/useGuardarHIjoPlanCuenta\";\r\nimport { UseGuardarPadrePlanCuenta } from \"../hooks/useGuardarPadrePlanCuenta\";\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 700,\r\n    minWidth: 300,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst CreatePlanCuentaModal = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editPlanCuenta,\r\n    tipo\r\n}) => {\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const [context, setContext] = useContext(Context);\r\n    const [selectedMoneda, setSelectedMoneda] = useState(\"1\");\r\n    const handleChangeMoneda = event => {\r\n        setFieldValue('moneda', event.target.value);\r\n        setSelectedMoneda(event.target.value);\r\n    };\r\n    const validationSchema = Yup.object().shape({\r\n        codigo: Yup.string().required(\"Codigo es requerido!\"),\r\n        nombreCuenta: Yup.string().required(\"Nombre es requerido!\"),\r\n        moneda: Yup.string().required(\"Moneda es requerido!\"),\r\n        nombreCuenta: Yup.string().required(\"Nombre es requerido!\"),\r\n        valor: Yup.string().required(\"valor es requerido\"),\r\n        codigoIdentificador: Yup.string().required(\"codigo es requerido\"),\r\n        id: Yup.number().nullable(),\r\n        nivel: Yup.number().required(),\r\n        debe: Yup.number().required(\"Debe es Requiredo\"),\r\n        haber: Yup.number().required(\"Haber es Requiredo\"),\r\n        vPlanCuentaId: Yup.string().required(\"Plan padre es requerido!\")\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        isValid,\r\n        setFieldValue,\r\n        resetForm,\r\n        setValues\r\n    } = useFormik({\r\n        initialValues: data,\r\n        validationSchema,\r\n        //enableReinitialize: true,\r\n        onSubmit: async (values) => {\r\n            setContext(true);\r\n            if (editPlanCuenta) {\r\n                //handlerSubmitModificar()\r\n            } else {\r\n                handlerSubmitGuardarPadre();\r\n            }\r\n            onClose()\r\n            resetForm()\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(tipo)\r\n        setValues(data);\r\n    }, [data])\r\n\r\n    const { handlerSubmitGuardarPadre} = UseGuardarPadrePlanCuenta(values);\r\n    const { } = UseGuardarHijoPlanCuenta(values);\r\n    return <StyledAppModal open={open} handleClose={onClose}>\r\n        <H2 marginBottom={2}>\r\n            {tipo == 'nuevo' || tipo == 'hijo' ? \"Añadir Plan cuenta\" : \"Editar Plan cuenta\"}\r\n        </H2>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Codigo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigo\"\r\n                            placeholder=\"Codigo\"\r\n                            value={values.codigo}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigo && errors.codigo)}\r\n                            helperText={touched.codigo && errors.codigo}\r\n                        /*  disabled={true} */\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Nivel</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nivel\"\r\n                            placeholder=\"Nivel\"\r\n                            value={values.nivel}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nivel && errors.nivel)}\r\n                            helperText={touched.nivel && errors.nivel} />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Valor</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"valor\"\r\n                            placeholder=\"Valor\"\r\n                            value={values.valor}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.valor && errors.valor)}\r\n                            helperText={touched.valor && errors.valor}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={8} xs={12}>\r\n                        <H6 mb={1}>Nombre</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreCuenta\"\r\n                            placeholder=\"Nombre\"\r\n                            value={values.nombreCuenta}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreCuenta && errors.nombreCuenta)}\r\n                            helperText={touched.nombreCuenta && errors.nombreCuenta} />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Moneda</H6>\r\n                        <AppTextField select fullWidth size=\"small\" name=\"moneda\" value={values.moneda} onChange={handleChangeMoneda} SelectProps={{\r\n                            native: true,\r\n                            IconComponent: KeyboardArrowDown\r\n                        }}>\r\n                            <option value=\"1\">Boliviano</option>\r\n                            <option value=\"2\">Dolar</option>\r\n                        </AppTextField>\r\n\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Debe</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"debe\"\r\n                            placeholder=\"Debe\"\r\n                            value={values.debe}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.debe && errors.debe)}\r\n                            helperText={touched.debe && errors.debe}\r\n                            type=\"number\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Haber</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"haber\"\r\n                            placeholder=\"Haber\"\r\n                            value={values.haber}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.haber && errors.haber)}\r\n                            helperText={touched.haber && errors.haber}\r\n                            type=\"number\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Scrollbar>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button fullWidth variant=\"outlined\" onClick={onClose}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button fullWidth type=\"submit\" variant=\"contained\"  >\r\n                            Guardar\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal>;\r\n};\r\n\r\nconst images = [\"/static/products/watch.png\", \"/static/products/camera.png\", \"/static/products/headphone.png\"];\r\nexport default CreatePlanCuentaModal;","\r\nimport { GuardarPlanCuentaService } from \"Services/api-ventas-erp/PlanCuentaService\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport const UseGuardarPadrePlanCuenta = (values) => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const handlerSubmitGuardarPadre = () => {\r\n        ApiGuardar()\r\n    }\r\n    const ApiGuardar = async () => {\r\n        const { data } = await GuardarPlanCuentaService(values);\r\n        if (data.status == 1) {\r\n            enqueueSnackbar(data.message, { variant: 'success' });\r\n        }\r\n        else {\r\n            enqueueSnackbar(data.message, { variant: 'error' });\r\n        }\r\n    }\r\n    return {\r\n        handlerSubmitGuardarPadre\r\n    }\r\n}","\r\nimport { GuardarPlanCuentaService } from \"Services/api-ventas-erp/PlanCuentaService\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport const UseGuardarHijoPlanCuenta = (values) => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const handlerSubmitGuardar = () => {\r\n        ApiGuardar()\r\n    }\r\n    const ApiGuardar = async () => {\r\n        console.log(values)\r\n        const { data } = await GuardarPlanCuentaService(values);\r\n        if (data.status == 1) {\r\n            enqueueSnackbar(data.message, { variant: 'success' });\r\n        }\r\n        else {\r\n            enqueueSnackbar(data.message, { variant: 'error' });\r\n        }\r\n    }\r\n    return {\r\n        handlerSubmitGuardar\r\n    }\r\n}","import { Edit } from \"@mui/icons-material\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { Box, IconButton, Rating } from \"@mui/material\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport Delete from \"icons/Delete\";\r\nimport CreatePlanCuentaModal from \"./create-plan-cuenta-modal\";\r\nimport { UseEditarPlanCuenta } from \"../hooks/useEditarPlanCuenta\";\r\nconst PlanCuentaColumns = [\r\n    {\r\n        Header: \"Codigo\",\r\n        accessor: \"codigo\"\r\n    },\r\n    {\r\n        Header: \"Nombre\",\r\n        accessor: \"nombreCuenta\"\r\n    },\r\n    {\r\n        Header: \"Moneda\",\r\n        accessor: \"moneda\"\r\n    },\r\n    {\r\n        Header: \"Valor\",\r\n        accessor: \"valor\"\r\n    },\r\n    {\r\n        Header: \"Nivel\",\r\n        accessor: \"nivel\"\r\n    },\r\n    {\r\n        Header: \"Debe\",\r\n        accessor: \"debe\"\r\n    },\r\n    {\r\n        Header: \"Haber\",\r\n        accessor: \"haber\"\r\n    },\r\n    {\r\n        Header: \"Acciones\",\r\n        accessor: \"acciones\",\r\n        Cell: ({\r\n            row\r\n        }) => {\r\n            const {\r\n                codigo,\r\n                nombreCuenta,\r\n                moneda,\r\n                valor,\r\n                nivel,\r\n                debe,\r\n                haber\r\n            } = row.original;\r\n            const style = {\r\n                fontSize: 19,\r\n                transition: \"color 0.3s\",\r\n                color: row.isSelected ? \"white\" : \"text.disabled\"\r\n            };\r\n            const [tipo, setTipo] = useState('');\r\n            const {openModal, editar, handlerClose, handlerOpen, options } = UseEditarPlanCuenta(row.original.id);\r\n            return <Fragment>\r\n                <IconButton\r\n                    onClick={() => {\r\n                        setTipo('hijo')\r\n                       \r\n                    }}\r\n                >\r\n                    <AddCircleIcon sx={{\r\n                        fontSize: 18,\r\n                        color: \"text.disabled\"\r\n                    }} />\r\n                </IconButton>\r\n                <IconButton onClick={handlerOpen}>\r\n                    <Edit sx={{\r\n                        fontSize: 18,\r\n                        color: \"text.disabled\"\r\n                    }} />\r\n                </IconButton>\r\n                <IconButton onClick={() => { alert('funcion pendiente') }}>\r\n                    <Delete sx={style} />\r\n                </IconButton>\r\n                <CreatePlanCuentaModal editPlanCuenta tipo={tipo} open={openModal} data={row.original} onClose={handlerClose} />\r\n            </Fragment >;\r\n        }\r\n    }];\r\nexport default PlanCuentaColumns;","\r\nimport { EditarPlanCuentaService } from \"Services/api-ventas-erp/PlanCuentaService\";\r\nimport { useState } from \"react\";\r\n\r\nexport const UseEditarPlanCuenta = ( id ) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const [editar, setEditar] = useState({\r\n        id: 0,\r\n        nombreClasificacion: '',\r\n        clasificacionId: 0,\r\n        nombreClasificacionPadre: ''\r\n    })\r\n    const [options, setOptions] = useState([\r\n        { id: 0, nombreClasificacion: \"Seleccione\" }\r\n    ]);\r\n\r\n    const apiEditar = async () => {\r\n        const { data } = await EditarPlanCuentaService(id);\r\n        setEditar(data.data.clasificacion);\r\n    }\r\n    const handlerOpen = (e) => {\r\n        setOpenModal(true);\r\n        apiEditar()\r\n    }\r\n    const handlerClose = (e) => {\r\n        setOpenModal(false);\r\n    }\r\n    return {\r\n        editar,\r\n        options,\r\n        openModal,\r\n        handlerOpen,\r\n        handlerClose\r\n    }\r\n}","import { Box, Button, Card, Divider, Grid } from '@mui/material'\r\nimport IconWrapper from 'components/IconWrapper'\r\nimport FlexBox from 'components/flexbox/FlexBox'\r\nimport SearchInput from 'components/input-fields/SearchInput'\r\nimport ShoppingBasket from 'icons/ShoppingBasket'\r\nimport CustomTable from 'page-sections/admin-ecommerce/CustomTable'\r\nimport { HeadingWrapper } from 'pages/admin-ecommerce/product-management'\r\nimport React, { useEffect, useState } from 'react'\r\nimport CreatePlanCuentaModal from './components/create-plan-cuenta-modal'\r\nimport PlanCuentaColumns from './components/plan-cuenta-columns'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { H5, Tiny } from 'components/Typography'\r\nimport Add from 'icons/Add'\r\nimport {UseListPlanCuenta} from './hooks/useListarPlanCuenta'\r\nimport { Context } from 'contexts/ContextDataTable'\r\nimport { UseCreatePlanCuenta } from './hooks/useCreatePlanCuenta'\r\n\r\nconst PlanCuentasList = () => {\r\n  const {\r\n    t\r\n  } = useTranslation();\r\n  const { filter, filteredItem, listar, searchValue, setSearchValue } = UseListPlanCuenta();\r\n  const { create, options, setCreate, openModal, handlerOpen, handlerClose } = UseCreatePlanCuenta();\r\n  const [actualizarTable, setActualizarTableContext] = useState(false);\r\n  useEffect(() => {\r\n    listar();\r\n    setActualizarTableContext(false);\r\n  }, [searchValue, actualizarTable]);\r\n  return (\r\n    <Context.Provider value={[actualizarTable, setActualizarTableContext]}>\r\n      <Card sx={{\r\n        padding: 3\r\n      }}>\r\n        <H5 mb={3}>Plan Cuentas</H5>\r\n        <Divider sx={{\r\n          my: 2\r\n        }} />\r\n        <Box mt={2} mb={3}>\r\n          <Tiny lineHeight={1.8} >\r\n            Cree su estructura de planes de cuenta\r\n          </Tiny>\r\n          <br />\r\n          <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n            <SearchInput bordered={'true'} placeholder=\"Buscar plan cuenta\" onChange={e => setSearchValue(e.target.value)} />\r\n            <Button\r\n              variant=\"contained\"\r\n              endIcon={<Add />}\r\n              onClick={handlerOpen}\r\n            >\r\n              {t(\"Añadir Plan Cuenta\")}\r\n            </Button>\r\n          </HeadingWrapper>\r\n          <CustomTable columnShape={PlanCuentaColumns} data={filteredItem} />\r\n          <CreatePlanCuentaModal data={create} tipo={'nuevo'} open={openModal} onClose={handlerClose} />\r\n        </Box>\r\n      </Card>\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default PlanCuentasList\r\n","import { ObtenerPlanCuentaService } from \"Services/api-ventas-erp/PlanCuentaService\";\r\nimport { useState } from \"react\";\r\nimport { searchByNombre } from \"../utils/utilPlanCuenta\";\r\n\r\nexport const UseListPlanCuenta = () => {\r\n\r\n  const [filteredItem, setFilteredItem] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const filter = () => {\r\n    const result = searchByNombre(filteredItem, searchValue);\r\n    setFilteredItem(result);\r\n  }\r\n  const listar = async () => {\r\n    const { data } = await ObtenerPlanCuentaService();\r\n    setFilteredItem(data.data)\r\n  }\r\n  return {\r\n    filteredItem,\r\n    setFilteredItem,\r\n    searchValue,\r\n    setSearchValue,\r\n    filter,\r\n    listar\r\n  }\r\n}\r\n","export const searchByNombre = (listData, searchValue) => {\r\n    if (searchValue.length > 0) {\r\n      const searchResult = listData.filter(item => item.nombreCuenta.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n      return searchResult;\r\n    } else {\r\n      return listData;\r\n    }\r\n  };\r\n  export const getRoute = pathname => {\r\n    const str = pathname.split(\"/\");\r\n    return `/${str[1]}`;\r\n  };","import { CrearPlanCuentaService } from \"Services/api-ventas-erp/PlanCuentaService\";\r\nimport { useState } from \"react\";\r\n\r\nexport const UseCreatePlanCuenta = () => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const [create, setCreate] = useState({\r\n        tipo: '',\r\n        id: \"\",\r\n        codigo: '',\r\n        nombreCuenta: \"\",\r\n        moneda: '1',\r\n        valor: '1',\r\n        codigoIdentificador: '0',\r\n        nivel: '0',\r\n        debe: '0',\r\n        haber: '0',\r\n        vPlanCuentaId: '0',\r\n    })\r\n    const [options, setOptions] = useState([\r\n        { id: 0, nombreClasificacion: \"Seleccione\" }\r\n    ]);\r\n\r\n    const ApiCrearPlanCuenta = async () => {\r\n        const { data } = await CrearPlanCuentaService(0, 0);\r\n        setCreate({ ...create, codigo: data.data.codigo, nivel: data.data.nivel })\r\n        setOptions(data.data.clasificaciones);\r\n    }\r\n    const handlerOpen = (e) => {\r\n        setOpenModal(true);\r\n        ApiCrearPlanCuenta()\r\n    }\r\n    const handlerClose = (e) => {\r\n        setOpenModal(false);\r\n    }\r\n    return {\r\n        options,\r\n        create,\r\n        setCreate,\r\n        openModal,\r\n        handlerOpen,\r\n        handlerClose,\r\n        data: {\r\n            create,\r\n            options\r\n        }\r\n    }\r\n}","import { styled, TableCell } from \"@mui/material\";\nimport { lightTheme } from \"../../../../constants\"; // ---------------------------------------------------------\n// table cell component version 1 - example account page - recent devices and notifications tab\n\nexport const BodyTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  fontSize: 14,\n  fontWeight: 500,\n  paddingTop: \"1.5rem\",\n  paddingBottom: \"1.5rem\",\n  color: theme.palette.text.secondary,\n  borderBottom: `1px solid ${lightTheme(theme) ? theme.palette.grey[200] : theme.palette.divider}`,\n  \"&:first-of-type\": {\n    paddingLeft: 24\n  },\n  \"&:last-of-type\": {\n    paddingRight: 24\n  }\n}));\nexport const HeadTableCell = styled(BodyTableCell)(({\n  theme\n}) => ({\n  paddingTop: \"1rem\",\n  paddingBottom: \"1rem\",\n  fontWeight: 600,\n  color: theme.palette.text.primary\n})); // ----------------------------------------------------------\n// ---------------------------------------------------------\n// table cell component version 1 - example account page - billing, statements referrals etc.\n\nexport const BodyTableCellV2 = styled(TableCell)(({\n  theme\n}) => ({\n  fontSize: 12,\n  fontWeight: 500,\n  paddingTop: \"1rem\",\n  paddingBottom: \"1rem\",\n  borderBottom: `1px solid ${lightTheme(theme) ? theme.palette.grey[200] : theme.palette.divider}`,\n  \"&:first-of-type\": {\n    paddingLeft: 24,\n    fontWeight: 600\n  },\n  \"&:last-of-type\": {\n    paddingRight: 24,\n    maxWidth: 90\n  }\n}));\nexport const HeadTableCellV2 = styled(BodyTableCellV2)(({\n  theme\n}) => ({\n  fontWeight: 600,\n  paddingTop: \"1rem\",\n  paddingBottom: \"1rem\",\n  color: theme.palette.text.primary\n})); // ----------------------------------------------------------","import axios from \"axios\";\r\n\r\nexport async function ObtenerProcesoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/asiento`)\r\n}\r\nexport async function CrearProcesoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/asiento/create`)\r\n}\r\nexport async function GuardarProcesoService({ nombreAsiento, tipoAsientoId, id, nombreTipoAsiento, cuentas }) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/asiento`, { nombreAsiento, tipoAsientoId, id, nombreTipoAsiento, cuentas });\r\n}\r\nexport async function ModificarProcesoService({ id, codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vProcesoId }) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/asiento`, { id, codigo, nombreCuenta, moneda, valor, codigoIdentificador, nivel, debe, haber, vProcesoId });\r\n}\r\nexport async function EditarProcesoService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/asiento/editar`, {});\r\n}\r\nexport async function EliminarProcesoService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/asiento`, {});\r\n}","import { KeyboardArrowDown } from \"@mui/icons-material\";\r\nimport { Autocomplete, Box, Button, Grid, IconButton, RadioGroup, styled, Table, TableBody, TableHead, TableRow, TextField, useMediaQuery } from \"@mui/material\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { useFormik } from \"formik\";\r\nimport { t } from \"i18next\";\r\nimport Add from \"icons/Add\";\r\nimport Delete from \"icons/Delete\";\r\nimport { BodyTableCell, HeadTableCell } from \"page-sections/accounts/account/common/StyledComponents\";\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\"; // component props interface\r\nimport { UseGuardarProceso } from \"../hooks/UseGuardarProceso\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 900,\r\n    minWidth: 400,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst CreateProcesoModal = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editProceso,\r\n    tipo,\r\n    optionTipoAsiento,\r\n    optionPlanCuenta,\r\n    optionRol\r\n}) => {\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const [select, setSelect] = useState(null);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectPlanCuenta, setSelectPlanCuenta] = useState([{\r\n        id: 0,\r\n        nombreCuenta: '',\r\n        codigo: ''\r\n    }]);\r\n    const [selectRol, setSelectRol] = useState([{\r\n        id: 0,\r\n        rol: ''\r\n    }]);\r\n    const [context, setContext] = useContext(Context);\r\n    const [items, setItems] = useState([]);\r\n    const handleAddItem = () => {\r\n        items.push({\r\n            id: items.length,\r\n            codigo: '',\r\n            nombreCuenta: '',\r\n            VPlanCuentaId: 0,\r\n            asientoId: 0,\r\n            rol: 'debe'\r\n        });\r\n\r\n        setItems([...items]);\r\n        setValues({ ...values, cuentas: items })\r\n    };\r\n    const handleUpdateItem = (e, id) => {\r\n        const fieldName = e.target.getAttribute(\"name\");\r\n        setItems(items => items.map(item => {\r\n            if (item.id === id) {\r\n                item[fieldName] = e.target.value;\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    const handleDeleteItem = id => {\r\n        setItems(items => items.filter(item => item.id !== id));\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        nombreAsiento: Yup.string().required(\"Nombre es requerido!\"),\r\n        tipoAsientoId: Yup.string().required(\"Tipo asiento es requerido!\"),\r\n        id: Yup.number().nullable(),\r\n        nombreTipoAsiento: Yup.string().required(\"Seleccione tipo asiento\"),\r\n        cuentas: Yup.array()\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        isValid,\r\n        setFieldValue,\r\n        resetForm,\r\n        setValues\r\n    } = useFormik({\r\n        initialValues: data,\r\n        validationSchema,\r\n        //enableReinitialize: true,\r\n        onSubmit: async (values) => {\r\n            if (editProceso) {\r\n\r\n            } else {\r\n                handlerSubmitGuardar(values)\r\n                hadlerClose();\r\n                setContext(true);\r\n            }\r\n        }\r\n    });\r\n    useEffect(() => {\r\n\r\n    }, [tipo])\r\n    const { handlerSubmitGuardar } = UseGuardarProceso();\r\n    const hadlerClose = () => {\r\n        onClose();\r\n        resetForm();\r\n        setItems([]);\r\n        setSelect(null);\r\n    }\r\n    return <StyledAppModal open={open} handleClose={hadlerClose} >\r\n        <H2 marginBottom={2}>\r\n            {editProceso ? \"Editar asiento\" : \"Añadir asiento\"}\r\n        </H2>\r\n\r\n        <form onSubmit={(e) => {\r\n            console.log(values);\r\n            console.log(items)\r\n            handleSubmit(e)\r\n        }}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Nombre asiento</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreAsiento\"\r\n                            placeholder=\"Nombre del asiento\"\r\n                            value={values.nombreAsiento}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreAsiento && errors.nombreAsiento)}\r\n                            helperText={touched.nombreAsiento && errors.nombreAsiento}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Tipo asiento</H6>\r\n                        <Autocomplete\r\n                            fullWidth\r\n                            getOptionLabel={(optionTipoAsiento) => optionTipoAsiento.nombreTipoAsiento}\r\n                            options={optionTipoAsiento}\r\n                            autoSelect={true}\r\n                            value={select ? select : null}\r\n                            size=\"small\"\r\n                            isOptionEqualToValue={(option, value) => {\r\n                                if (value) {\r\n                                    console.log('obtener select ')\r\n                                    return (option.value === value.value)\r\n                                } else {\r\n                                    console.log('obtener select vacio')\r\n                                    return false;\r\n                                }\r\n                            }}\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setSelect(newValue);\r\n                                    setValues({ ...values, tipoAsientoId: newValue.id, nombreTipoAsiento: newValue.nombreTipoAsiento })\r\n                                    console.log(newValue)\r\n                                } else {\r\n                                    setSelect(null);\r\n                                }\r\n                            }}\r\n\r\n                            renderInput={\r\n                                (params) => <TextField\r\n                                    {...params}\r\n                                    label=\"Pertenece a\"\r\n                                    error={Boolean(touched.nombreTipoAsiento && errors.nombreTipoAsiento)}\r\n                                    helperText={touched.nombreTipoAsiento && errors.nombreTipoAsiento}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <Box my={3}>\r\n                            <Scrollbar autoHide={false}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    endIcon={<Add />}\r\n                                    onClick={handleAddItem}\r\n                                >\r\n                                    {t(\"Añadir cuenta\")}\r\n                                </Button>\r\n                                <Table sx={{\r\n                                    minWidth: 700\r\n                                }}>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <HeadTableCell width={200}>Codigo</HeadTableCell>\r\n                                            <HeadTableCell width={400}>Nombre cuenta</HeadTableCell>\r\n                                            <HeadTableCell>Uso</HeadTableCell>\r\n                                            <HeadTableCell>Accion</HeadTableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n\r\n                                    <TableBody>\r\n                                        {items.map((item, i) => <TableRow key={item.id}>\r\n                                            <BodyTableCell>\r\n                                                <AppTextField\r\n                                                    //onChange={e => handleUpdateItem(e, item.id)}\r\n                                                    fullWidth\r\n                                                    size=\"small\"\r\n                                                    name=\"name\"\r\n                                                    label=\"Codigo\"\r\n                                                    value={items[i].codigo}\r\n                                                />\r\n                                            </BodyTableCell>\r\n\r\n                                            <BodyTableCell>\r\n                                                <Autocomplete\r\n                                                    fullWidth\r\n                                                    getOptionLabel={(options) => options.nombreCuenta}\r\n                                                    //defaultValue={optionPlanCuenta[0]}\r\n                                                    options={optionPlanCuenta}\r\n                                                    autoSelect={true}\r\n                                                    //inputValue={inputValue}\r\n                                                    value={items[i] ? items[i] : null}\r\n                                                    size=\"small\"\r\n                                                    isOptionEqualToValue={(option, value) => {\r\n                                                        if (value) {\r\n                                                            return (option.value === value.value)\r\n                                                        } else {\r\n                                                            return false;\r\n                                                        }\r\n                                                    }}\r\n                                                    onChange={(event, newValue) => {\r\n                                                        if (newValue != null) {\r\n                                                            setSelectPlanCuenta(newValue);\r\n                                                            items[i].VPlanCuentaId = newValue.id;\r\n                                                            items[i].nombreCuenta = newValue.nombreCuenta;\r\n                                                            items[i].codigo = newValue.codigo;\r\n                                                            setItems([...items]);\r\n                                                        } else {\r\n                                                            setSelectPlanCuenta(null);\r\n                                                            items[i].VPlanCuentaId = '';\r\n                                                            items[i].nombreCuenta = '';\r\n                                                            items[i].codigo = '';\r\n                                                            setItems([...items]);\r\n                                                        }\r\n                                                    }}\r\n\r\n                                                    renderInput={\r\n                                                        (params) => <TextField\r\n                                                            {...params}\r\n                                                            label=\"Pertenece a\"\r\n                                                            error={Boolean(touched.tipoAsientoId && errors.tipoAsientoId)}\r\n                                                            helperText={touched.tipoAsientoId && errors.tipoAsientoId}\r\n                                                        />\r\n                                                    }\r\n                                                />\r\n                                            </BodyTableCell>\r\n\r\n                                            <BodyTableCell>\r\n                                                <AppTextField select fullWidth size=\"small\" name=\"planCuentaId\" value={items[i].rol} onChange={(e) => {\r\n                                                    console.log(e.target.value)\r\n                                                    items[i].rol = e.target.value;\r\n                                                    console.log(items)\r\n                                                    setItems([...items])\r\n                                                }} SelectProps={{\r\n                                                    native: true,\r\n                                                    IconComponent: KeyboardArrowDown\r\n                                                }} helperText={touched.tipoAsientoId && errors.tipoAsientoId} error={Boolean(touched.codigoCliente && errors.codigoCliente)} >\r\n                                                    <React.Fragment>\r\n                                                        {\r\n                                                            optionRol?.map(\r\n                                                                (rol, i) => <option key={i} value={rol.id}>{rol.rol}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </React.Fragment>\r\n                                                </AppTextField>\r\n\r\n                                            </BodyTableCell>\r\n\r\n                                            <BodyTableCell>\r\n                                                <IconButton onClick={() => handleDeleteItem(item.id)}>\r\n                                                    <Delete sx={{\r\n                                                        color: \"text.disabled\"\r\n                                                    }} />\r\n                                                </IconButton>\r\n                                            </BodyTableCell>\r\n                                        </TableRow>)}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Scrollbar>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Scrollbar>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button fullWidth variant=\"outlined\" onClick={hadlerClose}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button fullWidth type=\"submit\" variant=\"contained\"  >\r\n                            Guardar\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal >;\r\n};\r\n\r\nconst images = [\"/static/products/watch.png\", \"/static/products/camera.png\", \"/static/products/headphone.png\"];\r\nexport default CreateProcesoModal;","import { GuardarProcesoService } from \"Services/api-ventas-erp/procesoService\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport const UseGuardarProceso = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const handlerSubmitGuardar = (values) => {\r\n        ApiGuardar(values)\r\n    }\r\n    const ApiGuardar = async (values) => {\r\n        console.log(values)\r\n        const { data } = await GuardarProcesoService(values);\r\n        if (data.status == 1) {\r\n            enqueueSnackbar(data.message, { variant: 'success' });\r\n        }\r\n        else {\r\n            enqueueSnackbar(data.message, { variant: 'error' });\r\n        }\r\n    }\r\n    return {\r\n        handlerSubmitGuardar,\r\n    }\r\n}","import { Edit } from \"@mui/icons-material\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport { Box, IconButton, Rating } from \"@mui/material\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport Delete from \"icons/Delete\";\r\nimport CreateProcesoModal from \"./create-proceso-modal\";\r\nimport { UseEditarProceso } from \"../hooks/UseEditarProceso\";\r\nconst ProcesoColumns = [\r\n    {\r\n        Header: \"Tipo asiento\",\r\n        accessor: \"nombreTipoAsiento\"\r\n    },\r\n    {\r\n        Header: \"Nombre asiento\",\r\n        accessor: \"nombreAsiento\"\r\n    },\r\n    {\r\n        Header: \"Acciones\",\r\n        accessor: \"acciones\",\r\n        Cell: ({\r\n            row\r\n        }) => {\r\n            const {\r\n                codigo,\r\n                nombreCuenta,\r\n                moneda,\r\n                valor,\r\n                nivel,\r\n                debe,\r\n                haber\r\n            } = row.original;\r\n            const style = {\r\n                fontSize: 19,\r\n                transition: \"color 0.3s\",\r\n                color: row.isSelected ? \"white\" : \"text.disabled\"\r\n            };\r\n            const [tipo, setTipo] = useState('editar');\r\n            useEffect(() => {\r\n\r\n            }, [tipo])\r\n            const { editar, openModal, optionPlanCuenta, optionTipoAsiento, optionRol, handlerClose,handlerOpen } = UseEditarProceso()\r\n            return <Fragment>\r\n                <IconButton onClick={(e) => {\r\n                    handlerOpen(e)\r\n                    setTipo('editar')\r\n                }}>\r\n                    <Edit sx={{\r\n                        fontSize: 18,\r\n                        color: \"text.disabled\"\r\n                    }} />\r\n                </IconButton>\r\n                <IconButton onClick={() => { alert('funcion pendiente') }}>\r\n                    <Delete sx={style} />\r\n                </IconButton>\r\n                <CreateProcesoModal\r\n                    optionTipoAsiento={optionTipoAsiento}\r\n                    optionPlanCuenta={optionPlanCuenta}\r\n                    optionRol={optionRol}\r\n                    tipo={tipo}\r\n                    editProceso\r\n                    open={openModal}\r\n                    data={editar}\r\n                    onClose={\r\n                        (e) => {\r\n                            handlerClose()\r\n                            setTipo('')\r\n                        }\r\n                    }\r\n                />\r\n            </Fragment >;\r\n        }\r\n    }];\r\nexport default ProcesoColumns;","import { CrearProcesoService } from \"Services/api-ventas-erp/procesoService\";\r\nimport { useState } from \"react\";\r\n\r\nexport const UseEditarProceso = () => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [editar, setCreate] = useState({\r\n        nombreAsiento: '',\r\n        id: 0,\r\n        tipoAsientoId: 0,\r\n        nombreTipoAsiento:'',\r\n        cuentas:[]\r\n    })\r\n    const [optionTipoAsiento, setOptionTipoAsiento] = useState([]);\r\n    const [optionPlanCuenta, setOptionPlanCuenta] = useState([]);\r\n    const [optionRol, setOptionRol] = useState([]);\r\n\r\n    const ApiCrearProceso = async () => {\r\n        const { data } = await CrearProcesoService();\r\n        setOptionTipoAsiento(data.data.tipoAsiento);\r\n        setOptionPlanCuenta(data.data.planCuenta);\r\n        setOptionRol(data.data.rol);\r\n    }\r\n    const handlerOpen = (e) => {\r\n        setOpenModal(true);\r\n        ApiCrearProceso()\r\n    }\r\n    const handlerClose = (e) => {\r\n        setOpenModal(false);\r\n    }\r\n    return {\r\n        optionTipoAsiento,\r\n        optionPlanCuenta,\r\n        optionRol,\r\n        editar,\r\n        setCreate,\r\n        openModal,\r\n        handlerOpen,\r\n        handlerClose\r\n    }\r\n}","import { Box, Button, Card, Divider } from '@mui/material'\r\nimport SearchInput from 'components/input-fields/SearchInput'\r\nimport CustomTable from 'page-sections/admin-ecommerce/CustomTable'\r\nimport { HeadingWrapper } from 'pages/admin-ecommerce/product-management'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { H5, Tiny } from 'components/Typography'\r\nimport Add from 'icons/Add'\r\nimport CreateProcesoModal from './components/create-proceso-modal'\r\nimport ProcesoColumns from './components/proceso-columns'\r\nimport { Context } from 'contexts/ContextDataTable'\r\nimport { UseListProceso } from './hooks/UseListaProceso'\r\nimport { UseCrearProceso } from './hooks/UseCrearProceso'\r\n\r\nconst ProcesosList = () => {\r\n    const {\r\n        t\r\n    } = useTranslation();\r\n    const [actualizarTable, setActualizarTableContext] = useState(false);\r\n    const { filter, filteredItem, listar, searchValue, setSearchValue } = UseListProceso();\r\n    const { create, optionPlanCuenta, optionRol, optionTipoAsiento, setCreate, openModal, handlerOpen, handlerClose } = UseCrearProceso();\r\n    useEffect(() => {\r\n        listar();\r\n        setActualizarTableContext(false);\r\n    }, [searchValue, actualizarTable]);\r\n    \r\n    return (\r\n        <Context.Provider value={[actualizarTable, setActualizarTableContext]}>\r\n            <Card sx={{\r\n                padding: 3\r\n            }}>\r\n                <H5 mb={3}>Asientos contables</H5>\r\n                <Divider sx={{\r\n                    my: 2\r\n                }} />\r\n                <Box mt={2} mb={3}>\r\n                    <Tiny lineHeight={1.8} >\r\n                        Cree un tipo de proceso para registrar un proceso Ej: venta, compra, prestamos, credito, etc.\r\n                    </Tiny>\r\n                    <br />\r\n                    <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <SearchInput bordered={'true'} placeholder=\"Buscar plan cuenta\" onChange={e => setSearchValue(e.target.value)} />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            endIcon={<Add />}\r\n                            onClick={handlerOpen}\r\n                        >\r\n                            {t(\"Añadir asiento\")}\r\n                        </Button>\r\n                    </HeadingWrapper>\r\n                    <CustomTable columnShape={ProcesoColumns} data={filteredItem} />\r\n                    <CreateProcesoModal data={create} optionTipoAsiento={optionTipoAsiento} optionPlanCuenta={optionPlanCuenta} optionRol={optionRol} tipo={'nuevo'} open={openModal} onClose={handlerClose} />\r\n                </Box>\r\n            </Card>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default ProcesosList\r\n","import { useState } from \"react\";\r\nimport { searchByProceso } from \"../utils/utilsProceso\";\r\nimport { ObtenerProcesoService } from \"Services/api-ventas-erp/procesoService\";\r\n\r\nexport const UseListProceso = () => {\r\n\r\n  const [filteredItem, setFilteredItem] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const filter = () => {\r\n    const result = searchByProceso(filteredItem, searchValue);\r\n    setFilteredItem(result);\r\n  }\r\n  const listar = async () => {\r\n    const { data } = await ObtenerProcesoService();\r\n    setFilteredItem(data.data)\r\n  }\r\n  return {\r\n    filteredItem,\r\n    setFilteredItem,\r\n    searchValue,\r\n    setSearchValue,\r\n    filter,\r\n    listar\r\n  }\r\n}\r\n","export const searchByProceso = (listData, searchValue) => {\r\n    if (searchValue.length > 0) {\r\n      const searchResult = listData.filter(item => item.nombreCuenta.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n      return searchResult;\r\n    } else {\r\n      return listData;\r\n    }\r\n  };\r\n  export const getRoute = pathname => {\r\n    const str = pathname.split(\"/\");\r\n    return `/${str[1]}`;\r\n  };","import { CrearProcesoService } from \"Services/api-ventas-erp/procesoService\";\r\nimport { useState } from \"react\";\r\n\r\nexport const UseCrearProceso = () => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [create, setCreate] = useState({\r\n        nombreAsiento: '',\r\n        id: 0,\r\n        tipoAsientoId: 0,\r\n        nombreTipoAsiento:'',\r\n        cuentas:[]\r\n    })\r\n    const [optionTipoAsiento, setOptionTipoAsiento] = useState([]);\r\n    const [optionPlanCuenta, setOptionPlanCuenta] = useState([]);\r\n    const [optionRol, setOptionRol] = useState([]);\r\n\r\n    const ApiCrearProceso = async () => {\r\n        const { data } = await CrearProcesoService();\r\n        setOptionTipoAsiento(data.data.tipoAsiento);\r\n        setOptionPlanCuenta(data.data.planCuenta);\r\n        setOptionRol(data.data.rol);\r\n    }\r\n    const handlerOpen = (e) => {\r\n        setOpenModal(true);\r\n        ApiCrearProceso()\r\n    }\r\n    const handlerClose = (e) => {\r\n        setOpenModal(false);\r\n    }\r\n    return {\r\n        optionTipoAsiento,\r\n        optionPlanCuenta,\r\n        optionRol,\r\n        create,\r\n        setCreate,\r\n        openModal,\r\n        handlerOpen,\r\n        handlerClose\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport async function ObtenerTipoAsientoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/tipo-asiento`)\r\n}\r\nexport async function CrearTipoAsientoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/tipo-asiento/create`)\r\n}\r\nexport async function GuardarTipoAsientoService({ id, nombreTipoAsiento }) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/tipo-asiento`, {id, nombreTipoAsiento });\r\n}\r\nexport async function ModificarTipoAsientoService({ id, nombreTipoAsiento }) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/tipo-asiento`,{id, nombreTipoAsiento });\r\n}\r\nexport async function EditarTipoAsientoService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/tipo-asiento/editar/${id}` );\r\n}\r\nexport async function EliminarTipoAsientoService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/tipo-asiento`, {});\r\n}","export const searchByNombreTipoAsiento = (listData, searchValue) => {\r\n    if (searchValue.length > 0) {\r\n      const searchResult = listData.filter(item => item.nombreTipoAsiento.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n      return searchResult;\r\n    } else {\r\n      return listData;\r\n    }\r\n  };\r\n  export const getRoute = pathname => {\r\n    const str = pathname.split(\"/\");\r\n    return `/${str[1]}`;\r\n  };","import { Button, Grid, IconButton, RadioGroup, styled, Table, TableBody, TableHead, TableRow, TextField, useMediaQuery } from \"@mui/material\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\"; // component props interface\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nimport { UseGuardarTipoAsiento } from \"../hooks/UseGuardarTipoAsiento\";\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 600,\r\n    minWidth: 200,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst CreateTipoAsientoModal = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editProceso,\r\n    tipo,\r\n    id\r\n}) => {\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const [context, setContext] = useContext(Context);\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        nombreTipoAsiento: Yup.string().required(\"Nombre es requerido!\"),\r\n        id: Yup.number().nullable(),\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        isValid,\r\n        setFieldValue,\r\n        resetForm,\r\n        setValues\r\n    } = useFormik({\r\n        initialValues: data,\r\n        validationSchema,\r\n        //enableReinitialize: true,\r\n        onSubmit: async (values) => {\r\n            if (editProceso) {\r\n\r\n            } else {\r\n                handlerSubmitGuardar(values)\r\n                hadlerClose();\r\n                setContext(true);\r\n                setContext(true)\r\n            }\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        setValues(data);\r\n    }, [data])\r\n\r\n    const { handlerSubmitGuardar } = UseGuardarTipoAsiento();\r\n\r\n    const hadlerClose = () => {\r\n        onClose();\r\n        resetForm();\r\n    }\r\n    return <StyledAppModal open={open} handleClose={hadlerClose} >\r\n        <H2 marginBottom={2}>\r\n            {editProceso ? \"Editar Tipo asiento\" : \"Tipo asiento\"}\r\n        </H2>\r\n\r\n        <form onSubmit={(e) => {\r\n            handleSubmit(e)\r\n        }}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Nombre tipo asiento</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreTipoAsiento\"\r\n                            value={values.nombreTipoAsiento}\r\n                            placeholder=\"Nombre del asiento\"\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreTipoAsiento && errors.nombreTipoAsiento)}\r\n                            helperText={touched.nombreTipoAsiento && errors.nombreTipoAsiento}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Scrollbar>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button fullWidth variant=\"outlined\" onClick={hadlerClose}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button fullWidth type=\"submit\" variant=\"contained\"  >\r\n                            Guardar\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal >;\r\n};\r\n\r\nexport default CreateTipoAsientoModal;","import { GuardarTipoAsientoService } from \"Services/api-ventas-erp/tipoAsiento\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nexport const UseGuardarTipoAsiento = () => {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const handlerSubmitGuardar = (values) => {\r\n        ApiGuardar(values)\r\n    }\r\n    const ApiGuardar = async (values) => {\r\n        const { data } = await GuardarTipoAsientoService(values);\r\n        if (data.status == 1) {\r\n            enqueueSnackbar(data.message, { variant: 'success' });\r\n        }\r\n        else {\r\n            enqueueSnackbar(data.message, { variant: 'error' });\r\n        }\r\n    }\r\n    return {\r\n        handlerSubmitGuardar,\r\n    }\r\n}","import { Edit } from \"@mui/icons-material\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { Fragment, useState } from \"react\";\r\nimport Delete from \"icons/Delete\";\r\nimport { UseEditarTipoAsiento } from \"../hooks/UseEditarTipoAsiento\";\r\nimport CreateTipoAsientoModal from \"./create-tipo-asiento-modal\";\r\nconst ClasificacionColumns = [\r\n    {\r\n        Header: \"Nombre Tipo Asiento\",\r\n        accessor: \"nombreTipoAsiento\"\r\n    },\r\n    {\r\n        Header: \"Acciones\",\r\n        accessor: \"id\",\r\n        Cell: ({\r\n            row\r\n        }) => {\r\n            const style = {\r\n                fontSize: 19,\r\n                transition: \"color 0.3s\",\r\n                color: row.isSelected ? \"white\" : \"text.disabled\"\r\n            };\r\n            const [tipo, setTipo] = useState('');\r\n            const { openModal, editar, handlerClose, handlerOpen } = UseEditarTipoAsiento(row.original.id);\r\n            return <Fragment>\r\n                <IconButton onClick={() => {\r\n                    setTipo('editar')\r\n                    handlerOpen()\r\n                }}>\r\n                    <Edit sx={{\r\n                        fontSize: 18,\r\n                        color: \"text.disabled\"\r\n                    }} />\r\n                </IconButton>\r\n                <IconButton onClick={() => { alert('funcion pendiente') }}>\r\n                    <Delete sx={style} />\r\n                </IconButton>\r\n                <CreateTipoAsientoModal\r\n                    editProceso\r\n                    open={openModal}\r\n                    data={editar}\r\n                    onClose={\r\n                        (e) => {\r\n                            handlerClose()\r\n                            setTipo('')\r\n                        }\r\n                    }\r\n                    id={row.original.id}\r\n                    tipo={tipo} />\r\n            </Fragment>;\r\n        }\r\n    }];\r\nexport default ClasificacionColumns;","\r\nimport { EditarTipoAsientoService } from \"Services/api-ventas-erp/tipoAsiento\";\r\nimport { useState } from \"react\";\r\n\r\nexport const UseEditarTipoAsiento = (id) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [editar, setEditar] = useState({\r\n        id: 0,\r\n        nombreTipoAsiento:''\r\n    })\r\n    const ApiEditarProceso = async () => {\r\n        const { data } = await EditarTipoAsientoService(id);\r\n        setEditar(data.data.tipoAsiento)\r\n    }\r\n    const handlerOpen = (e) => {\r\n        setOpenModal(true);\r\n        ApiEditarProceso()\r\n    }\r\n    const handlerClose = (e) => {\r\n        setOpenModal(false);\r\n    }\r\n    return {\r\n        editar,\r\n        openModal,\r\n        handlerOpen,\r\n        handlerClose\r\n    }\r\n}","import { Box, Button, Card, Divider, Grid } from '@mui/material'\r\nimport { H5, Tiny } from 'components/Typography'\r\nimport { Context } from 'contexts/ContextDataTable';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport { UseListTipoAsiento } from './hooks/UseListTipoAsiento';\r\nimport { HeadingWrapper } from 'pages/admin-ecommerce/product-management';\r\nimport SearchInput from 'components/input-fields/SearchInput';\r\nimport Add from 'icons/Add';\r\nimport CustomTable from \"page-sections/admin-ecommerce/CustomTable\";\r\nimport TipoAsientoColumns from './components/tipo-asiento-columns';\r\nimport CreateTipoAsientoModal from './components/create-tipo-asiento-modal';\r\nimport { UseCrearTipoAsiento } from './hooks/UseCrearTipoAsiento';\r\n\r\nconst TipoProceso = () => {\r\n    const {\r\n        t\r\n    } = useTranslation();\r\n    const [actualizarTable, setActualizarTableContext] = useState(false);\r\n    const { filter, filteredItem, listar, searchValue, setSearchValue } = UseListTipoAsiento();\r\n    const { create, optionPlanCuenta, optionRol, optionTipoAsiento, setCreate, openModal, handlerOpen, handlerClose } = UseCrearTipoAsiento();\r\n    useEffect(() => {\r\n        listar();\r\n        setActualizarTableContext(false);\r\n    }, [searchValue, actualizarTable]);\r\n    return (\r\n        <Context.Provider value={[actualizarTable, setActualizarTableContext]}>\r\n        <Card sx={{\r\n            padding: 3\r\n        }}>\r\n            <H5 mb={3}>Asientos recurrentes</H5>\r\n            <Divider sx={{\r\n                my: 2\r\n            }} />\r\n            <Box mt={2} mb={3}>\r\n                <Tiny lineHeight={1.8}>\r\n                    Organize los tipo de asiento recurrentes Ej: compras, ventas, ingreso, egreso. \r\n                </Tiny>\r\n                <br />\r\n                <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        endIcon={<Add />}\r\n                        onClick={handlerOpen}\r\n                    >\r\n                        {t(\"Añadir asiento\")}\r\n                    </Button>\r\n                    \r\n                </HeadingWrapper>\r\n                <CustomTable columnShape={TipoAsientoColumns} data={filteredItem} />\r\n                <CreateTipoAsientoModal data={create} tipo={'nuevo'} open={openModal} onClose={handlerClose} />\r\n            </Box>\r\n        </Card>\r\n    </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default TipoProceso\r\n","import { useState } from \"react\";\r\nimport { ObtenerTipoAsientoService } from \"Services/api-ventas-erp/tipoAsiento\";\r\nimport { searchByNombreTipoAsiento } from \"../utils/searchTipoAsiento\";\r\n\r\nexport const UseListTipoAsiento = () => {\r\n\r\n  const [filteredItem, setFilteredItem] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const filter = () => {\r\n    const result = searchByNombreTipoAsiento(filteredItem, searchValue);\r\n    setFilteredItem(result);\r\n  }\r\n  const listar = async () => {\r\n    const { data } = await ObtenerTipoAsientoService();\r\n    console.log(data.data)\r\n    setFilteredItem(data.data)\r\n  }\r\n  return {\r\n    filteredItem,\r\n    setFilteredItem,\r\n    searchValue,\r\n    setSearchValue,\r\n    filter,\r\n    listar\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const UseCrearTipoAsiento = () => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [create, setCreate] = useState({\r\n        id: 0,\r\n        nombreTipoAsiento:''\r\n    })\r\n\r\n    const ApiCrearProceso = async () => {\r\n        //const { data } = await CrearProcesoService();\r\n        //console.log(data.data)\r\n    }\r\n    const handlerOpen = (e) => {\r\n        setOpenModal(true);\r\n        ApiCrearProceso()\r\n    }\r\n    const handlerClose = (e) => {\r\n        setOpenModal(false);\r\n    }\r\n    return {\r\n        create,\r\n        setCreate,\r\n        openModal,\r\n        handlerOpen,\r\n        handlerClose\r\n    }\r\n}"],"sourceRoot":""}