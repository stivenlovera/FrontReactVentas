{"version":3,"sources":["components/input-fields/AppTextField.jsx","icons/Delete.jsx","pages/orden-compra/create-orden/create-orden.jsx"],"names":["StyledTextField","styled","TextField","theme","fontWeight","color","palette","text","primary","borderRadius","borderColor","action","disabled","hover","AppTextField","props","Delete","viewBox","d","BodyTableCell","TableCell","fontSize","textAlign","HeadTableCell","borderBottom","grey","CreateOrden","useState","id","name","qty","price","items","setItems","getSubTotal","reduce","prev","curr","handleUpdateItem","e","fieldName","target","getAttribute","map","item","value","pt","pb","container","spacing","md","xs","sx","padding","my","sm","label","placeholder","multiline","rows","autoHide","minWidth","onChange","fullWidth","size","type","onClick","filter","lg","Date","now","py","mb","select","SelectProps","native","IconComponent","KeyboardArrowDown","mt","defaultChecked","direction","variant","startIcon"],"mappings":"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","file":"static/js/22.05277356.chunk.js","sourcesContent":["import { styled, TextField } from \"@mui/material\";\nimport React from \"react\";\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  \"& .MuiOutlinedInput-input\": {\n    fontWeight: 500,\n    color: theme.palette.text.primary\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: theme.palette.action.disabled\n  },\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n    borderColor: theme.palette.action.hover\n  },\n  \"& .MuiInputLabel-root\": {\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiInputLabel-root.Mui-focused\": {\n    fontWeight: 600\n  },\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AppTextField = props => {\n  return <StyledTextField {...props} />;\n};\n\nexport default AppTextField;","import { SvgIcon } from \"@mui/material\";\n\nconst Delete = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M20,4.5v1a.5.5,0,0,1-.5.5H4.5A.5.5,0,0,1,4,5.5v-1A.5.5,0,0,1,4.5,4H9V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V4h4.5A.5.5,0,0,1,20,4.5ZM5.87,20.14a2,2,0,0,0,2,1.86h8.28a2,2,0,0,0,2-1.86L19,8H5Z\" />\n    </SvgIcon>;\n};\n\nexport default Delete;","import { KeyboardArrowDown, Send } from \"@mui/icons-material\";\r\nimport { Button, Card, Divider, Grid, Stack, styled, Switch } from \"@mui/material\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Box } from \"@mui/system\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H5, Span } from \"components/Typography\";\r\nimport Delete from \"icons/Delete\";\r\nimport React, { useState } from \"react\"; // styled components\r\n\r\nconst BodyTableCell = styled(TableCell)(() => ({\r\n  fontSize: 12,\r\n  fontWeight: 600,\r\n  \"&:last-of-type\": {\r\n    textAlign: \"right\"\r\n  }\r\n}));\r\nconst HeadTableCell = styled(BodyTableCell)(({\r\n  theme\r\n}) => ({\r\n  borderBottom: `1px solid ${theme.palette.grey[300]}`\r\n}));\r\n\r\nconst CreateOrden = () => {\r\n  const [items, setItems] = useState([{\r\n    id: 1,\r\n    name: \"Name 1\",\r\n    qty: 2,\r\n    price: 25\r\n  }, {\r\n    id: 2,\r\n    name: \"Name 2\",\r\n    qty: 2,\r\n    price: 25\r\n  }]);\r\n\r\n  const handleAddItem = () => {\r\n    setItems([...items, {\r\n      id: Date.now(),\r\n      name: \"Name 3\",\r\n      qty: 1,\r\n      price: 20\r\n    }]);\r\n  };\r\n\r\n  const getSubTotal = () => items.reduce((prev, curr) => prev += curr.price * curr.qty, 0);\r\n\r\n  const handleDeleteItem = id => {\r\n    setItems(items => items.filter(item => item.id !== id));\r\n  };\r\n\r\n  const handleUpdateItem = (e, id) => {\r\n    const fieldName = e.target.getAttribute(\"name\");\r\n    setItems(items => items.map(item => {\r\n      if (item.id === id) {\r\n        item[fieldName] = e.target.value;\r\n      }\r\n\r\n      return item;\r\n    }));\r\n  };\r\n\r\n  return <Box pt={2} pb={4}>\r\n      <Grid container spacing={3}>\r\n        <Grid item md={8} xs={12}>\r\n          <Card sx={{\r\n          padding: 2\r\n        }}>\r\n            <H2>\r\n              Invoice #{\" \"}\r\n              <Span fontSize={14} color=\"text.disabled\">\r\n                12345678\r\n              </Span>\r\n            </H2>\r\n\r\n            <Divider sx={{\r\n            my: 1\r\n          }} />\r\n\r\n            <Grid container spacing={3}>\r\n              <Grid item sm={6} xs={12}>\r\n                <H5 my={2}>Bill From:</H5>\r\n\r\n                <Stack spacing={3}>\r\n                  <AppTextField label=\"Name\" />\r\n                  <AppTextField label=\"Email\" placeholder=\"Email\" />\r\n                  <AppTextField multiline rows={3} label=\"Who is this invoice from?\" placeholder=\"Who is this invoice from?\" />\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item sm={6} xs={12}>\r\n                <H5 my={2}>Bill To:</H5>\r\n\r\n                <Stack spacing={3}>\r\n                  <AppTextField label=\"Name\" placeholder=\"Name\" />\r\n                  <AppTextField label=\"Email\" placeholder=\"Email\" />\r\n                  <AppTextField multiline rows={3} label=\"What is this invoice for?\" placeholder=\"What is this invoice for?\" />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box my={3}>\r\n              <Scrollbar autoHide={false}>\r\n                <Table sx={{\r\n                minWidth: 700\r\n              }}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <HeadTableCell>Item</HeadTableCell>\r\n                      <HeadTableCell>Qty</HeadTableCell>\r\n                      <HeadTableCell>Price</HeadTableCell>\r\n                      <HeadTableCell>Total</HeadTableCell>\r\n                      <HeadTableCell>Action</HeadTableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {items.map(item => <TableRow key={item.id}>\r\n                        <BodyTableCell>\r\n                          <AppTextField onChange={e => handleUpdateItem(e, item.id)} fullWidth size=\"small\" name=\"name\" label=\"Name\" value={item.name} />\r\n                        </BodyTableCell>\r\n\r\n                        <BodyTableCell>\r\n                          <AppTextField onChange={e => handleUpdateItem(e, item.id)} name=\"qty\" type=\"number\" size=\"small\" label=\"Qty\" value={item.qty} />\r\n                        </BodyTableCell>\r\n\r\n                        <BodyTableCell>\r\n                          <AppTextField onChange={e => handleUpdateItem(e, item.id)} name=\"price\" type=\"number\" size=\"small\" label=\"Price\" value={item.price} />\r\n                        </BodyTableCell>\r\n\r\n                        <BodyTableCell>\r\n                          ${item.qty * item.price}.00\r\n                        </BodyTableCell>\r\n\r\n                        <BodyTableCell>\r\n                          <IconButton onClick={() => handleDeleteItem(item.id)}>\r\n                            <Delete sx={{\r\n                          color: \"text.disabled\"\r\n                        }} />\r\n                          </IconButton>\r\n                        </BodyTableCell>\r\n                      </TableRow>)}\r\n                  </TableBody>\r\n                </Table>\r\n              </Scrollbar>\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            <Box my={2}>\r\n              <Grid container spacing={3}>\r\n                <Grid item lg={8} md={7} xs={12}>\r\n                  <ButtonBase onClick={handleAddItem} sx={{\r\n                  color: \"primary.main\",\r\n                  fontWeight: 600\r\n                }}>\r\n                    Add Item\r\n                  </ButtonBase>\r\n                </Grid>\r\n                <Grid item lg={4} md={5} xs={12}>\r\n                  <Stack spacing={2}>\r\n                    <FlexBetween>\r\n                      <H5>Subtotal</H5>\r\n                      <H5>$ {getSubTotal()}</H5>\r\n                    </FlexBetween>\r\n\r\n                    <FlexBetween>\r\n                      <H5>VAT</H5>\r\n                      <H5>$ 0.00</H5>\r\n                    </FlexBetween>\r\n\r\n                    <FlexBetween>\r\n                      <H5>Discount</H5>\r\n                      <H5>$ 0.00</H5>\r\n                    </FlexBetween>\r\n\r\n                    <Divider />\r\n\r\n                    <FlexBetween>\r\n                      <H5>Total</H5>\r\n                      <H5>$ {getSubTotal()}</H5>\r\n                    </FlexBetween>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            <Box py={2}>\r\n              <H5 mb={2}>Notes</H5>\r\n              <AppTextField multiline fullWidth rows={2} placeholder=\"Thanks\" />\r\n            </Box>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item md={4} xs={12}>\r\n          <Card sx={{\r\n          padding: 2\r\n        }}>\r\n            <H5 mb={2}>Currency</H5>\r\n            <AppTextField fullWidth select SelectProps={{\r\n            native: true,\r\n            IconComponent: KeyboardArrowDown\r\n          }}>\r\n              <option value=\"usd\">USD</option>\r\n              <option value=\"euro\">Euro</option>\r\n              <option value=\"taka\">Taka</option>\r\n            </AppTextField>\r\n\r\n            <Divider sx={{\r\n            mt: 3,\r\n            mb: 1\r\n          }} />\r\n\r\n            <Stack spacing={1}>\r\n              <FlexBetween>\r\n                <H5>Payment Method</H5>\r\n                <Switch defaultChecked />\r\n              </FlexBetween>\r\n\r\n              <FlexBetween>\r\n                <H5>Late Fees</H5>\r\n                <Switch />\r\n              </FlexBetween>\r\n\r\n              <FlexBetween>\r\n                <H5>Notes</H5>\r\n                <Switch />\r\n              </FlexBetween>\r\n            </Stack>\r\n\r\n            <Divider sx={{\r\n            my: 1\r\n          }} />\r\n\r\n            <Stack direction=\"row\" spacing={2} py={2}>\r\n              <Button variant=\"outlined\" fullWidth>\r\n                Preview\r\n              </Button>\r\n              <Button variant=\"outlined\" fullWidth>\r\n                Download\r\n              </Button>\r\n            </Stack>\r\n\r\n            <Button fullWidth variant=\"contained\" startIcon={<Send sx={{\r\n            fontSize: \"15px !important\"\r\n          }} />}>\r\n              Send Invoice\r\n            </Button>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>;\r\n};\r\n\r\nexport default CreateOrden;"],"sourceRoot":""}