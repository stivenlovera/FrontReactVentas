{"version":3,"sources":["Services/api-ventas-erp/proveedorService.js","utils/convertoToBase64.js","pages/productos/productos-list/components/create-producto.jsx","pages/productos/productos-list/components/productos-columns.jsx","pages/productos/productos-list/components/productosFake.js","pages/productos/productos-list/productos-list.jsx","pages/productos/productos-list/components/utils-productos.js","components/input-fields/AppTextField.jsx","components/flexbox/FlexRowAlign.jsx","components/input-fields/SearchInput.jsx","components/AppModal.jsx","page-sections/data-table/dataTableV2/styledComponents.js","page-sections/admin-ecommerce/CustomTable.jsx","components/IconWrapper.jsx","icons/ShoppingBasket.jsx","icons/Delete.jsx","contexts/ContextDataTable.js","icons/DeleteIcon.jsx","icons/Add.jsx","Services/api-ventas-erp/clasificacionService.js"],"names":["CrearProductoService","axios","get","process","ObtenerProductoService","GuardarProductoService","values","post","EditarProductoService","id","readUploadedFileAsText","event","inputFile","target","files","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","StyledAppModal","styled","AppModal","theme","maxWidth","minWidth","outline","padding","ImageDeleteWrapper","FlexRowAlign","top","right","width","height","borderRadius","position","backgroundColor","palette","error","main","ImageUploadWrapper","minHeight","cursor","grey","CreateProductoModal","open","data","onClose","editProduct","tipo","useContext","Context","setContext","downXl","useMediaQuery","breakpoints","down","useState","initialState","codigoProducto","codigoBarra","nombreProducto","unidadMedida","cantidad","stockActual","stockMinimo","precioCompra","utilidadMin","PrecioVentaMin","utilidadMax","PrecioVentaMax","lote","fechaVencimiento","proveedorId","proveedor","categoriaId","grupoId","marcaId","modeloId","categoria","grupo","marca","modelo","imagenes","validationSchema","Yup","shape","nullable","min","required","useFormik","initialValues","onSubmit","setValues","console","log","ApiInsertProducto","errors","handleChange","handleSubmit","touched","setFieldValue","resetForm","optionProveedor","setOptionProveedor","optionCategoria","setOptionCategoria","optionGrupo","setOptionGrupo","optionMarca","optionModelo","setImagen","onImagenChange","e","imagen","ApiCrearProducto","proveedores","codigo","categorias","ApiEditarProducto","producto","ApiClasificacionPorId","clasificacionId","obtenerClasificacionIdService","useLayoutEffect","handleClose","marginBottom","style","maxHeight","Grid","container","spacing","item","sm","xs","mb","AppTextField","fullWidth","size","name","placeholder","value","onChange","Boolean","helperText","productName","type","onKeyUp","resultado","parseInt","calcularPrecioVentaMin","calcularUtilidadMin","calcularPrecioVentaMax","calcularUtilidadMax","DatePicker","newDate","inputFormat","renderInput","params","sx","Autocomplete","disablePortal","options","getOptionLabel","nombreProveedor","newValue","TextField","label","nombreClasificacion","pb","Box","border","borderColor","map","i","overflow","src","alt","IconButton","onClick","nuevo","forEach","element","index","push","onImagenRemove","DeleteIcon","fontSize","color","htmlFor","accept","display","textAlign","fontWeight","FlexBox","justifyContent","gap","marginTop","Button","variant","ProductosColumns","Header","accessor","Cell","row","transition","isSelected","setTipo","openModal","setOpenModal","Edit","alert","Delete","original","productosFake","acciones","HeadingWrapper","format","Date","flexWrap","ProductosList","t","useTranslation","actualizarTable","setActualizarTableContext","searchValue","setSearchValue","filteredItem","setFilteredItem","ApiObtenerTodo","useEffect","listData","length","filter","toLocaleLowerCase","match","toLowerCase","searchByNombre","Provider","pt","alignItems","IconWrapper","ShoppingBasket","SearchInput","bordered","endIcon","Add","CustomTable","columnShape","StyledTextField","text","primary","action","disabled","hover","props","children","StyledInputBase","InputBase","background","paper","icon_style","startAdornment","marginRight","Wrapper","left","transform","lightTheme","default","StyledPagination","TableRow","selected_row","alpha","light","content","Pagination","margin","SearchIcon","marginLeft","rowClick","showFooter","hidePagination","tableData","useMemo","columns","useTable","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","Table","borderSpacing","borderCollapse","TableHead","headerGroup","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","paddingY","borderBottom","render","TableBody","getRowProps","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","cells","cell","getCellProps","paddingLeft","paddingRight","Stack","marginY","count","_e","currentPageNo","FlexBetween","ButtonBase","disableRipple","ArrowRightAlt","viewBox","d","React","createContext","fill","CrearClasificacionService","ObtenerClasificacionService","GuardarClasificacionService","EditarClasificacionService","ModificarClasificacionService","put"],"mappings":"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","file":"static/js/10.2add26ed.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport async function CrearProductoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto/create`)\r\n}\r\nexport async function ObtenerProductoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto`)\r\n}\r\nexport async function GuardarProductoService(values) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/producto`, values);\r\n}\r\nexport async function EditarProductoService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto/editar/${id}`);\r\n}\r\nexport async function ModificarProductoService({\r\n    id,\r\n    ci,\r\n    codigoCliente,\r\n    nombreCliente,\r\n    correoElectronico,\r\n    telefono,\r\n    dirrecion,\r\n    lineaCredito,\r\n    planCuentaId,\r\n    monedaId\r\n}) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/producto/${id}`, {\r\n        id: id,\r\n        ci: ci,\r\n        codigoCliente: codigoCliente,\r\n        nombreCliente: nombreCliente,\r\n        correoElectronico: correoElectronico,\r\n        telefono: telefono,\r\n        dirrecion: dirrecion,\r\n        lineaCredito: lineaCredito,\r\n        planCuentaId: planCuentaId,\r\n        monedaId: monedaId\r\n    });\r\n}\r\nexport async function EliminarProductoService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/producto/${id}`, {});\r\n}","export const fileGetBase64 = async (event) => {\r\n    let me = this;\r\n    let file = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n        //me.modelvalue = reader.result;\r\n        console.log(reader.result);\r\n        me = reader.result\r\n    };\r\n    reader.onerror = function (error) {\r\n        console.log('Error: ', error);\r\n    };\r\n    return me\r\n}\r\nexport const readUploadedFileAsText = (event) => {\r\n    let inputFile = event.target.files[0];\r\n    const temporaryFileReader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        temporaryFileReader.onerror = () => {\r\n            temporaryFileReader.abort();\r\n            reject(new DOMException(\"Problem parsing input file.\"));\r\n        };\r\n\r\n        temporaryFileReader.onload = () => {\r\n            resolve(temporaryFileReader.result);\r\n        };\r\n        temporaryFileReader.readAsDataURL(inputFile);\r\n    });\r\n};","\r\nimport { Autocomplete, Box, Button, Grid, IconButton, styled, TextField, useMediaQuery } from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nimport { useFormik } from \"formik\";\r\nimport Add from \"icons/Add\";\r\nimport DeleteIcon from \"icons/DeleteIcon\";\r\nimport { useContext, useLayoutEffect, useState } from \"react\";\r\nimport { obtenerClasificacionIdService } from \"Services/api-ventas-erp/clasificacionService\";\r\nimport { CrearProductoService, EditarProductoService, GuardarProductoService } from \"Services/api-ventas-erp/proveedorService\";\r\nimport { fileGetBase64, readUploadedFileAsText } from \"utils/convertoToBase64\";\r\n\r\nimport * as Yup from \"yup\"; // component props interface\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 700,\r\n    minWidth: 300,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst CreateProductoModal = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editProduct,\r\n    tipo,\r\n    id\r\n}) => {\r\n    const [context, setContext] = useContext(Context);\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const [precioMin, setPrecioMin] = useState(0)\r\n    const initialState = {\r\n        id: 0,\r\n        codigoProducto: '',\r\n        codigoBarra: '',\r\n        nombreProducto: '',\r\n        unidadMedida: '',\r\n        cantidad: 0,\r\n        stockActual: 0,\r\n        stockMinimo: 0,\r\n        precioCompra: 0,\r\n        utilidadMin: 0,\r\n        PrecioVentaMin: 0,\r\n        utilidadMax: 0,\r\n        PrecioVentaMax: 0,\r\n        lote: '',\r\n        fechaVencimiento: '2023-01-01',\r\n        proveedorId: '',\r\n        proveedor: '',\r\n        categoriaId: '',\r\n        grupoId: '',\r\n        marcaId: '',\r\n        modeloId: '',\r\n        categoria: '',\r\n        grupo: '',\r\n        marca: '',\r\n        modelo: '',\r\n        imagenes: []\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        id: Yup.number().nullable(),\r\n        codigoProducto: Yup.string().min(3, \"Es muy corto\").required(\"Codigo es requerido!\"),\r\n        codigoBarra: Yup.string().min(3, \"Es muy corto\").required(\"Codigo barra es requerido!\"),\r\n        nombreProducto: Yup.string().min(3, \"Es muy corto\").required(\"Nombre es requerido!\"),\r\n        unidadMedida: Yup.string().required(\"Unidad medida es requerido!\"),\r\n        cantidad: Yup.number('debe ser un numero').required(\"Cantidad es requerido!\"),\r\n        stockActual: Yup.number('debe ser un numero').required(\"Stock inicial es requerido!\"),\r\n        stockMinimo: Yup.number('debe ser un numero').required(\"Stock final es requerido!\"),\r\n        precioCompra: Yup.number('debe ser un numero').required(\"Precio compra es requerido!\"),\r\n        utilidadMin: Yup.number('debe ser un numero').required(\"Utilidad max es requerido!\"),\r\n        PrecioVentaMin: Yup.number('debe ser un numero').required(\"Precio venta min es requerido!\"),\r\n        utilidadMax: Yup.number('debe ser un numero').required(\"Utilidad min es requerido!\"),\r\n        PrecioVentaMax: Yup.number('debe ser un numero').required(\"Precio venta max es requerido!\"),\r\n        lote: Yup.string().required(\"Lote  es requerido!\"),\r\n        fechaVencimiento: Yup.string().required(\"Fecha vencimiento es requerido!\"),\r\n        proveedorId: Yup.string().required(\"Proveedores es requerido!\"),\r\n        proveedor: Yup.string().nullable(),\r\n        categoriaId: Yup.number().required(\"Categoria es requerido!\"),\r\n        grupoId: Yup.number().required(\"Grupo es requerido!\"),\r\n        marcaId: Yup.number(),//.required(\"Marca es requerido!\"),\r\n        modeloId: Yup.number(),//.required(\"Modelo es requerido!\"),\r\n        categoria: Yup.string().nullable(),\r\n        grupo: Yup.string().nullable(),\r\n        marca: Yup.string().nullable(),\r\n        modelo: Yup.string().nullable(),\r\n        imagenes: Yup.array()\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        setFieldValue,\r\n        setValues,\r\n        resetForm\r\n    } = useFormik({\r\n        initialValues: initialState,\r\n        validationSchema,\r\n        onSubmit: values => {\r\n            setValues({ ...values, imagenes: imagenes })\r\n            console.log(values);\r\n            console.log(imagenes)\r\n            switch (tipo) {\r\n                case 'nuevo':\r\n                    ApiInsertProducto();\r\n                    break;\r\n                case 'editar':\r\n\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    const [optionProveedor, setOptionProveedor] = useState([]);\r\n    const [optionCategoria, setOptionCategoria] = useState([]);\r\n    const [optionGrupo, setOptionGrupo] = useState([])\r\n    const [optionMarca, setOptionMarca] = useState([])\r\n    const [optionModelo, setOptionModelo] = useState([])\r\n    const [imagenes, setImagen] = useState([]);\r\n\r\n    const onImagenChange = async (e) => {\r\n        console.log('data entrante ', e);\r\n        let imagen = await readUploadedFileAsText(e);\r\n        console.log(imagen)\r\n        setValues({ ...values, imagenes: imagenes })\r\n        setImagen([...imagenes, imagen]);\r\n\r\n    }\r\n    const onImagenRemove = (i) => {\r\n        var nuevo = []\r\n        imagenes.forEach((element, index) => {\r\n            if (index != i) {\r\n                nuevo.push(element)\r\n            }\r\n        });\r\n        setValues({ ...values, imagenes: nuevo })\r\n        setFieldValue('imagenes', nuevo)\r\n\r\n    }\r\n    const calcularPrecioVentaMin = () => {\r\n        let resultado = parseInt(values.precioCompra) + (((values.utilidadMin) / 100) * values.precioCompra);\r\n        setFieldValue('PrecioVentaMin', resultado);\r\n    }\r\n    const calcularPrecioVentaMax = () => {\r\n        let resultado = parseInt(values.precioCompra) + (((values.utilidadMax) / 100) * values.precioCompra);\r\n        setFieldValue('PrecioVentaMax', resultado);\r\n    }\r\n    const calcularUtilidadMin = () => {\r\n        let resultado = parseInt(((values.PrecioVentaMin * 100) / values.precioCompra) - (100));\r\n        setFieldValue('utilidadMin', resultado);\r\n    }\r\n    const calcularUtilidadMax = () => {\r\n        let resultado = parseInt(((values.PrecioVentaMax * 100) / values.precioCompra) - (100));\r\n        setFieldValue('utilidadMax', resultado);\r\n    }\r\n    const ApiCrearProducto = async () => {\r\n        const { data } = await CrearProductoService();\r\n        console.log(data.data)\r\n        setOptionProveedor(data.data.proveedores)\r\n        setValues({ ...initialState, codigoProducto: data.data.codigo })\r\n        setOptionCategoria(data.data.categorias);\r\n    }\r\n    const ApiEditarProducto = async () => {\r\n        const { data } = await EditarProductoService(id);\r\n        setOptionProveedor(data.data.proveedores)\r\n        setOptionCategoria(data.data.categorias)\r\n        console.log(data.data.proveedores)\r\n        console.log(data.data.categorias)\r\n        setImagen(data.data.imagenes);\r\n        setValues({ ...data.data.producto });\r\n    }\r\n    const ApiModificarProducto = async () => {\r\n        const { data } = await EditarProductoService(id);\r\n        setValues({ ...data.data.clasificacion })\r\n    }\r\n    const ApiInsertProducto = async () => {\r\n        const { data } = await GuardarProductoService(values);\r\n        console.log(data.data)\r\n        resetForm();\r\n        onClose();\r\n        setContext(true)\r\n    }\r\n\r\n    const ApiClasificacionPorId = async (clasificacionId) => {\r\n        const { data } = await obtenerClasificacionIdService(clasificacionId);\r\n        setOptionGrupo(data.data);\r\n    }\r\n    useLayoutEffect(() => {\r\n        console.log(tipo)\r\n        switch (tipo) {\r\n            case 'nuevo':\r\n                ApiCrearProducto();\r\n                break;\r\n            case 'editar':\r\n                ApiEditarProducto();\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        return () => {\r\n\r\n        };\r\n    }, [open])\r\n\r\n    return <StyledAppModal open={open} handleClose={onClose}>\r\n        <H2 marginBottom={2}>\r\n            {editProduct && data ? \"Editar producto\" : \"Añadir producto\"}\r\n        </H2>\r\n\r\n        <form onSubmit={(e) => { console.log(errors); handleSubmit(e) }}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoProducto\"\r\n                            placeholder=\"Codigo producto\"\r\n                            value={values.codigoProducto}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoProducto && errors.codigoProducto)}\r\n                            helperText={touched.codigoProducto && errors.codigoProducto}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo de Barras</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoBarra\"\r\n                            placeholder=\"Codigo de barras\"\r\n                            value={values.codigoBarra}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoBarra && errors.codigoBarra)}\r\n                            helperText={touched.codigoBarra && errors.codigoBarra}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Nombre</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreProducto\"\r\n                            placeholder=\"Nombre\"\r\n                            value={values.productName}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreProducto && errors.nombreProducto)}\r\n                            helperText={touched.nombreProducto && errors.nombreProducto}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Cantidad</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"cantidad\"\r\n                            type=\"number\"\r\n                            placeholder=\"cantidad\"\r\n                            value={values.cantidad}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.cantidad && errors.cantidad)}\r\n                            helperText={touched.cantidad && errors.cantidad}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Stock actual</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"stockActual\"\r\n                            type=\"number\"\r\n                            placeholder=\"Stock actual\"\r\n                            value={values.stockActual} onChange={handleChange}\r\n                            error={Boolean(touched.stockActual && errors.stockActual)}\r\n                            helperText={touched.stockActual && errors.stockActual}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Stock minimo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"stockMinimo\"\r\n                            type=\"number\"\r\n                            placeholder=\"Stock minimo\"\r\n                            value={values.stockMinimo}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.stockMinimo && errors.stockMinimo)}\r\n                            helperText={touched.stockMinimo && errors.stockMinimo}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio compra</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"precioCompra\"\r\n                            type=\"number\"\r\n                            placeholder=\"precio compra\"\r\n                            value={values.precioCompra}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    //calcularUtilidadMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.precioCompra && errors.precioCompra)}\r\n                            helperText={touched.precioCompra && errors.precioCompra}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>% Utilidad min</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"utilidadMin\"\r\n                            type=\"number\"\r\n                            placeholder=\"% Utilidad mi\"\r\n                            value={values.utilidadMin}\r\n                            onChange={(e) => {\r\n                                handleChange(e)\r\n                            }}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularPrecioVentaMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.utilidadMin && errors.utilidadMin)}\r\n                            helperText={touched.utilidadMin && errors.utilidadMin}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio venta min</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"PrecioVentaMin\"\r\n                            type=\"number\"\r\n                            placeholder=\"Precio venta min\"\r\n                            value={values.PrecioVentaMin}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularUtilidadMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.PrecioVentaMin && errors.PrecioVentaMin)}\r\n                            helperText={touched.PrecioVentaMin && errors.PrecioVentaMin}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>% Utilidad max</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"utilidadMax\"\r\n                            type=\"number\"\r\n                            placeholder=\"% Utilidad max\"\r\n                            value={values.utilidadMax}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularPrecioVentaMax()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.utilidadMax && errors.utilidadMax)}\r\n                            helperText={touched.utilidadMax && errors.utilidadMax}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio venta max</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"PrecioVentaMax\"\r\n                            type=\"number\"\r\n                            placeholder=\"Categoria\"\r\n                            value={values.PrecioVentaMax}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularUtilidadMax()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.PrecioVentaMax && errors.PrecioVentaMax)}\r\n                            helperText={touched.PrecioVentaMax && errors.PrecioVentaMax}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Lote</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"lote\"\r\n                            placeholder=\"Lote\"\r\n                            value={values.lote}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.lote && errors.lote)}\r\n                            helperText={touched.lote && errors.lote}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Fecha vencimiento</H6>\r\n                        <DatePicker\r\n                            value={values.fechaVencimiento}\r\n                            onChange={newDate => setFieldValue(\"fechaVencimiento\", newDate)}\r\n                            inputFormat=\"yyyy-MM-dd\"\r\n                            renderInput={\r\n                                params => <AppTextField\r\n                                    fullWidth\r\n                                    size=\"small\" {...params}\r\n                                    name=\"date\"\r\n                                    error={Boolean(touched.fechaVencimiento && errors.fechaVencimiento)}\r\n                                    helperText={touched.fechaVencimiento && errors.fechaVencimiento}\r\n                                    sx={{\r\n                                        mb: 1\r\n                                    }} />} />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Unidad Medida</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"unidadMedida\"\r\n                            placeholder=\"Unidad Medida\"\r\n                            value={values.unidadMedida}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.unidadMedida && errors.unidadMedida)}\r\n                            helperText={touched.unidadMedida && errors.unidadMedida}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Proveedor</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-proveedor\"\r\n                            options={optionProveedor}\r\n                            getOptionLabel={(options) => options.nombreProveedor}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('proveedorId', newValue.id)\r\n                                } else {\r\n                                    setFieldValue('proveedorId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.proveedorId}\r\n                                        label=\"Proveedores\"\r\n                                        error={Boolean(touched.proveedorId && errors.proveedorId)}\r\n                                        helperText={touched.proveedorId && errors.proveedorId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Categoria</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={optionCategoria}\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('categoriaId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('categoriaId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.categoria}\r\n                                        label=\"Grupo\"\r\n                                        error={Boolean(touched.categoriaId && errors.categoriaId)}\r\n                                        helperText={touched.categoriaId && errors.categoriaId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Grupo</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={optionGrupo}\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('grupoId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('grupoId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.grupoId}\r\n                                        label=\"Grupo\"\r\n                                        error={Boolean(touched.grupoId && errors.grupoId)}\r\n                                        helperText={touched.grupoId && errors.grupoId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Marca</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            options={optionMarca}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('marcaId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('marcaId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.marcaId}\r\n                                        label=\"Marca\"\r\n                                        error={Boolean(touched.marcaId && errors.marcaId)}\r\n                                        helperText={touched.marcaId && errors.marcaId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Modelo</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            options={optionModelo}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('modeloId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('modeloId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.modeloId}\r\n                                        label=\"Modelo\"\r\n                                        error={Boolean(touched.modeloId && errors.modeloId)}\r\n                                        helperText={touched.modeloId && errors.modeloId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                    <H6 pb={1}>Imagenes de producto</H6>\r\n                    <Box sx={{\r\n                        padding: 1,\r\n                        borderRadius: \"8px\",\r\n                        border: \"1px dashed\",\r\n                        borderColor: \"text.disabled\",\r\n                        backgroundColor: \"grey.100\"\r\n                    }}>\r\n                        <Grid container spacing={1}>\r\n                            {imagenes.map((item, i) =>\r\n                                <Grid item sm={3} xs={4} key={i}>\r\n                                    <Box sx={{\r\n                                        minHeight: 140,\r\n                                        borderRadius: \"8px\",\r\n                                        overflow: \"hidden\",\r\n                                        position: \"relative\"\r\n                                    }}>\r\n                                        <img src={item} width=\"100%\" height=\"100%\" alt={item} />\r\n                                        <ImageDeleteWrapper>\r\n                                            <IconButton\r\n                                                onClick={() => { onImagenRemove(i) }}\r\n                                            >\r\n                                                <DeleteIcon\r\n                                                    sx={{\r\n                                                        fontSize: 12,\r\n                                                        color: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </ImageDeleteWrapper>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item sm={3} xs={4}>\r\n                                <label htmlFor=\"image-upload\">\r\n                                    <input type=\"file\" accept=\"image/*\" id=\"image-upload\"\r\n                                        style={{\r\n                                            display: \"none\"\r\n                                        }}\r\n                                        onChange={onImagenChange}\r\n                                    />\r\n                                    <ImageUploadWrapper textAlign=\"center\">\r\n                                        <Box>\r\n                                            <Add color=\"disabled\" />\r\n                                            <Small fontWeight={600} display=\"block\">\r\n                                                Choose a file\r\n                                            </Small>\r\n                                            <Small fontWeight={600} color=\"text.disabled\">\r\n                                                or drag it here\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </ImageUploadWrapper>\r\n                                </label>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Scrollbar>\r\n\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button fullWidth variant=\"outlined\" onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button fullWidth type=\"submit\" variant=\"contained\">\r\n                            Save\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal>;\r\n};\r\n\r\nexport default CreateProductoModal;","import { Edit } from \"@mui/icons-material\";\r\nimport { Box, IconButton, Rating } from \"@mui/material\";\r\nimport { Fragment, useState } from \"react\";\r\nimport CreateProductoModal from \"./create-producto\";\r\nimport Delete from \"icons/Delete\";\r\nconst ProductosColumns = [\r\n    {\r\n        Header: \"Cod barras\",\r\n        accessor: \"codigoBarra\"\r\n    },\r\n    {\r\n        Header: \"Nombre\",\r\n        accessor: \"nombreProducto\"\r\n    },\r\n    {\r\n        Header: \"Cantidad\",\r\n        accessor: \"cantidad\"\r\n    },\r\n    {\r\n        Header: \"Stock actual\",\r\n        accessor: \"stockActual\"\r\n    },\r\n    {\r\n        Header: \"Lote\",\r\n        accessor: \"lote\"\r\n    },\r\n    {\r\n        Header: \"Unidad Medida\",\r\n        accessor: \"unidadMedida\"\r\n    },\r\n    {\r\n        Header: \"Precio venta min\",\r\n        accessor: \"precioVentaMin\"\r\n    },\r\n    {\r\n        Header: \"Precio venta max\",\r\n        accessor: \"precioVentaMax\"\r\n    },\r\n    {\r\n        Header: \"Fecha vencimiento\",\r\n        accessor: \"fechaVencimiento\"\r\n    },\r\n    {\r\n        Header: \"Acciones\",\r\n        accessor: \"acciones\",\r\n        Cell: ({\r\n            row\r\n        }) => {\r\n            const style = {\r\n                fontSize: 19,\r\n                transition: \"color 0.3s\",\r\n                color: row.isSelected ? \"white\" : \"text.disabled\"\r\n            };\r\n            const [tipo, setTipo] = useState('');\r\n            const [openModal, setOpenModal] = useState(false);\r\n            return <Fragment>\r\n                <IconButton\r\n                    onClick={() => {\r\n                        setOpenModal(true)\r\n                        setTipo('editar')\r\n                    }}\r\n                >\r\n                    <Edit\r\n                        sx={{\r\n                            fontSize: 18,\r\n                            color: \"text.disabled\"\r\n                        }}\r\n                    />\r\n                </IconButton>\r\n                <IconButton onClick={() => { alert('funcion pendiente') }}>\r\n                    <Delete sx={style} />\r\n                </IconButton>\r\n                <CreateProductoModal\r\n                    editProduct\r\n                    open={openModal}\r\n                    data={row.original}\r\n                    id={row.original.id}\r\n                    onClose={\r\n                        () => {\r\n                            setOpenModal(false);\r\n                            setTipo('')\r\n                        }}\r\n                    tipo={tipo}\r\n                />\r\n            </Fragment>;\r\n        }\r\n    }];\r\nexport default ProductosColumns;","import { format } from \"date-fns\";\r\nexport const productosFake = [{\r\n  id:'1',\r\n  nombreClasificacion: \"categoria 1 \",\r\n  acciones: \"\",\r\n}];\r\n\r\n\r\n\r\nexport const ordersFakeData = [{\r\n  orderNo: \"UY3769\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  orderNo: \"UY3770\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Paid\"\r\n}, {\r\n  orderNo: \"UY3761\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  orderNo: \"UY3762\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Paid\"\r\n}];\r\nexport const customersFakeData = [{\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  position: \"UI Designer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/001-man.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Austin, USA\",\r\n  status: \"Active\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  position: \"Editor\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/002-girl.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Austin, USA\",\r\n  status: \"Blocked\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Lily Collins\",\r\n  position: \"UI Designer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/003-boy.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Corner View, Sylhet\",\r\n  status: \"Active\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/004-woman.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Corner View, Sylhet\",\r\n  status: \"Blocked\"\r\n}];","import { Add } from \"@mui/icons-material\";\r\nimport { Box, Button, styled } from \"@mui/material\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport IconWrapper from \"components/IconWrapper\";\r\nimport SearchInput from \"components/input-fields/SearchInput\";\r\nimport { H5 } from \"components/Typography\";\r\nimport ShoppingBasket from \"icons/ShoppingBasket\";\r\nimport CustomTable from \"page-sections/admin-ecommerce/CustomTable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CreateProductoModal from \"./components/create-producto\";\r\nimport ProductosColumns from \"./components/productos-columns\";\r\nimport { productosFake } from \"./components/productosFake\";\r\nimport { searchByNombre } from \"./components/utils-productos\";\r\nimport { ObtenerProductoService } from \"Services/api-ventas-erp/proveedorService\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nexport const HeadingWrapper = styled(FlexBox)(({\r\n    theme\r\n}) => ({\r\n    marginBottom: 20,\r\n    flexWrap: \"wrap\",\r\n    [theme.breakpoints.down(530)]: {\r\n        \"& .MuiButton-root\": {\r\n            width: \"100%\"\r\n        },\r\n        \"& .MuiInputBase-root\": {\r\n            maxWidth: \"100%\",\r\n            marginBottom: 15\r\n        }\r\n    }\r\n}));\r\n\r\nconst ProductosList = () => {\r\n    const {\r\n        t\r\n    } = useTranslation();\r\n    const [openModal, setOpenModal] = useState(false); // search input\r\n    const [actualizarTable, setActualizarTableContext] = useState(false);\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [filteredItem, setFilteredItem] = useState(productosFake);\r\n\r\n    const ApiObtenerTodo = async () => {\r\n        const { data } = await ObtenerProductoService();\r\n        setFilteredItem(data.data);\r\n    }\r\n    useEffect(() => {\r\n        ApiObtenerTodo()\r\n        const result = searchByNombre(productosFake, searchValue);\r\n        setFilteredItem(result);\r\n        setActualizarTableContext(false);\r\n    }, [searchValue, actualizarTable]);\r\n    return (\r\n        <Context.Provider value={[actualizarTable, setActualizarTableContext]}>\r\n            <Box pt={2} pb={4}>\r\n                <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <FlexBox gap={0.5} alignItems=\"center\">\r\n                        <IconWrapper>\r\n                            <ShoppingBasket sx={{\r\n                                color: \"primary.main\"\r\n                            }} />\r\n                        </IconWrapper>\r\n                        <H5>Productos</H5>\r\n                    </FlexBox>\r\n                    <SearchInput bordered={'true'} placeholder=\"Buscar productos\" onChange={e => setSearchValue(e.target.value)} />\r\n                    <Button variant=\"contained\" endIcon={<Add />} onClick={() => setOpenModal(true)}>\r\n                        {t(\"Añadir Producto\")}\r\n                    </Button>\r\n                </HeadingWrapper>\r\n                <CustomTable columnShape={ProductosColumns} data={filteredItem} />\r\n                <CreateProductoModal open={openModal} onClose={() => setOpenModal(false)} tipo={'nuevo'} />\r\n            </Box>\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport default ProductosList;","export const searchByNombre = (listData, searchValue) => {\r\n    if (searchValue.length > 0) {\r\n      const searchResult = listData.filter(item => item.nombreClasificacion.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n      return searchResult;\r\n    } else {\r\n      return listData;\r\n    }\r\n  };\r\n  export const getRoute = pathname => {\r\n    const str = pathname.split(\"/\");\r\n    return `/${str[1]}`;\r\n  };","import { styled, TextField } from \"@mui/material\";\nimport React from \"react\";\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  \"& .MuiOutlinedInput-input\": {\n    fontWeight: 500,\n    color: theme.palette.text.primary\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: theme.palette.action.disabled\n  },\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n    borderColor: theme.palette.action.hover\n  },\n  \"& .MuiInputLabel-root\": {\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiInputLabel-root.Mui-focused\": {\n    fontWeight: 600\n  },\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AppTextField = props => {\n  return <StyledTextField {...props} />;\n};\n\nexport default AppTextField;","import { Box } from \"@mui/material\";\n\nconst FlexRowAlign = ({\n  children,\n  ...props\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\n    {children}\n  </Box>;\n\nexport default FlexRowAlign;","import { InputBase, styled } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\n// styled component\nconst StyledInputBase = styled(InputBase)(({\n  theme,\n  bordered\n}) => ({\n  height: 45,\n  fontSize: 12,\n  width: \"100%\",\n  maxWidth: 350,\n  fontWeight: 600,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  border: bordered ? `1px solid ${theme.palette.action.disabled}` : \"none\",\n  [theme.breakpoints.down(500)]: {\n    maxWidth: \"100%\"\n  },\n  \"::placeholder\": {\n    color: theme.palette.text.disabled\n  }\n})); // ------------------------------------------------------------\n\n// ------------------------------------------------------------\nconst SearchInput = props => {\n  const {\n    icon_style = {},\n    bordered = true\n  } = props;\n  return <StyledInputBase bordered={bordered} startAdornment={<SearchIcon sx={{\n    fontSize: 18,\n    marginRight: 1,\n    color: \"text.disabled\",\n    ...icon_style\n  }} />} {...props} />;\n};\n\nexport default SearchInput;","import { Box, Modal, styled } from \"@mui/material\";\nimport { lightTheme } from \"../constants\"; // ---------------------------------------------------------\n\n// ---------------------------------------------------------\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  padding: 24,\n  maxWidth: 680,\n  width: \"100%\",\n  borderRadius: \"4px\",\n  position: \"absolute\",\n  transform: \"translate(-50%, -50%)\",\n  backgroundColor: lightTheme(theme) ? \"#fff\" : theme.palette.background.default\n}));\n\nconst AppModal = ({\n  children,\n  open,\n  handleClose,\n  ...props\n}) => {\n  return <Modal open={open} onClose={handleClose}>\n      <Wrapper {...props}>{children}</Wrapper>\n    </Modal>;\n};\n\nexport default AppModal;","import { alpha, InputBase, Pagination, styled, TableRow } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\nexport const StyledTableBodyRow = styled(TableRow)(({\n  theme,\n  selected_row\n}) => selected_row === \"select\" ? {\n  backgroundColor: alpha(theme.palette.primary.light, 0.5),\n  position: \"relative\",\n  \"&::after\": {\n    top: 0,\n    left: 0,\n    width: \"3px\",\n    content: '\"\"',\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: theme.palette.primary.main\n  }\n} : {});\nexport const StyledPagination = styled(Pagination)(({\n  theme\n}) => ({\n  \"& .MuiPaginationItem-root\": {\n    fontSize: 12,\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiPaginationItem-page:hover\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-page.Mui-selected\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-previousNext\": {\n    margin: 10,\n    borderRadius: 20,\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n}));\nexport const StyledSearchInput = styled(InputBase)(({\n  theme\n}) => ({\n  height: 40,\n  fontSize: 12,\n  maxWidth: 450,\n  width: \"100%\",\n  fontWeight: 500,\n  padding: \"0.5rem\",\n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: theme.palette.text.primary\n}));\nexport const StyledSearchIcon = styled(SearchIcon)(({\n  theme\n}) => ({\n  fontSize: 16,\n  marginLeft: \"0.5rem\",\n  marginRight: \"0.5rem\",\n  color: theme.palette.primary.main\n}));","import { ArrowRightAlt } from \"@mui/icons-material\";\r\nimport { Box, Stack, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport { H5 } from \"components/Typography\";\r\nimport { StyledPagination } from \"page-sections/data-table/dataTableV2/styledComponents\";\r\nimport { useMemo } from \"react\";\r\nimport { useExpanded, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\r\nimport ScrollBar from \"simplebar-react\"; // component props interface\r\n\r\nconst CustomTable = props => {\r\n  const {\r\n    data,\r\n    rowClick,\r\n    showFooter,\r\n    columnShape,\r\n    hidePagination\r\n  } = props; // hooks\r\n\r\n  const tableData = useMemo(() => data, [data]);\r\n  const columns = useMemo(() => columnShape, [columnShape]);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    gotoPage\r\n  } = useTable({\r\n    columns,\r\n    data: tableData\r\n  }, useSortBy, useExpanded, usePagination, useRowSelect); // handle pagination\r\n\r\n  const handleChange = (_e, currentPageNo) => {\r\n    gotoPage(currentPageNo - 1);\r\n  };\r\n\r\n  return <Box>\r\n      <ScrollBar>\r\n        <Table {...getTableProps()} sx={{\r\n        borderSpacing: \"0 1rem\",\r\n        borderCollapse: \"separate\"\r\n      }}>\r\n          <TableHead>\r\n            {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps(column.getSortByToggleProps())} sx={{\r\n              paddingY: 0,\r\n              fontSize: 12,\r\n              fontWeight: 600,\r\n              borderBottom: 0,\r\n              width: column.width,\r\n              color: \"text.secondary\",\r\n              minWidth: column.minWidth,\r\n              maxWidth: column.maxWidth,\r\n              \"&:last-child\": {\r\n                textAlign: \"center\"\r\n              }\r\n            }}>\r\n                    {column.render(\"Header\")}\r\n                  </TableCell>)}\r\n              </TableRow>)}\r\n          </TableHead>\r\n\r\n          <TableBody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row);\r\n            return <TableRow {...row.getRowProps()} onClick={rowClick && rowClick(row.original)} sx={{\r\n              backgroundColor: \"background.paper\",\r\n              cursor: rowClick ? \"pointer\" : \"unset\",\r\n              \"& td:first-of-type\": {\r\n                borderLeft: \"0\",\r\n                borderTopLeftRadius: \"8px\",\r\n                borderBottomLeftRadius: \"8px\"\r\n              },\r\n              \"& td:last-of-type\": {\r\n                borderRight: \"0\",\r\n                textAlign: \"center\",\r\n                borderTopRightRadius: \"8px\",\r\n                borderBottomRightRadius: \"8px\"\r\n              }\r\n            }}>\r\n                  {row.cells.map(cell => {\r\n                return <TableCell {...cell.getCellProps()} sx={{\r\n                  border: 0,\r\n                  fontSize: 13,\r\n                  fontWeight: 500,\r\n                  color: \"text.secondary\",\r\n                  \"&:first-child\": {\r\n                    paddingLeft: \"16px\"\r\n                  },\r\n                  \"&:last-child\": {\r\n                    paddingRight: \"16px\"\r\n                  }\r\n                }}>\r\n                        {cell.render(\"Cell\")}\r\n                      </TableCell>;\r\n              })}\r\n                </TableRow>;\r\n          })}\r\n          </TableBody>\r\n        </Table>\r\n      </ScrollBar>\r\n\r\n      {!hidePagination && <Stack alignItems=\"flex-end\" marginY={1}>\r\n          <StyledPagination count={pageOptions.length} shape=\"rounded\" onChange={handleChange} />\r\n        </Stack>}\r\n\r\n      {showFooter && <FlexBetween gap={0.5}>\r\n          <H5 color=\"text.secondary\" fontSize={13}>\r\n            Showing 1-12 of 24 result\r\n          </H5>\r\n          <ButtonBase disableRipple sx={{\r\n        fontSize: 13,\r\n        fontWeight: 600,\r\n        color: \"text.secondary\"\r\n      }}>\r\n            See All\r\n            <ArrowRightAlt />\r\n          </ButtonBase>\r\n        </FlexBetween>}\r\n    </Box>;\r\n};\r\n\r\nexport default CustomTable;","import { Box, styled } from \"@mui/material\";\nimport React from \"react\";\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  width: 40,\n  height: 40,\n  display: \"flex\",\n  borderRadius: \"5px\",\n  alignItems: \"center\",\n  marginRight: \"0.5rem\",\n  justifyContent: \"center\",\n  backgroundColor: theme.palette.primary.light\n}));\n\nconst IconWrapper = ({\n  children,\n  ...props\n}) => {\n  return <Wrapper {...props}>{children}</Wrapper>;\n};\n\nexport default IconWrapper;","import { SvgIcon } from \"@mui/material\";\n\nconst ShoppingBasket = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M22.5,10h-4L12.73,2.3a.77.77,0,0,0-.6-.3h-.26a.77.77,0,0,0-.6.3L5.5,10h-4a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5H2l1.71,7.65A3,3,0,0,0,6.6,22H17.4a3,3,0,0,0,2.92-2.35L22,12h.47a.5.5,0,0,0,.5-.5v-1A.5.5,0,0,0,22.5,10ZM8,10l4-5.33L16,10Z\" />\n    </SvgIcon>;\n};\n\nexport default ShoppingBasket;","import { SvgIcon } from \"@mui/material\";\n\nconst Delete = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M20,4.5v1a.5.5,0,0,1-.5.5H4.5A.5.5,0,0,1,4,5.5v-1A.5.5,0,0,1,4.5,4H9V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V4h4.5A.5.5,0,0,1,20,4.5ZM5.87,20.14a2,2,0,0,0,2,1.86h8.28a2,2,0,0,0,2-1.86L19,8H5Z\" />\n    </SvgIcon>;\n};\n\nexport default Delete;","import React from \"react\";\r\nexport const Context = React.createContext();","import { SvgIcon } from \"@mui/material\";\n\nconst DeleteIcon = props => {\n  return <SvgIcon viewBox=\"0 0 10 12\" {...props}>\n      <path d=\"M4.23535 5.64706H4.94123V9.52942H4.23535V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M2.82349 5.64706H3.52937V9.52942H2.82349V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M5.64722 5.64706H6.3531V9.52942H5.64722V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M9.17647 1.41176H6.35294V1.05882C6.35294 0.474988 5.87798 0 5.29412 0H3.88235C3.29849 0 2.82353 0.474988 2.82353 1.05882V1.41176H0V3.52941H0.735247L1.38428 10.994C1.41231 11.5588 1.87518 12 2.44179 12H6.73466C7.30127 12 7.76414 11.5588 7.79217 10.994L8.44123 3.52941H9.17647V1.41176ZM3.52941 1.05882C3.52941 0.864212 3.68774 0.705882 3.88235 0.705882H5.29412C5.48875 0.705882 5.64706 0.864212 5.64706 1.05882V1.41176H3.52941V1.05882ZM0.705882 2.11765H8.47059V2.82353H0.705882V2.11765ZM7.08732 10.9559C7.07941 11.1455 6.92452 11.2941 6.73468 11.2941H2.44179C2.25195 11.2941 2.09706 11.1456 2.08915 10.9559C1.39861 3.00981 1.44584 3.55313 1.44376 3.52941H7.73271C7.73082 3.55071 7.77478 3.04544 7.08732 10.9559Z\" fill=\"currentColor\" />\n    </SvgIcon>;\n};\n\nexport default DeleteIcon;","import { SvgIcon } from \"@mui/material\";\n\nconst Add = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19,11.5v1a.5.5,0,0,1-.5.5H13v5.5a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5V13H5.5a.5.5,0,0,1-.5-.5v-1a.5.5,0,0,1,.5-.5H11V5.5a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5V11h5.5A.5.5,0,0,1,19,11.5Z\" />\n    </SvgIcon>;\n};\n\nexport default Add;","import axios from \"axios\";\r\n\r\nexport async function obtenerClasificacionIdService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/clasificacion-padre/${id}`)\r\n}\r\nexport async function CrearClasificacionService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/create`)\r\n}\r\nexport async function ObtenerClasificacionService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion`)\r\n}\r\nexport async function GuardarClasificacionService({\r\n    id,\r\n    nombreClasificacion,\r\n    clasificacionId\r\n}) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/Clasificacion`, {\r\n        id,\r\n        nombreClasificacion,\r\n        clasificacionId\r\n    });\r\n}\r\nexport async function EditarClasificacionService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/editar/${id}`);\r\n}\r\nexport async function ModificarClasificacionService({\r\n    id,\r\n    nombreClasificacion,\r\n    clasificacionId\r\n}) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/Clasificacion/${id}`, {\r\n        id,\r\n        nombreClasificacion,\r\n        clasificacionId\r\n    });\r\n}\r\nexport async function EliminarClasificacionService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/Clasificacion/${id}`, {});\r\n}"],"sourceRoot":""}