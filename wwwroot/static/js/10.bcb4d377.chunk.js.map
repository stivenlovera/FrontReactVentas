{"version":3,"sources":["components/input-fields/AppTextField.jsx","components/AppModal.jsx","components/flexbox/FlexRowAlign.jsx","components/input-fields/SearchInput.jsx","page-sections/data-table/dataTableV2/styledComponents.js","page-sections/admin-ecommerce/CustomTable.jsx","icons/Delete.jsx","components/IconWrapper.jsx","contexts/ContextDataTable.js","icons/ShoppingBasket.jsx","icons/DeleteIcon.jsx","icons/Add.jsx","Services/api-ventas-erp/clasificacionService.js","Services/api-ventas-erp/proveedorService.js","utils/convertoToBase64.js","pages/productos/productos-list/components/create-producto.jsx","pages/productos/productos-list/components/productos-columns.jsx","pages/productos/productos-list/components/productosFake.js","pages/productos/productos-list/productos-list.jsx","pages/productos/productos-list/components/utils-productos.js"],"names":["StyledTextField","styled","TextField","theme","fontWeight","color","palette","text","primary","borderRadius","borderColor","action","disabled","hover","AppTextField","props","Wrapper","Box","top","left","padding","maxWidth","width","position","transform","backgroundColor","lightTheme","background","default","AppModal","children","open","handleClose","onClose","FlexRowAlign","display","alignItems","justifyContent","StyledInputBase","InputBase","bordered","height","fontSize","paper","border","breakpoints","down","SearchInput","icon_style","startAdornment","sx","marginRight","StyledPagination","TableRow","selected_row","alpha","light","content","main","Pagination","margin","SearchIcon","marginLeft","CustomTable","data","rowClick","showFooter","columnShape","hidePagination","tableData","useMemo","columns","useTable","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","Table","borderSpacing","borderCollapse","TableHead","map","headerGroup","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","paddingY","borderBottom","minWidth","textAlign","render","TableBody","row","getRowProps","onClick","original","cursor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","cells","cell","getCellProps","paddingLeft","paddingRight","Stack","marginY","count","length","shape","onChange","_e","currentPageNo","FlexBetween","gap","ButtonBase","disableRipple","ArrowRightAlt","Delete","viewBox","d","IconWrapper","Context","React","createContext","ShoppingBasket","DeleteIcon","fill","Add","obtenerClasificacionIdService","id","axios","get","process","CrearClasificacionService","ObtenerClasificacionService","GuardarClasificacionService","nombreClasificacion","clasificacionId","post","EditarClasificacionService","ModificarClasificacionService","put","CrearProductoService","ObtenerProductoService","GuardarProductoService","values","EditarProductoService","readUploadedFileAsText","event","inputFile","target","files","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","StyledAppModal","outline","ImageDeleteWrapper","right","error","ImageUploadWrapper","minHeight","grey","CreateProductoModal","editProduct","tipo","useContext","setContext","downXl","useMediaQuery","useState","initialState","codigoProducto","codigoBarra","nombreProducto","unidadMedida","precioCompra","utilidadMin","stockMinimo","PrecioVentaMin","utilidadMax","PrecioVentaMax","proveedorId","proveedor","categoriaId","grupoId","marcaId","modeloId","categoria","grupo","marca","modelo","imagenes","validationSchema","Yup","nullable","min","required","useFormik","initialValues","onSubmit","setValues","console","log","ApiInsertProducto","errors","handleChange","handleSubmit","touched","setFieldValue","resetForm","optionProveedor","setOptionProveedor","optionCategoria","setOptionCategoria","optionGrupo","setOptionGrupo","optionMarca","optionModelo","setImagen","onImagenChange","e","imagen","ApiCrearProducto","proveedores","codigo","categorias","ApiEditarProducto","producto","ApiClasificacionPorId","useLayoutEffect","marginBottom","style","maxHeight","Grid","container","spacing","item","sm","xs","mb","fullWidth","size","name","placeholder","value","Boolean","helperText","productName","type","onKeyUp","resultado","parseInt","calcularPrecioVentaMin","calcularUtilidadMin","calcularPrecioVentaMax","calcularUtilidadMax","Autocomplete","disablePortal","options","getOptionLabel","nombreProveedor","newValue","renderInput","params","label","pb","i","overflow","src","alt","IconButton","nuevo","forEach","element","index","push","onImagenRemove","htmlFor","accept","FlexBox","marginTop","Button","variant","ProductosColumns","Header","accessor","Cell","transition","isSelected","setTipo","openModal","setOpenModal","Edit","alert","productosFake","acciones","HeadingWrapper","format","Date","flexWrap","ProductosList","t","useTranslation","actualizarTable","setActualizarTableContext","searchValue","setSearchValue","filteredItem","setFilteredItem","ApiObtenerTodo","useEffect","listData","filter","toLocaleLowerCase","match","toLowerCase","searchByNombre","Provider","pt","endIcon"],"mappings":"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","file":"static/js/10.bcb4d377.chunk.js","sourcesContent":["import { styled, TextField } from \"@mui/material\";\nimport React from \"react\";\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  \"& .MuiOutlinedInput-input\": {\n    fontWeight: 500,\n    color: theme.palette.text.primary\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: theme.palette.action.disabled\n  },\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n    borderColor: theme.palette.action.hover\n  },\n  \"& .MuiInputLabel-root\": {\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiInputLabel-root.Mui-focused\": {\n    fontWeight: 600\n  },\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AppTextField = props => {\n  return <StyledTextField {...props} />;\n};\n\nexport default AppTextField;","import { Box, Modal, styled } from \"@mui/material\";\nimport { lightTheme } from \"../constants\"; // ---------------------------------------------------------\n\n// ---------------------------------------------------------\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  padding: 24,\n  maxWidth: 680,\n  width: \"100%\",\n  borderRadius: \"4px\",\n  position: \"absolute\",\n  transform: \"translate(-50%, -50%)\",\n  backgroundColor: lightTheme(theme) ? \"#fff\" : theme.palette.background.default\n}));\n\nconst AppModal = ({\n  children,\n  open,\n  handleClose,\n  ...props\n}) => {\n  return <Modal open={open} onClose={handleClose}>\n      <Wrapper {...props}>{children}</Wrapper>\n    </Modal>;\n};\n\nexport default AppModal;","import { Box } from \"@mui/material\";\n\nconst FlexRowAlign = ({\n  children,\n  ...props\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\n    {children}\n  </Box>;\n\nexport default FlexRowAlign;","import { InputBase, styled } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\n// styled component\nconst StyledInputBase = styled(InputBase)(({\n  theme,\n  bordered\n}) => ({\n  height: 45,\n  fontSize: 12,\n  width: \"100%\",\n  maxWidth: 350,\n  fontWeight: 600,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  border: bordered ? `1px solid ${theme.palette.action.disabled}` : \"none\",\n  [theme.breakpoints.down(500)]: {\n    maxWidth: \"100%\"\n  },\n  \"::placeholder\": {\n    color: theme.palette.text.disabled\n  }\n})); // ------------------------------------------------------------\n\n// ------------------------------------------------------------\nconst SearchInput = props => {\n  const {\n    icon_style = {},\n    bordered = true\n  } = props;\n  return <StyledInputBase bordered={bordered} startAdornment={<SearchIcon sx={{\n    fontSize: 18,\n    marginRight: 1,\n    color: \"text.disabled\",\n    ...icon_style\n  }} />} {...props} />;\n};\n\nexport default SearchInput;","import { alpha, InputBase, Pagination, styled, TableRow } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\nexport const StyledTableBodyRow = styled(TableRow)(({\n  theme,\n  selected_row\n}) => selected_row === \"select\" ? {\n  backgroundColor: alpha(theme.palette.primary.light, 0.5),\n  position: \"relative\",\n  \"&::after\": {\n    top: 0,\n    left: 0,\n    width: \"3px\",\n    content: '\"\"',\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: theme.palette.primary.main\n  }\n} : {});\nexport const StyledPagination = styled(Pagination)(({\n  theme\n}) => ({\n  \"& .MuiPaginationItem-root\": {\n    fontSize: 12,\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiPaginationItem-page:hover\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-page.Mui-selected\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-previousNext\": {\n    margin: 10,\n    borderRadius: 20,\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n}));\nexport const StyledSearchInput = styled(InputBase)(({\n  theme\n}) => ({\n  height: 40,\n  fontSize: 12,\n  maxWidth: 450,\n  width: \"100%\",\n  fontWeight: 500,\n  padding: \"0.5rem\",\n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: theme.palette.text.primary\n}));\nexport const StyledSearchIcon = styled(SearchIcon)(({\n  theme\n}) => ({\n  fontSize: 16,\n  marginLeft: \"0.5rem\",\n  marginRight: \"0.5rem\",\n  color: theme.palette.primary.main\n}));","import { ArrowRightAlt } from \"@mui/icons-material\";\r\nimport { Box, Stack, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\r\nimport ButtonBase from \"@mui/material/ButtonBase\";\r\nimport FlexBetween from \"components/flexbox/FlexBetween\";\r\nimport { H5 } from \"components/Typography\";\r\nimport { StyledPagination } from \"page-sections/data-table/dataTableV2/styledComponents\";\r\nimport { useMemo } from \"react\";\r\nimport { useExpanded, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\r\nimport ScrollBar from \"simplebar-react\"; // component props interface\r\n\r\nconst CustomTable = props => {\r\n  const {\r\n    data,\r\n    rowClick,\r\n    showFooter,\r\n    columnShape,\r\n    hidePagination\r\n  } = props; // hooks\r\n\r\n  const tableData = useMemo(() => data, [data]);\r\n  const columns = useMemo(() => columnShape, [columnShape]);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    gotoPage\r\n  } = useTable({\r\n    columns,\r\n    data: tableData\r\n  }, useSortBy, useExpanded, usePagination, useRowSelect); // handle pagination\r\n\r\n  const handleChange = (_e, currentPageNo) => {\r\n    gotoPage(currentPageNo - 1);\r\n  };\r\n\r\n  return <Box>\r\n      <ScrollBar>\r\n        <Table {...getTableProps()} sx={{\r\n        borderSpacing: \"0 1rem\",\r\n        borderCollapse: \"separate\"\r\n      }}>\r\n          <TableHead>\r\n            {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps(column.getSortByToggleProps())} sx={{\r\n              paddingY: 0,\r\n              fontSize: 12,\r\n              fontWeight: 600,\r\n              borderBottom: 0,\r\n              width: column.width,\r\n              color: \"text.secondary\",\r\n              minWidth: column.minWidth,\r\n              maxWidth: column.maxWidth,\r\n              \"&:last-child\": {\r\n                textAlign: \"center\"\r\n              }\r\n            }}>\r\n                    {column.render(\"Header\")}\r\n                  </TableCell>)}\r\n              </TableRow>)}\r\n          </TableHead>\r\n\r\n          <TableBody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row);\r\n            return <TableRow {...row.getRowProps()} onClick={rowClick && rowClick(row.original)} sx={{\r\n              backgroundColor: \"background.paper\",\r\n              cursor: rowClick ? \"pointer\" : \"unset\",\r\n              \"& td:first-of-type\": {\r\n                borderLeft: \"0\",\r\n                borderTopLeftRadius: \"8px\",\r\n                borderBottomLeftRadius: \"8px\"\r\n              },\r\n              \"& td:last-of-type\": {\r\n                borderRight: \"0\",\r\n                textAlign: \"center\",\r\n                borderTopRightRadius: \"8px\",\r\n                borderBottomRightRadius: \"8px\"\r\n              }\r\n            }}>\r\n                  {row.cells.map(cell => {\r\n                return <TableCell {...cell.getCellProps()} sx={{\r\n                  border: 0,\r\n                  fontSize: 13,\r\n                  fontWeight: 500,\r\n                  color: \"text.secondary\",\r\n                  \"&:first-child\": {\r\n                    paddingLeft: \"16px\"\r\n                  },\r\n                  \"&:last-child\": {\r\n                    paddingRight: \"16px\"\r\n                  }\r\n                }}>\r\n                        {cell.render(\"Cell\")}\r\n                      </TableCell>;\r\n              })}\r\n                </TableRow>;\r\n          })}\r\n          </TableBody>\r\n        </Table>\r\n      </ScrollBar>\r\n\r\n      {!hidePagination && <Stack alignItems=\"flex-end\" marginY={1}>\r\n          <StyledPagination count={pageOptions.length} shape=\"rounded\" onChange={handleChange} />\r\n        </Stack>}\r\n\r\n      {showFooter && <FlexBetween gap={0.5}>\r\n          <H5 color=\"text.secondary\" fontSize={13}>\r\n            Showing 1-12 of 24 result\r\n          </H5>\r\n          <ButtonBase disableRipple sx={{\r\n        fontSize: 13,\r\n        fontWeight: 600,\r\n        color: \"text.secondary\"\r\n      }}>\r\n            See All\r\n            <ArrowRightAlt />\r\n          </ButtonBase>\r\n        </FlexBetween>}\r\n    </Box>;\r\n};\r\n\r\nexport default CustomTable;","import { SvgIcon } from \"@mui/material\";\n\nconst Delete = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M20,4.5v1a.5.5,0,0,1-.5.5H4.5A.5.5,0,0,1,4,5.5v-1A.5.5,0,0,1,4.5,4H9V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V4h4.5A.5.5,0,0,1,20,4.5ZM5.87,20.14a2,2,0,0,0,2,1.86h8.28a2,2,0,0,0,2-1.86L19,8H5Z\" />\n    </SvgIcon>;\n};\n\nexport default Delete;","import { Box, styled } from \"@mui/material\";\nimport React from \"react\";\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  width: 40,\n  height: 40,\n  display: \"flex\",\n  borderRadius: \"5px\",\n  alignItems: \"center\",\n  marginRight: \"0.5rem\",\n  justifyContent: \"center\",\n  backgroundColor: theme.palette.primary.light\n}));\n\nconst IconWrapper = ({\n  children,\n  ...props\n}) => {\n  return <Wrapper {...props}>{children}</Wrapper>;\n};\n\nexport default IconWrapper;","import React from \"react\";\r\nexport const Context = React.createContext();","import { SvgIcon } from \"@mui/material\";\n\nconst ShoppingBasket = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M22.5,10h-4L12.73,2.3a.77.77,0,0,0-.6-.3h-.26a.77.77,0,0,0-.6.3L5.5,10h-4a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5H2l1.71,7.65A3,3,0,0,0,6.6,22H17.4a3,3,0,0,0,2.92-2.35L22,12h.47a.5.5,0,0,0,.5-.5v-1A.5.5,0,0,0,22.5,10ZM8,10l4-5.33L16,10Z\" />\n    </SvgIcon>;\n};\n\nexport default ShoppingBasket;","import { SvgIcon } from \"@mui/material\";\n\nconst DeleteIcon = props => {\n  return <SvgIcon viewBox=\"0 0 10 12\" {...props}>\n      <path d=\"M4.23535 5.64706H4.94123V9.52942H4.23535V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M2.82349 5.64706H3.52937V9.52942H2.82349V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M5.64722 5.64706H6.3531V9.52942H5.64722V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M9.17647 1.41176H6.35294V1.05882C6.35294 0.474988 5.87798 0 5.29412 0H3.88235C3.29849 0 2.82353 0.474988 2.82353 1.05882V1.41176H0V3.52941H0.735247L1.38428 10.994C1.41231 11.5588 1.87518 12 2.44179 12H6.73466C7.30127 12 7.76414 11.5588 7.79217 10.994L8.44123 3.52941H9.17647V1.41176ZM3.52941 1.05882C3.52941 0.864212 3.68774 0.705882 3.88235 0.705882H5.29412C5.48875 0.705882 5.64706 0.864212 5.64706 1.05882V1.41176H3.52941V1.05882ZM0.705882 2.11765H8.47059V2.82353H0.705882V2.11765ZM7.08732 10.9559C7.07941 11.1455 6.92452 11.2941 6.73468 11.2941H2.44179C2.25195 11.2941 2.09706 11.1456 2.08915 10.9559C1.39861 3.00981 1.44584 3.55313 1.44376 3.52941H7.73271C7.73082 3.55071 7.77478 3.04544 7.08732 10.9559Z\" fill=\"currentColor\" />\n    </SvgIcon>;\n};\n\nexport default DeleteIcon;","import { SvgIcon } from \"@mui/material\";\n\nconst Add = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19,11.5v1a.5.5,0,0,1-.5.5H13v5.5a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5V13H5.5a.5.5,0,0,1-.5-.5v-1a.5.5,0,0,1,.5-.5H11V5.5a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5V11h5.5A.5.5,0,0,1,19,11.5Z\" />\n    </SvgIcon>;\n};\n\nexport default Add;","import axios from \"axios\";\r\n\r\nexport async function obtenerClasificacionIdService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/clasificacion-padre/${id}`)\r\n}\r\nexport async function CrearClasificacionService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/create`)\r\n}\r\nexport async function ObtenerClasificacionService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion`)\r\n}\r\nexport async function GuardarClasificacionService({\r\n    id,\r\n    nombreClasificacion,\r\n    clasificacionId\r\n}) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/Clasificacion`, {\r\n        id,\r\n        nombreClasificacion,\r\n        clasificacionId\r\n    });\r\n}\r\nexport async function EditarClasificacionService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/editar/${id}`);\r\n}\r\nexport async function ModificarClasificacionService({\r\n    id,\r\n    nombreClasificacion,\r\n    clasificacionId\r\n}) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/Clasificacion/${id}`, {\r\n        id,\r\n        nombreClasificacion,\r\n        clasificacionId\r\n    });\r\n}\r\nexport async function EliminarClasificacionService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/Clasificacion/${id}`, {});\r\n}","import axios from \"axios\";\r\n\r\nexport async function CrearProductoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto/create`)\r\n}\r\nexport async function ObtenerProductoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto`)\r\n}\r\nexport async function GuardarProductoService(values) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/producto`, values);\r\n}\r\nexport async function EditarProductoService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto/editar/${id}`);\r\n}\r\nexport async function ModificarProductoService({\r\n    id,\r\n    ci,\r\n    codigoCliente,\r\n    nombreCliente,\r\n    correoElectronico,\r\n    telefono,\r\n    dirrecion,\r\n    lineaCredito,\r\n    planCuentaId,\r\n    monedaId\r\n}) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/producto/${id}`, {\r\n        id: id,\r\n        ci: ci,\r\n        codigoCliente: codigoCliente,\r\n        nombreCliente: nombreCliente,\r\n        correoElectronico: correoElectronico,\r\n        telefono: telefono,\r\n        dirrecion: dirrecion,\r\n        lineaCredito: lineaCredito,\r\n        planCuentaId: planCuentaId,\r\n        monedaId: monedaId\r\n    });\r\n}\r\nexport async function EliminarProductoService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/producto/${id}`, {});\r\n}","export const fileGetBase64 = async (event) => {\r\n    let me = this;\r\n    let file = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n        //me.modelvalue = reader.result;\r\n        console.log(reader.result);\r\n        me = reader.result\r\n    };\r\n    reader.onerror = function (error) {\r\n        console.log('Error: ', error);\r\n    };\r\n    return me\r\n}\r\nexport const readUploadedFileAsText = (event) => {\r\n    let inputFile = event.target.files[0];\r\n    const temporaryFileReader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        temporaryFileReader.onerror = () => {\r\n            temporaryFileReader.abort();\r\n            reject(new DOMException(\"Problem parsing input file.\"));\r\n        };\r\n\r\n        temporaryFileReader.onload = () => {\r\n            resolve(temporaryFileReader.result);\r\n        };\r\n        temporaryFileReader.readAsDataURL(inputFile);\r\n    });\r\n};","\r\nimport { Autocomplete, Box, Button, Grid, IconButton, styled, TextField, useMediaQuery } from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nimport { useFormik } from \"formik\";\r\nimport Add from \"icons/Add\";\r\nimport DeleteIcon from \"icons/DeleteIcon\";\r\nimport { useContext, useLayoutEffect, useState } from \"react\";\r\nimport { obtenerClasificacionIdService } from \"Services/api-ventas-erp/clasificacionService\";\r\nimport { CrearProductoService, EditarProductoService, GuardarProductoService } from \"Services/api-ventas-erp/proveedorService\";\r\nimport { fileGetBase64, readUploadedFileAsText } from \"utils/convertoToBase64\";\r\n\r\nimport * as Yup from \"yup\"; // component props interface\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 700,\r\n    minWidth: 300,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst CreateProductoModal = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editProduct,\r\n    tipo,\r\n    id\r\n}) => {\r\n    const [context, setContext] = useContext(Context);\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const [precioMin, setPrecioMin] = useState(0)\r\n    const initialState = {\r\n        id: 0,\r\n        codigoProducto: '',\r\n        codigoBarra: '',\r\n        nombreProducto: '',\r\n        unidadMedida: '',\r\n        precioCompra: 0,\r\n        utilidadMin: 0,\r\n        stockMinimo: 0,\r\n        PrecioVentaMin: 0,\r\n        utilidadMax: 0,\r\n        PrecioVentaMax: 0,\r\n        proveedorId: '',\r\n        proveedor: '',\r\n        categoriaId: '',\r\n        grupoId: '',\r\n        marcaId: '',\r\n        modeloId: '',\r\n        categoria: '',\r\n        grupo: '',\r\n        marca: '',\r\n        modelo: '',\r\n        imagenes: []\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        id: Yup.number().nullable(),\r\n        codigoProducto: Yup.string().min(3, \"Es muy corto\").required(\"Codigo es requerido!\"),\r\n        codigoBarra: Yup.string().min(3, \"Es muy corto\").required(\"Codigo barra es requerido!\"),\r\n        nombreProducto: Yup.string().min(3, \"Es muy corto\").required(\"Nombre es requerido!\"),\r\n        unidadMedida: Yup.string().required(\"Unidad medida es requerido!\"),\r\n        stockMinimo: Yup.string().required(\"Stock minimo requerido!\"),\r\n        precioCompra: Yup.number('debe ser un numero').required(\"Precio compra es requerido!\"),\r\n        utilidadMin: Yup.number('debe ser un numero').required(\"Utilidad max es requerido!\"),\r\n        PrecioVentaMin: Yup.number('debe ser un numero').required(\"Precio venta min es requerido!\"),\r\n        utilidadMax: Yup.number('debe ser un numero').required(\"Utilidad min es requerido!\"),\r\n        PrecioVentaMax: Yup.number('debe ser un numero').required(\"Precio venta max es requerido!\"),\r\n        proveedorId: Yup.string().required(\"Proveedores es requerido!\"),\r\n        proveedor: Yup.string().nullable(),\r\n        categoriaId: Yup.number().nullable(),\r\n        grupoId: Yup.number().nullable(),\r\n        marcaId: Yup.number(),//.required(\"Marca es requerido!\"),\r\n        modeloId: Yup.number(),//.required(\"Modelo es requerido!\"),\r\n        categoria: Yup.string().nullable(),\r\n        grupo: Yup.string().nullable(),\r\n        marca: Yup.string().nullable(),\r\n        modelo: Yup.string().nullable(),\r\n        imagenes: Yup.array()\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        setFieldValue,\r\n        setValues,\r\n        resetForm\r\n    } = useFormik({\r\n        initialValues: initialState,\r\n        validationSchema,\r\n        onSubmit: values => {\r\n            setValues({ ...values, imagenes: imagenes })\r\n            console.log(values);\r\n            console.log(imagenes)\r\n            switch (tipo) {\r\n                case 'nuevo':\r\n                    ApiInsertProducto();\r\n                    break;\r\n                case 'editar':\r\n\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    const [optionProveedor, setOptionProveedor] = useState([]);\r\n    const [optionCategoria, setOptionCategoria] = useState([]);\r\n    const [optionGrupo, setOptionGrupo] = useState([])\r\n    const [optionMarca, setOptionMarca] = useState([])\r\n    const [optionModelo, setOptionModelo] = useState([])\r\n    const [imagenes, setImagen] = useState([]);\r\n\r\n    const onImagenChange = async (e) => {\r\n        console.log('data entrante ', e);\r\n        let imagen = await readUploadedFileAsText(e);\r\n        console.log(imagen)\r\n        setValues({ ...values, imagenes: imagenes })\r\n        setImagen([...imagenes, imagen]);\r\n\r\n    }\r\n    const onImagenRemove = (i) => {\r\n        var nuevo = []\r\n        imagenes.forEach((element, index) => {\r\n            if (index != i) {\r\n                nuevo.push(element)\r\n            }\r\n        });\r\n        setValues({ ...values, imagenes: nuevo })\r\n        setFieldValue('imagenes', nuevo)\r\n\r\n    }\r\n    const calcularPrecioVentaMin = () => {\r\n        let resultado = parseInt(values.precioCompra) + (((values.utilidadMin) / 100) * values.precioCompra);\r\n        setFieldValue('PrecioVentaMin', resultado);\r\n    }\r\n    const calcularPrecioVentaMax = () => {\r\n        let resultado = parseInt(values.precioCompra) + (((values.utilidadMax) / 100) * values.precioCompra);\r\n        setFieldValue('PrecioVentaMax', resultado);\r\n    }\r\n    const calcularUtilidadMin = () => {\r\n        let resultado = parseInt(((values.PrecioVentaMin * 100) / values.precioCompra) - (100));\r\n        setFieldValue('utilidadMin', resultado);\r\n    }\r\n    const calcularUtilidadMax = () => {\r\n        let resultado = parseInt(((values.PrecioVentaMax * 100) / values.precioCompra) - (100));\r\n        setFieldValue('utilidadMax', resultado);\r\n    }\r\n    const ApiCrearProducto = async () => {\r\n        const { data } = await CrearProductoService();\r\n        console.log(data.data)\r\n        setOptionProveedor(data.data.proveedores)\r\n        setValues({ ...initialState, codigoProducto: data.data.codigo })\r\n        setOptionCategoria(data.data.categorias);\r\n    }\r\n    const ApiEditarProducto = async () => {\r\n        const { data } = await EditarProductoService(id);\r\n        setOptionProveedor(data.data.proveedores)\r\n        setOptionCategoria(data.data.categorias)\r\n        console.log(data.data.proveedores)\r\n        console.log(data.data.categorias)\r\n        setImagen(data.data.imagenes);\r\n        setValues({ ...data.data.producto });\r\n    }\r\n    const ApiModificarProducto = async () => {\r\n        const { data } = await EditarProductoService(id);\r\n        setValues({ ...data.data.clasificacion })\r\n    }\r\n    const ApiInsertProducto = async () => {\r\n        const { data } = await GuardarProductoService(values);\r\n        console.log(data.data)\r\n        resetForm();\r\n        onClose();\r\n        setContext(true)\r\n    }\r\n\r\n    const ApiClasificacionPorId = async (clasificacionId) => {\r\n        const { data } = await obtenerClasificacionIdService(clasificacionId);\r\n        setOptionGrupo(data.data);\r\n    }\r\n    useLayoutEffect(() => {\r\n        console.log(tipo)\r\n        switch (tipo) {\r\n            case 'nuevo':\r\n                ApiCrearProducto();\r\n                break;\r\n            case 'editar':\r\n                ApiEditarProducto();\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        return () => {\r\n\r\n        };\r\n    }, [open])\r\n\r\n    return <StyledAppModal open={open} handleClose={onClose}>\r\n        <H2 marginBottom={2}>\r\n            {editProduct && data ? \"Editar producto\" : \"Añadir producto\"}\r\n        </H2>\r\n\r\n        <form onSubmit={(e) => { console.log(errors); handleSubmit(e) }}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoProducto\"\r\n                            placeholder=\"Codigo producto\"\r\n                            value={values.codigoProducto}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoProducto && errors.codigoProducto)}\r\n                            helperText={touched.codigoProducto && errors.codigoProducto}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo de Barras</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoBarra\"\r\n                            placeholder=\"Codigo de barras\"\r\n                            value={values.codigoBarra}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoBarra && errors.codigoBarra)}\r\n                            helperText={touched.codigoBarra && errors.codigoBarra}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Nombre</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreProducto\"\r\n                            placeholder=\"Nombre\"\r\n                            value={values.productName}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreProducto && errors.nombreProducto)}\r\n                            helperText={touched.nombreProducto && errors.nombreProducto}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Stock minimo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"stockMinimo\"\r\n                            type=\"number\"\r\n                            placeholder=\"Stock minimo\"\r\n                            value={values.stockMinimo}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.stockMinimo && errors.stockMinimo)}\r\n                            helperText={touched.stockMinimo && errors.stockMinimo}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Unidad Medida</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"unidadMedida\"\r\n                            placeholder=\"Unidad Medida\"\r\n                            value={values.unidadMedida}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.unidadMedida && errors.unidadMedida)}\r\n                            helperText={touched.unidadMedida && errors.unidadMedida}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                     \r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio compra</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"precioCompra\"\r\n                            type=\"number\"\r\n                            placeholder=\"precio compra\"\r\n                            value={values.precioCompra}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    //calcularUtilidadMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.precioCompra && errors.precioCompra)}\r\n                            helperText={touched.precioCompra && errors.precioCompra}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>% Utilidad min</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"utilidadMin\"\r\n                            type=\"number\"\r\n                            placeholder=\"% Utilidad mi\"\r\n                            value={values.utilidadMin}\r\n                            onChange={(e) => {\r\n                                handleChange(e)\r\n                            }}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularPrecioVentaMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.utilidadMin && errors.utilidadMin)}\r\n                            helperText={touched.utilidadMin && errors.utilidadMin}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio venta min</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"PrecioVentaMin\"\r\n                            type=\"number\"\r\n                            placeholder=\"Precio venta min\"\r\n                            value={values.PrecioVentaMin}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularUtilidadMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.PrecioVentaMin && errors.PrecioVentaMin)}\r\n                            helperText={touched.PrecioVentaMin && errors.PrecioVentaMin}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>% Utilidad max</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"utilidadMax\"\r\n                            type=\"number\"\r\n                            placeholder=\"% Utilidad max\"\r\n                            value={values.utilidadMax}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularPrecioVentaMax()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.utilidadMax && errors.utilidadMax)}\r\n                            helperText={touched.utilidadMax && errors.utilidadMax}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio venta max</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"PrecioVentaMax\"\r\n                            type=\"number\"\r\n                            placeholder=\"Categoria\"\r\n                            value={values.PrecioVentaMax}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularUtilidadMax()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.PrecioVentaMax && errors.PrecioVentaMax)}\r\n                            helperText={touched.PrecioVentaMax && errors.PrecioVentaMax}\r\n                        />\r\n                    </Grid>\r\n                    \r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Proveedor</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-proveedor\"\r\n                            options={optionProveedor}\r\n                            getOptionLabel={(options) => options.nombreProveedor}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('proveedorId', newValue.id)\r\n                                } else {\r\n                                    setFieldValue('proveedorId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.proveedorId}\r\n                                        label=\"Proveedores\"\r\n                                        error={Boolean(touched.proveedorId && errors.proveedorId)}\r\n                                        helperText={touched.proveedorId && errors.proveedorId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Categoria</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={optionCategoria}\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('categoriaId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('categoriaId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.categoria}\r\n                                        label=\"Grupo\"\r\n                                        error={Boolean(touched.categoriaId && errors.categoriaId)}\r\n                                        helperText={touched.categoriaId && errors.categoriaId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Grupo</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={optionGrupo}\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('grupoId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('grupoId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.grupoId}\r\n                                        label=\"Grupo\"\r\n                                        error={Boolean(touched.grupoId && errors.grupoId)}\r\n                                        helperText={touched.grupoId && errors.grupoId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Marca</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            options={optionMarca}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('marcaId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('marcaId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.marcaId}\r\n                                        label=\"Marca\"\r\n                                        error={Boolean(touched.marcaId && errors.marcaId)}\r\n                                        helperText={touched.marcaId && errors.marcaId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Modelo</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            options={optionModelo}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('modeloId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('modeloId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.modeloId}\r\n                                        label=\"Modelo\"\r\n                                        error={Boolean(touched.modeloId && errors.modeloId)}\r\n                                        helperText={touched.modeloId && errors.modeloId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                    <H6 pb={1}>Imagenes de producto</H6>\r\n                    <Box sx={{\r\n                        padding: 1,\r\n                        borderRadius: \"8px\",\r\n                        border: \"1px dashed\",\r\n                        borderColor: \"text.disabled\",\r\n                        backgroundColor: \"grey.100\"\r\n                    }}>\r\n                        <Grid container spacing={1}>\r\n                            {imagenes.map((item, i) =>\r\n                                <Grid item sm={3} xs={4} key={i}>\r\n                                    <Box sx={{\r\n                                        minHeight: 140,\r\n                                        borderRadius: \"8px\",\r\n                                        overflow: \"hidden\",\r\n                                        position: \"relative\"\r\n                                    }}>\r\n                                        <img src={item} width=\"100%\" height=\"100%\" alt={item} />\r\n                                        <ImageDeleteWrapper>\r\n                                            <IconButton\r\n                                                onClick={() => { onImagenRemove(i) }}\r\n                                            >\r\n                                                <DeleteIcon\r\n                                                    sx={{\r\n                                                        fontSize: 12,\r\n                                                        color: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </ImageDeleteWrapper>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item sm={3} xs={4}>\r\n                                <label htmlFor=\"image-upload\">\r\n                                    <input type=\"file\" accept=\"image/*\" id=\"image-upload\"\r\n                                        style={{\r\n                                            display: \"none\"\r\n                                        }}\r\n                                        onChange={onImagenChange}\r\n                                    />\r\n                                    <ImageUploadWrapper textAlign=\"center\">\r\n                                        <Box>\r\n                                            <Add color=\"disabled\" />\r\n                                            <Small fontWeight={600} display=\"block\">\r\n                                                Choose a file\r\n                                            </Small>\r\n                                            <Small fontWeight={600} color=\"text.disabled\">\r\n                                                or drag it here\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </ImageUploadWrapper>\r\n                                </label>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Scrollbar>\r\n\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button fullWidth variant=\"outlined\" onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button fullWidth type=\"submit\" variant=\"contained\">\r\n                            Save\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal>;\r\n};\r\n\r\nexport default CreateProductoModal;","import { Edit } from \"@mui/icons-material\";\r\nimport { Box, IconButton, Rating } from \"@mui/material\";\r\nimport { Fragment, useState } from \"react\";\r\nimport CreateProductoModal from \"./create-producto\";\r\nimport Delete from \"icons/Delete\";\r\nconst ProductosColumns = [\r\n    {\r\n        Header: \"Cod barras\",\r\n        accessor: \"codigoBarra\"\r\n    },\r\n    {\r\n        Header: \"Nombre\",\r\n        accessor: \"nombreProducto\"\r\n    },\r\n    {\r\n        Header: \"Unidad Medida\",\r\n        accessor: \"unidadMedida\"\r\n    },\r\n    {\r\n        Header: \"Precio venta min\",\r\n        accessor: \"precioVentaMin\"\r\n    },\r\n    {\r\n        Header: \"Precio venta max\",\r\n        accessor: \"precioVentaMax\"\r\n    },\r\n    {\r\n        Header: \"Acciones\",\r\n        accessor: \"acciones\",\r\n        Cell: ({\r\n            row\r\n        }) => {\r\n            const style = {\r\n                fontSize: 19,\r\n                transition: \"color 0.3s\",\r\n                color: row.isSelected ? \"white\" : \"text.disabled\"\r\n            };\r\n            const [tipo, setTipo] = useState('');\r\n            const [openModal, setOpenModal] = useState(false);\r\n            return <Fragment>\r\n                <IconButton\r\n                    onClick={() => {\r\n                        setOpenModal(true)\r\n                        setTipo('editar')\r\n                    }}\r\n                >\r\n                    <Edit\r\n                        sx={{\r\n                            fontSize: 18,\r\n                            color: \"text.disabled\"\r\n                        }}\r\n                    />\r\n                </IconButton>\r\n                <IconButton onClick={() => { alert('funcion pendiente') }}>\r\n                    <Delete sx={style} />\r\n                </IconButton>\r\n                <CreateProductoModal\r\n                    editProduct\r\n                    open={openModal}\r\n                    data={row.original}\r\n                    id={row.original.id}\r\n                    onClose={\r\n                        () => {\r\n                            setOpenModal(false);\r\n                            setTipo('')\r\n                        }}\r\n                    tipo={tipo}\r\n                />\r\n            </Fragment>;\r\n        }\r\n    }];\r\nexport default ProductosColumns;","import { format } from \"date-fns\";\r\nexport const productosFake = [{\r\n  id:'1',\r\n  nombreClasificacion: \"categoria 1 \",\r\n  acciones: \"\",\r\n}];\r\n\r\n\r\n\r\nexport const ordersFakeData = [{\r\n  orderNo: \"UY3769\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  orderNo: \"UY3770\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Paid\"\r\n}, {\r\n  orderNo: \"UY3761\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  orderNo: \"UY3762\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Paid\"\r\n}];\r\nexport const customersFakeData = [{\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  position: \"UI Designer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/001-man.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Austin, USA\",\r\n  status: \"Active\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  position: \"Editor\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/002-girl.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Austin, USA\",\r\n  status: \"Blocked\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Lily Collins\",\r\n  position: \"UI Designer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/003-boy.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Corner View, Sylhet\",\r\n  status: \"Active\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/004-woman.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Corner View, Sylhet\",\r\n  status: \"Blocked\"\r\n}];","import { Add } from \"@mui/icons-material\";\r\nimport { Box, Button, styled } from \"@mui/material\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport IconWrapper from \"components/IconWrapper\";\r\nimport SearchInput from \"components/input-fields/SearchInput\";\r\nimport { H5 } from \"components/Typography\";\r\nimport ShoppingBasket from \"icons/ShoppingBasket\";\r\nimport CustomTable from \"page-sections/admin-ecommerce/CustomTable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CreateProductoModal from \"./components/create-producto\";\r\nimport ProductosColumns from \"./components/productos-columns\";\r\nimport { productosFake } from \"./components/productosFake\";\r\nimport { searchByNombre } from \"./components/utils-productos\";\r\nimport { ObtenerProductoService } from \"Services/api-ventas-erp/proveedorService\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nexport const HeadingWrapper = styled(FlexBox)(({\r\n    theme\r\n}) => ({\r\n    marginBottom: 20,\r\n    flexWrap: \"wrap\",\r\n    [theme.breakpoints.down(530)]: {\r\n        \"& .MuiButton-root\": {\r\n            width: \"100%\"\r\n        },\r\n        \"& .MuiInputBase-root\": {\r\n            maxWidth: \"100%\",\r\n            marginBottom: 15\r\n        }\r\n    }\r\n}));\r\n\r\nconst ProductosList = () => {\r\n    const {\r\n        t\r\n    } = useTranslation();\r\n    const [openModal, setOpenModal] = useState(false); // search input\r\n    const [actualizarTable, setActualizarTableContext] = useState(false);\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [filteredItem, setFilteredItem] = useState(productosFake);\r\n\r\n    const ApiObtenerTodo = async () => {\r\n        const { data } = await ObtenerProductoService();\r\n        setFilteredItem(data.data);\r\n    }\r\n    useEffect(() => {\r\n        ApiObtenerTodo()\r\n        const result = searchByNombre(productosFake, searchValue);\r\n        setFilteredItem(result);\r\n        setActualizarTableContext(false);\r\n    }, [searchValue, actualizarTable]);\r\n    return (\r\n        <Context.Provider value={[actualizarTable, setActualizarTableContext]}>\r\n            <Box pt={2} pb={4}>\r\n                <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <FlexBox gap={0.5} alignItems=\"center\">\r\n                        <IconWrapper>\r\n                            <ShoppingBasket sx={{\r\n                                color: \"primary.main\"\r\n                            }} />\r\n                        </IconWrapper>\r\n                        <H5>Productos</H5>\r\n                    </FlexBox>\r\n                    <SearchInput bordered={'true'} placeholder=\"Buscar productos\" onChange={e => setSearchValue(e.target.value)} />\r\n                    <Button variant=\"contained\" endIcon={<Add />} onClick={() => setOpenModal(true)}>\r\n                        {t(\"Añadir Producto\")}\r\n                    </Button>\r\n                </HeadingWrapper>\r\n                <CustomTable columnShape={ProductosColumns} data={filteredItem} />\r\n                <CreateProductoModal open={openModal} onClose={() => setOpenModal(false)} tipo={'nuevo'} />\r\n            </Box>\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport default ProductosList;","export const searchByNombre = (listData, searchValue) => {\r\n    if (searchValue.length > 0) {\r\n      const searchResult = listData.filter(item => item.nombreClasificacion.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n      return searchResult;\r\n    } else {\r\n      return listData;\r\n    }\r\n  };\r\n  export const getRoute = pathname => {\r\n    const str = pathname.split(\"/\");\r\n    return `/${str[1]}`;\r\n  };"],"sourceRoot":""}