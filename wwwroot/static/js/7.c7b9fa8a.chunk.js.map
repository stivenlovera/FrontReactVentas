{"version":3,"sources":["components/input-fields/AppTextField.jsx","components/flexbox/FlexRowAlign.jsx","components/IconWrapper.jsx","components/input-fields/SearchInput.jsx","icons/ShoppingBasket.jsx","components/AppModal.jsx","page-sections/data-table/dataTableV2/styledComponents.js","page-sections/admin-ecommerce/CustomTable.jsx","icons/DeleteIcon.jsx","icons/Delete.jsx","contexts/ContextDataTable.js","Services/api-ventas-erp/clasificacionService.js","icons/Add.jsx","Services/api-ventas-erp/proveedorService.js","utils/convertoToBase64.js","pages/productos/productos-list/components/create-producto.jsx","pages/productos/productos-list/components/productos-columns.jsx","pages/productos/productos-list/components/productosFake.js","pages/productos/productos-list/productos-list.jsx","pages/productos/productos-list/components/utils-productos.js"],"names":["StyledTextField","styled","TextField","theme","fontWeight","color","palette","text","primary","borderRadius","borderColor","action","disabled","hover","AppTextField","props","FlexRowAlign","children","display","alignItems","justifyContent","Wrapper","Box","width","height","marginRight","backgroundColor","light","IconWrapper","StyledInputBase","InputBase","bordered","fontSize","maxWidth","padding","background","paper","border","breakpoints","down","SearchInput","icon_style","startAdornment","sx","ShoppingBasket","viewBox","d","top","left","position","transform","lightTheme","default","AppModal","open","handleClose","onClose","StyledPagination","TableRow","selected_row","alpha","content","main","Pagination","margin","SearchIcon","marginLeft","CustomTable","data","rowClick","showFooter","columnShape","hidePagination","tableData","useMemo","columns","useTable","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","gotoPage","Table","borderSpacing","borderCollapse","TableHead","map","headerGroup","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","paddingY","borderBottom","minWidth","textAlign","render","TableBody","row","getRowProps","onClick","original","cursor","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderRight","borderTopRightRadius","borderBottomRightRadius","cells","cell","getCellProps","paddingLeft","paddingRight","Stack","marginY","count","length","shape","onChange","_e","currentPageNo","FlexBetween","gap","ButtonBase","disableRipple","ArrowRightAlt","DeleteIcon","fill","Delete","Context","React","createContext","obtenerClasificacionIdService","id","axios","get","process","CrearClasificacionService","ObtenerClasificacionService","GuardarClasificacionService","nombreClasificacion","clasificacionId","post","EditarClasificacionService","ModificarClasificacionService","put","Add","SvgIcon","CrearProductoService","ObtenerProductoService","GuardarProductoService","values","EditarProductoService","readUploadedFileAsText","event","inputFile","target","files","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","StyledAppModal","outline","ImageDeleteWrapper","right","error","ImageUploadWrapper","minHeight","grey","CreateProductoModal","editProduct","tipo","useContext","setContext","downXl","useMediaQuery","useState","initialState","codigoProducto","codigoBarra","nombreProducto","unidadMedida","cantidad","stockActual","stockMinimo","precioCompra","utilidadMin","PrecioVentaMin","utilidadMax","PrecioVentaMax","lote","fechaVencimiento","proveedorId","proveedor","categoriaId","grupoId","marcaId","modeloId","categoria","grupo","marca","modelo","imagenes","validationSchema","Yup","nullable","min","required","useFormik","initialValues","onSubmit","setValues","console","log","ApiInsertProducto","errors","handleChange","handleSubmit","touched","setFieldValue","resetForm","optionProveedor","setOptionProveedor","optionCategoria","setOptionCategoria","optionGrupo","setOptionGrupo","optionMarca","optionModelo","setImagen","onImagenChange","e","imagen","ApiCrearProducto","proveedores","codigo","categorias","ApiEditarProducto","producto","ApiClasificacionPorId","useLayoutEffect","marginBottom","style","maxHeight","Grid","container","spacing","item","sm","xs","mb","fullWidth","size","name","placeholder","value","Boolean","helperText","productName","type","onKeyUp","resultado","parseInt","calcularPrecioVentaMin","calcularUtilidadMin","calcularPrecioVentaMax","calcularUtilidadMax","DatePicker","newDate","inputFormat","renderInput","params","Autocomplete","disablePortal","options","getOptionLabel","nombreProveedor","newValue","label","pb","i","overflow","src","alt","IconButton","nuevo","forEach","element","index","push","onImagenRemove","htmlFor","accept","FlexBox","marginTop","Button","variant","ProductosColumns","Header","accessor","Cell","transition","isSelected","setTipo","openModal","setOpenModal","Edit","alert","productosFake","acciones","HeadingWrapper","format","Date","flexWrap","ProductosList","t","useTranslation","actualizarTable","setActualizarTableContext","searchValue","setSearchValue","filteredItem","setFilteredItem","ApiObtenerTodo","useEffect","listData","filter","toLocaleLowerCase","match","toLowerCase","searchByNombre","Provider","pt","endIcon"],"mappings":"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","file":"static/js/7.c7b9fa8a.chunk.js","sourcesContent":["import { styled, TextField } from \"@mui/material\";\nimport React from \"react\";\nconst StyledTextField = styled(TextField)(({\n  theme\n}) => ({\n  \"& .MuiOutlinedInput-input\": {\n    fontWeight: 500,\n    color: theme.palette.text.primary\n  },\n  \"& .MuiOutlinedInput-notchedOutline\": {\n    borderRadius: \"8px\",\n    borderColor: theme.palette.action.disabled\n  },\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\n    borderColor: theme.palette.action.hover\n  },\n  \"& .MuiInputLabel-root\": {\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiInputLabel-root.Mui-focused\": {\n    fontWeight: 600\n  },\n  \"& .MuiSvgIcon-root\": {\n    color: theme.palette.text.disabled\n  }\n}));\n\nconst AppTextField = props => {\n  return <StyledTextField {...props} />;\n};\n\nexport default AppTextField;","import { Box } from \"@mui/material\";\n\nconst FlexRowAlign = ({\n  children,\n  ...props\n}) => <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" {...props}>\n    {children}\n  </Box>;\n\nexport default FlexRowAlign;","import { Box, styled } from \"@mui/material\";\nimport React from \"react\";\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  width: 40,\n  height: 40,\n  display: \"flex\",\n  borderRadius: \"5px\",\n  alignItems: \"center\",\n  marginRight: \"0.5rem\",\n  justifyContent: \"center\",\n  backgroundColor: theme.palette.primary.light\n}));\n\nconst IconWrapper = ({\n  children,\n  ...props\n}) => {\n  return <Wrapper {...props}>{children}</Wrapper>;\n};\n\nexport default IconWrapper;","import { InputBase, styled } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\n// styled component\nconst StyledInputBase = styled(InputBase)(({\n  theme,\n  bordered\n}) => ({\n  height: 45,\n  fontSize: 12,\n  width: \"100%\",\n  maxWidth: 350,\n  fontWeight: 600,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  border: bordered ? `1px solid ${theme.palette.action.disabled}` : \"none\",\n  [theme.breakpoints.down(500)]: {\n    maxWidth: \"100%\"\n  },\n  \"::placeholder\": {\n    color: theme.palette.text.disabled\n  }\n})); // ------------------------------------------------------------\n\n// ------------------------------------------------------------\nconst SearchInput = props => {\n  const {\n    icon_style = {},\n    bordered = true\n  } = props;\n  return <StyledInputBase bordered={bordered} startAdornment={<SearchIcon sx={{\n    fontSize: 18,\n    marginRight: 1,\n    color: \"text.disabled\",\n    ...icon_style\n  }} />} {...props} />;\n};\n\nexport default SearchInput;","import { SvgIcon } from \"@mui/material\";\n\nconst ShoppingBasket = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M22.5,10h-4L12.73,2.3a.77.77,0,0,0-.6-.3h-.26a.77.77,0,0,0-.6.3L5.5,10h-4a.5.5,0,0,0-.5.5v1a.5.5,0,0,0,.5.5H2l1.71,7.65A3,3,0,0,0,6.6,22H17.4a3,3,0,0,0,2.92-2.35L22,12h.47a.5.5,0,0,0,.5-.5v-1A.5.5,0,0,0,22.5,10ZM8,10l4-5.33L16,10Z\" />\n    </SvgIcon>;\n};\n\nexport default ShoppingBasket;","import { Box, Modal, styled } from \"@mui/material\";\nimport { lightTheme } from \"../constants\"; // ---------------------------------------------------------\n\n// ---------------------------------------------------------\nconst Wrapper = styled(Box)(({\n  theme\n}) => ({\n  top: \"50%\",\n  left: \"50%\",\n  padding: 24,\n  maxWidth: 680,\n  width: \"100%\",\n  borderRadius: \"4px\",\n  position: \"absolute\",\n  transform: \"translate(-50%, -50%)\",\n  backgroundColor: lightTheme(theme) ? \"#fff\" : theme.palette.background.default\n}));\n\nconst AppModal = ({\n  children,\n  open,\n  handleClose,\n  ...props\n}) => {\n  return <Modal open={open} onClose={handleClose}>\n      <Wrapper {...props}>{children}</Wrapper>\n    </Modal>;\n};\n\nexport default AppModal;","import { alpha, InputBase, Pagination, styled, TableRow } from \"@mui/material\";\nimport SearchIcon from \"icons/SearchIcon\";\nexport const StyledTableBodyRow = styled(TableRow)(({\n  theme,\n  selected_row\n}) => selected_row === \"select\" ? {\n  backgroundColor: alpha(theme.palette.primary.light, 0.5),\n  position: \"relative\",\n  \"&::after\": {\n    top: 0,\n    left: 0,\n    width: \"3px\",\n    content: '\"\"',\n    height: \"100%\",\n    position: \"absolute\",\n    backgroundColor: theme.palette.primary.main\n  }\n} : {});\nexport const StyledPagination = styled(Pagination)(({\n  theme\n}) => ({\n  \"& .MuiPaginationItem-root\": {\n    fontSize: 12,\n    fontWeight: 500,\n    color: theme.palette.text.disabled\n  },\n  \"& .MuiPaginationItem-page:hover\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-page.Mui-selected\": {\n    borderRadius: 20,\n    backgroundColor: \"transparent\",\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`\n  },\n  \"& .MuiPaginationItem-previousNext\": {\n    margin: 10,\n    borderRadius: 20,\n    color: theme.palette.primary.main,\n    border: `1px solid ${theme.palette.primary.main}`,\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  }\n}));\nexport const StyledSearchInput = styled(InputBase)(({\n  theme\n}) => ({\n  height: 40,\n  fontSize: 12,\n  maxWidth: 450,\n  width: \"100%\",\n  fontWeight: 500,\n  padding: \"0.5rem\",\n  borderRadius: \"4px\",\n  backgroundColor: \"white\",\n  color: theme.palette.text.primary\n}));\nexport const StyledSearchIcon = styled(SearchIcon)(({\n  theme\n}) => ({\n  fontSize: 16,\n  marginLeft: \"0.5rem\",\n  marginRight: \"0.5rem\",\n  color: theme.palette.primary.main\n}));","import { ArrowRightAlt } from \"@mui/icons-material\";\nimport { Box, Stack, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport ButtonBase from \"@mui/material/ButtonBase\";\nimport FlexBetween from \"components/flexbox/FlexBetween\";\nimport { H5 } from \"components/Typography\";\nimport { StyledPagination } from \"page-sections/data-table/dataTableV2/styledComponents\";\nimport { useMemo } from \"react\";\nimport { useExpanded, usePagination, useRowSelect, useSortBy, useTable } from \"react-table\";\nimport ScrollBar from \"simplebar-react\"; // component props interface\n\nconst CustomTable = props => {\n  const {\n    data,\n    rowClick,\n    showFooter,\n    columnShape,\n    hidePagination\n  } = props; // hooks\n\n  const tableData = useMemo(() => data, [data]);\n  const columns = useMemo(() => columnShape, [columnShape]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    pageOptions,\n    gotoPage\n  } = useTable({\n    columns,\n    data: tableData\n  }, useSortBy, useExpanded, usePagination, useRowSelect); // handle pagination\n  const handleChange = (_e, currentPageNo) => {\n    gotoPage(currentPageNo - 1);\n  };\n\n  return <Box>\n    <ScrollBar>\n      <Table {...getTableProps()} sx={{\n        borderSpacing: \"0 1rem\",\n        borderCollapse: \"separate\"\n      }}>\n        <TableHead>\n          {headerGroups.map(headerGroup => <TableRow {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => <TableCell {...column.getHeaderProps(column.getSortByToggleProps())} sx={{\n              paddingY: 0,\n              fontSize: 12,\n              fontWeight: 600,\n              borderBottom: 0,\n              width: column.width,\n              color: \"text.secondary\",\n              minWidth: column.minWidth,\n              maxWidth: column.maxWidth,\n              \"&:last-child\": {\n                textAlign: \"center\"\n              }\n            }}>\n              {column.render(\"Header\")}\n            </TableCell>)}\n          </TableRow>)}\n        </TableHead>\n\n        <TableBody {...getTableBodyProps()}>\n          {page.map(row => {\n            prepareRow(row);\n            return <TableRow {...row.getRowProps()} onClick={() => { return (rowClick && rowClick(row.original)) }} sx={{\n              backgroundColor: \"background.paper\",\n              cursor: rowClick ? \"pointer\" : \"unset\",\n              \"& td:first-of-type\": {\n                borderLeft: \"0\",\n                borderTopLeftRadius: \"8px\",\n                borderBottomLeftRadius: \"8px\"\n              },\n              \"& td:last-of-type\": {\n                borderRight: \"0\",\n                textAlign: \"center\",\n                borderTopRightRadius: \"8px\",\n                borderBottomRightRadius: \"8px\"\n              }\n            }}>\n              {row.cells.map(cell => {\n                return <TableCell {...cell.getCellProps()} sx={{\n                  border: 0,\n                  fontSize: 13,\n                  fontWeight: 500,\n                  color: \"text.secondary\",\n                  \"&:first-child\": {\n                    paddingLeft: \"16px\"\n                  },\n                  \"&:last-child\": {\n                    paddingRight: \"16px\"\n                  }\n                }}>\n                  {cell.render(\"Cell\")}\n                </TableCell>;\n              })}\n            </TableRow>;\n          })}\n        </TableBody>\n      </Table>\n    </ScrollBar>\n\n    {!hidePagination && <Stack alignItems=\"flex-end\" marginY={1}>\n      <StyledPagination count={pageOptions.length} shape=\"rounded\" onChange={handleChange} />\n    </Stack>}\n\n    {showFooter && <FlexBetween gap={0.5}>\n      <H5 color=\"text.secondary\" fontSize={13}>\n        Showing 1-12 of 24 result\n      </H5>\n      <ButtonBase disableRipple sx={{\n        fontSize: 13,\n        fontWeight: 600,\n        color: \"text.secondary\"\n      }}>\n        See All\n        <ArrowRightAlt />\n      </ButtonBase>\n    </FlexBetween>}\n  </Box>;\n};\n\nexport default CustomTable;","import { SvgIcon } from \"@mui/material\";\n\nconst DeleteIcon = props => {\n  return <SvgIcon viewBox=\"0 0 10 12\" {...props}>\n      <path d=\"M4.23535 5.64706H4.94123V9.52942H4.23535V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M2.82349 5.64706H3.52937V9.52942H2.82349V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M5.64722 5.64706H6.3531V9.52942H5.64722V5.64706Z\" fill=\"currentColor\" />\n      <path d=\"M9.17647 1.41176H6.35294V1.05882C6.35294 0.474988 5.87798 0 5.29412 0H3.88235C3.29849 0 2.82353 0.474988 2.82353 1.05882V1.41176H0V3.52941H0.735247L1.38428 10.994C1.41231 11.5588 1.87518 12 2.44179 12H6.73466C7.30127 12 7.76414 11.5588 7.79217 10.994L8.44123 3.52941H9.17647V1.41176ZM3.52941 1.05882C3.52941 0.864212 3.68774 0.705882 3.88235 0.705882H5.29412C5.48875 0.705882 5.64706 0.864212 5.64706 1.05882V1.41176H3.52941V1.05882ZM0.705882 2.11765H8.47059V2.82353H0.705882V2.11765ZM7.08732 10.9559C7.07941 11.1455 6.92452 11.2941 6.73468 11.2941H2.44179C2.25195 11.2941 2.09706 11.1456 2.08915 10.9559C1.39861 3.00981 1.44584 3.55313 1.44376 3.52941H7.73271C7.73082 3.55071 7.77478 3.04544 7.08732 10.9559Z\" fill=\"currentColor\" />\n    </SvgIcon>;\n};\n\nexport default DeleteIcon;","import { SvgIcon } from \"@mui/material\";\n\nconst Delete = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M20,4.5v1a.5.5,0,0,1-.5.5H4.5A.5.5,0,0,1,4,5.5v-1A.5.5,0,0,1,4.5,4H9V3a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1V4h4.5A.5.5,0,0,1,20,4.5ZM5.87,20.14a2,2,0,0,0,2,1.86h8.28a2,2,0,0,0,2-1.86L19,8H5Z\" />\n    </SvgIcon>;\n};\n\nexport default Delete;","import React from \"react\";\r\nexport const Context = React.createContext();","import axios from \"axios\";\r\n\r\nexport async function obtenerClasificacionIdService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/clasificacion-padre/${id}`)\r\n}\r\nexport async function CrearClasificacionService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/create`)\r\n}\r\nexport async function ObtenerClasificacionService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion`)\r\n}\r\nexport async function GuardarClasificacionService({\r\n    id,\r\n    nombreClasificacion,\r\n    clasificacionId\r\n}) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/Clasificacion`, {\r\n        id,\r\n        nombreClasificacion,\r\n        clasificacionId\r\n    });\r\n}\r\nexport async function EditarClasificacionService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/Clasificacion/editar/${id}`);\r\n}\r\nexport async function ModificarClasificacionService({\r\n    id,\r\n    nombreClasificacion,\r\n    clasificacionId\r\n}) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/Clasificacion/${id}`, {\r\n        id,\r\n        nombreClasificacion,\r\n        clasificacionId\r\n    });\r\n}\r\nexport async function EliminarClasificacionService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/Clasificacion/${id}`, {});\r\n}","import { SvgIcon } from \"@mui/material\";\n\nconst Add = props => {\n  return <SvgIcon viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19,11.5v1a.5.5,0,0,1-.5.5H13v5.5a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5V13H5.5a.5.5,0,0,1-.5-.5v-1a.5.5,0,0,1,.5-.5H11V5.5a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5V11h5.5A.5.5,0,0,1,19,11.5Z\" />\n    </SvgIcon>;\n};\n\nexport default Add;","import axios from \"axios\";\r\n\r\nexport async function CrearProductoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto/create`)\r\n}\r\nexport async function ObtenerProductoService() {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto`)\r\n}\r\nexport async function GuardarProductoService(values) {\r\n    return await axios.post(`${process.env.REACT_APP_API}api/producto`, values);\r\n}\r\nexport async function EditarProductoService(id) {\r\n    return await axios.get(`${process.env.REACT_APP_API}api/producto/editar/${id}`);\r\n}\r\nexport async function ModificarProductoService({\r\n    id,\r\n    ci,\r\n    codigoCliente,\r\n    nombreCliente,\r\n    correoElectronico,\r\n    telefono,\r\n    dirrecion,\r\n    lineaCredito,\r\n    planCuentaId,\r\n    monedaId\r\n}) {\r\n    return await axios.put(`${process.env.REACT_APP_API}api/producto/${id}`, {\r\n        id: id,\r\n        ci: ci,\r\n        codigoCliente: codigoCliente,\r\n        nombreCliente: nombreCliente,\r\n        correoElectronico: correoElectronico,\r\n        telefono: telefono,\r\n        dirrecion: dirrecion,\r\n        lineaCredito: lineaCredito,\r\n        planCuentaId: planCuentaId,\r\n        monedaId: monedaId\r\n    });\r\n}\r\nexport async function EliminarProductoService(id) {\r\n    return await axios.delete(`${process.env.REACT_APP_API}api/producto/${id}`, {});\r\n}","export const fileGetBase64 = async (event) => {\r\n    let me = this;\r\n    let file = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n        //me.modelvalue = reader.result;\r\n        console.log(reader.result);\r\n        me = reader.result\r\n    };\r\n    reader.onerror = function (error) {\r\n        console.log('Error: ', error);\r\n    };\r\n    return me\r\n}\r\nexport const readUploadedFileAsText = (event) => {\r\n    let inputFile = event.target.files[0];\r\n    const temporaryFileReader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        temporaryFileReader.onerror = () => {\r\n            temporaryFileReader.abort();\r\n            reject(new DOMException(\"Problem parsing input file.\"));\r\n        };\r\n\r\n        temporaryFileReader.onload = () => {\r\n            resolve(temporaryFileReader.result);\r\n        };\r\n        temporaryFileReader.readAsDataURL(inputFile);\r\n    });\r\n};","\r\nimport { Autocomplete, Box, Button, Grid, IconButton, styled, TextField, useMediaQuery } from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers\";\r\nimport AppModal from \"components/AppModal\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport FlexRowAlign from \"components/flexbox/FlexRowAlign\";\r\nimport AppTextField from \"components/input-fields/AppTextField\";\r\nimport Scrollbar from \"components/ScrollBar\";\r\nimport { H2, H6, Small } from \"components/Typography\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nimport { useFormik } from \"formik\";\r\nimport Add from \"icons/Add\";\r\nimport DeleteIcon from \"icons/DeleteIcon\";\r\nimport { useContext, useLayoutEffect, useState } from \"react\";\r\nimport { obtenerClasificacionIdService } from \"Services/api-ventas-erp/clasificacionService\";\r\nimport { CrearProductoService, EditarProductoService, GuardarProductoService } from \"Services/api-ventas-erp/proveedorService\";\r\nimport { fileGetBase64, readUploadedFileAsText } from \"utils/convertoToBase64\";\r\n\r\nimport * as Yup from \"yup\"; // component props interface\r\n\r\n// styled components\r\nconst StyledAppModal = styled(AppModal)(({\r\n    theme\r\n}) => ({\r\n    maxWidth: 700,\r\n    minWidth: 300,\r\n    outline: \"none\",\r\n    padding: \"1.5rem\"\r\n}));\r\nconst ImageDeleteWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    top: 5,\r\n    right: 5,\r\n    width: 25,\r\n    height: 25,\r\n    borderRadius: \"50%\",\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.error.main\r\n}));\r\nconst ImageUploadWrapper = styled(FlexRowAlign)(({\r\n    theme\r\n}) => ({\r\n    minHeight: 140,\r\n    cursor: \"pointer\",\r\n    borderRadius: \"8px\",\r\n    backgroundColor: theme.palette.grey[200]\r\n}));\r\n\r\nconst CreateProductoModal = ({\r\n    open,\r\n    data,\r\n    onClose,\r\n    editProduct,\r\n    tipo,\r\n    id\r\n}) => {\r\n    const [context, setContext] = useContext(Context);\r\n    const downXl = useMediaQuery(theme => theme.breakpoints.down(\"xl\"));\r\n    const [precioMin, setPrecioMin] = useState(0)\r\n    const initialState = {\r\n        id: 0,\r\n        codigoProducto: '',\r\n        codigoBarra: '',\r\n        nombreProducto: '',\r\n        unidadMedida: '',\r\n        cantidad: 0,\r\n        stockActual: 0,\r\n        stockMinimo: 0,\r\n        precioCompra: 0,\r\n        utilidadMin: 0,\r\n        PrecioVentaMin: 0,\r\n        utilidadMax: 0,\r\n        PrecioVentaMax: 0,\r\n        lote: '',\r\n        fechaVencimiento: '2023-01-01',\r\n        proveedorId: '',\r\n        proveedor: '',\r\n        categoriaId: '',\r\n        grupoId: '',\r\n        marcaId: '',\r\n        modeloId: '',\r\n        categoria: '',\r\n        grupo: '',\r\n        marca: '',\r\n        modelo: '',\r\n        imagenes: []\r\n    };\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        id: Yup.number().nullable(),\r\n        codigoProducto: Yup.string().min(3, \"Es muy corto\").required(\"Codigo es requerido!\"),\r\n        codigoBarra: Yup.string().min(3, \"Es muy corto\").required(\"Codigo barra es requerido!\"),\r\n        nombreProducto: Yup.string().min(3, \"Es muy corto\").required(\"Nombre es requerido!\"),\r\n        unidadMedida: Yup.string().required(\"Unidad medida es requerido!\"),\r\n        cantidad: Yup.number('debe ser un numero').required(\"Cantidad es requerido!\"),\r\n        stockActual: Yup.number('debe ser un numero').required(\"Stock inicial es requerido!\"),\r\n        stockMinimo: Yup.number('debe ser un numero').required(\"Stock final es requerido!\"),\r\n        precioCompra: Yup.number('debe ser un numero').required(\"Precio compra es requerido!\"),\r\n        utilidadMin: Yup.number('debe ser un numero').required(\"Utilidad max es requerido!\"),\r\n        PrecioVentaMin: Yup.number('debe ser un numero').required(\"Precio venta min es requerido!\"),\r\n        utilidadMax: Yup.number('debe ser un numero').required(\"Utilidad min es requerido!\"),\r\n        PrecioVentaMax: Yup.number('debe ser un numero').required(\"Precio venta max es requerido!\"),\r\n        lote: Yup.string().required(\"Lote  es requerido!\"),\r\n        fechaVencimiento: Yup.string().required(\"Fecha vencimiento es requerido!\"),\r\n        proveedorId: Yup.string().required(\"Proveedores es requerido!\"),\r\n        proveedor: Yup.string().nullable(),\r\n        categoriaId: Yup.number().required(\"Categoria es requerido!\"),\r\n        grupoId: Yup.number().required(\"Grupo es requerido!\"),\r\n        marcaId: Yup.number(),//.required(\"Marca es requerido!\"),\r\n        modeloId: Yup.number(),//.required(\"Modelo es requerido!\"),\r\n        categoria: Yup.string().nullable(),\r\n        grupo: Yup.string().nullable(),\r\n        marca: Yup.string().nullable(),\r\n        modelo: Yup.string().nullable(),\r\n        imagenes: Yup.array()\r\n    });\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        touched,\r\n        setFieldValue,\r\n        setValues,\r\n        resetForm\r\n    } = useFormik({\r\n        initialValues: initialState,\r\n        validationSchema,\r\n        onSubmit: values => {\r\n            setValues({ ...values, imagenes: imagenes })\r\n            console.log(values);\r\n            console.log(imagenes)\r\n            switch (tipo) {\r\n                case 'nuevo':\r\n                    ApiInsertProducto();\r\n                    break;\r\n                case 'editar':\r\n\r\n                    break\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n    const [optionProveedor, setOptionProveedor] = useState([]);\r\n    const [optionCategoria, setOptionCategoria] = useState([]);\r\n    const [optionGrupo, setOptionGrupo] = useState([])\r\n    const [optionMarca, setOptionMarca] = useState([])\r\n    const [optionModelo, setOptionModelo] = useState([])\r\n    const [imagenes, setImagen] = useState([]);\r\n\r\n    const onImagenChange = async (e) => {\r\n        console.log('data entrante ', e);\r\n        let imagen = await readUploadedFileAsText(e);\r\n        console.log(imagen)\r\n        setValues({ ...values, imagenes: imagenes })\r\n        setImagen([...imagenes, imagen]);\r\n\r\n    }\r\n    const onImagenRemove = (i) => {\r\n        var nuevo = []\r\n        imagenes.forEach((element, index) => {\r\n            if (index != i) {\r\n                nuevo.push(element)\r\n            }\r\n        });\r\n        setValues({ ...values, imagenes: nuevo })\r\n        setFieldValue('imagenes', nuevo)\r\n\r\n    }\r\n    const calcularPrecioVentaMin = () => {\r\n        let resultado = parseInt(values.precioCompra) + (((values.utilidadMin) / 100) * values.precioCompra);\r\n        setFieldValue('PrecioVentaMin', resultado);\r\n    }\r\n    const calcularPrecioVentaMax = () => {\r\n        let resultado = parseInt(values.precioCompra) + (((values.utilidadMax) / 100) * values.precioCompra);\r\n        setFieldValue('PrecioVentaMax', resultado);\r\n    }\r\n    const calcularUtilidadMin = () => {\r\n        let resultado = parseInt(((values.PrecioVentaMin * 100) / values.precioCompra) - (100));\r\n        setFieldValue('utilidadMin', resultado);\r\n    }\r\n    const calcularUtilidadMax = () => {\r\n        let resultado = parseInt(((values.PrecioVentaMax * 100) / values.precioCompra) - (100));\r\n        setFieldValue('utilidadMax', resultado);\r\n    }\r\n    const ApiCrearProducto = async () => {\r\n        const { data } = await CrearProductoService();\r\n        console.log(data.data)\r\n        setOptionProveedor(data.data.proveedores)\r\n        setValues({ ...initialState, codigoProducto: data.data.codigo })\r\n        setOptionCategoria(data.data.categorias);\r\n    }\r\n    const ApiEditarProducto = async () => {\r\n        const { data } = await EditarProductoService(id);\r\n        setOptionProveedor(data.data.proveedores)\r\n        setOptionCategoria(data.data.categorias)\r\n        console.log(data.data.proveedores)\r\n        console.log(data.data.categorias)\r\n        setImagen(data.data.imagenes);\r\n        setValues({ ...data.data.producto });\r\n    }\r\n    const ApiModificarProducto = async () => {\r\n        const { data } = await EditarProductoService(id);\r\n        setValues({ ...data.data.clasificacion })\r\n    }\r\n    const ApiInsertProducto = async () => {\r\n        const { data } = await GuardarProductoService(values);\r\n        console.log(data.data)\r\n        resetForm();\r\n        onClose();\r\n        setContext(true)\r\n    }\r\n\r\n    const ApiClasificacionPorId = async (clasificacionId) => {\r\n        const { data } = await obtenerClasificacionIdService(clasificacionId);\r\n        setOptionGrupo(data.data);\r\n    }\r\n    useLayoutEffect(() => {\r\n        console.log(tipo)\r\n        switch (tipo) {\r\n            case 'nuevo':\r\n                ApiCrearProducto();\r\n                break;\r\n            case 'editar':\r\n                ApiEditarProducto();\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        return () => {\r\n\r\n        };\r\n    }, [open])\r\n\r\n    return <StyledAppModal open={open} handleClose={onClose}>\r\n        <H2 marginBottom={2}>\r\n            {editProduct && data ? \"Editar producto\" : \"Añadir producto\"}\r\n        </H2>\r\n\r\n        <form onSubmit={(e) => { console.log(errors); handleSubmit(e) }}>\r\n            <Scrollbar style={{\r\n                maxHeight: downXl ? 500 : \"auto\"\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoProducto\"\r\n                            placeholder=\"Codigo producto\"\r\n                            value={values.codigoProducto}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoProducto && errors.codigoProducto)}\r\n                            helperText={touched.codigoProducto && errors.codigoProducto}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Codigo de Barras</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"codigoBarra\"\r\n                            placeholder=\"Codigo de barras\"\r\n                            value={values.codigoBarra}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.codigoBarra && errors.codigoBarra)}\r\n                            helperText={touched.codigoBarra && errors.codigoBarra}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Nombre</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"nombreProducto\"\r\n                            placeholder=\"Nombre\"\r\n                            value={values.productName}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.nombreProducto && errors.nombreProducto)}\r\n                            helperText={touched.nombreProducto && errors.nombreProducto}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Cantidad</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"cantidad\"\r\n                            type=\"number\"\r\n                            placeholder=\"cantidad\"\r\n                            value={values.cantidad}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.cantidad && errors.cantidad)}\r\n                            helperText={touched.cantidad && errors.cantidad}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Stock actual</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"stockActual\"\r\n                            type=\"number\"\r\n                            placeholder=\"Stock actual\"\r\n                            value={values.stockActual} onChange={handleChange}\r\n                            error={Boolean(touched.stockActual && errors.stockActual)}\r\n                            helperText={touched.stockActual && errors.stockActual}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Stock minimo</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"stockMinimo\"\r\n                            type=\"number\"\r\n                            placeholder=\"Stock minimo\"\r\n                            value={values.stockMinimo}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.stockMinimo && errors.stockMinimo)}\r\n                            helperText={touched.stockMinimo && errors.stockMinimo}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio compra</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"precioCompra\"\r\n                            type=\"number\"\r\n                            placeholder=\"precio compra\"\r\n                            value={values.precioCompra}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    //calcularUtilidadMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.precioCompra && errors.precioCompra)}\r\n                            helperText={touched.precioCompra && errors.precioCompra}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>% Utilidad min</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"utilidadMin\"\r\n                            type=\"number\"\r\n                            placeholder=\"% Utilidad mi\"\r\n                            value={values.utilidadMin}\r\n                            onChange={(e) => {\r\n                                handleChange(e)\r\n                            }}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularPrecioVentaMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.utilidadMin && errors.utilidadMin)}\r\n                            helperText={touched.utilidadMin && errors.utilidadMin}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio venta min</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"PrecioVentaMin\"\r\n                            type=\"number\"\r\n                            placeholder=\"Precio venta min\"\r\n                            value={values.PrecioVentaMin}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularUtilidadMin()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.PrecioVentaMin && errors.PrecioVentaMin)}\r\n                            helperText={touched.PrecioVentaMin && errors.PrecioVentaMin}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>% Utilidad max</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"utilidadMax\"\r\n                            type=\"number\"\r\n                            placeholder=\"% Utilidad max\"\r\n                            value={values.utilidadMax}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularPrecioVentaMax()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.utilidadMax && errors.utilidadMax)}\r\n                            helperText={touched.utilidadMax && errors.utilidadMax}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Precio venta max</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"PrecioVentaMax\"\r\n                            type=\"number\"\r\n                            placeholder=\"Categoria\"\r\n                            value={values.PrecioVentaMax}\r\n                            onChange={handleChange}\r\n                            onKeyUp={\r\n                                (e) => {\r\n                                    calcularUtilidadMax()\r\n                                    console.log(e.target.value)\r\n                                }\r\n                            }\r\n                            error={Boolean(touched.PrecioVentaMax && errors.PrecioVentaMax)}\r\n                            helperText={touched.PrecioVentaMax && errors.PrecioVentaMax}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Lote</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"lote\"\r\n                            placeholder=\"Lote\"\r\n                            value={values.lote}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.lote && errors.lote)}\r\n                            helperText={touched.lote && errors.lote}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Fecha vencimiento</H6>\r\n                        <DatePicker\r\n                            value={values.fechaVencimiento}\r\n                            onChange={newDate => setFieldValue(\"fechaVencimiento\", newDate)}\r\n                            inputFormat=\"yyyy-MM-dd\"\r\n                            renderInput={\r\n                                params => <AppTextField\r\n                                    fullWidth\r\n                                    size=\"small\" {...params}\r\n                                    name=\"date\"\r\n                                    error={Boolean(touched.fechaVencimiento && errors.fechaVencimiento)}\r\n                                    helperText={touched.fechaVencimiento && errors.fechaVencimiento}\r\n                                    sx={{\r\n                                        mb: 1\r\n                                    }} />} />\r\n                    </Grid>\r\n                    <Grid item sm={4} xs={12}>\r\n                        <H6 mb={1}>Unidad Medida</H6>\r\n                        <AppTextField\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            name=\"unidadMedida\"\r\n                            placeholder=\"Unidad Medida\"\r\n                            value={values.unidadMedida}\r\n                            onChange={handleChange}\r\n                            error={Boolean(touched.unidadMedida && errors.unidadMedida)}\r\n                            helperText={touched.unidadMedida && errors.unidadMedida}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                        <H6 mb={1}>Proveedor</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-proveedor\"\r\n                            options={optionProveedor}\r\n                            getOptionLabel={(options) => options.nombreProveedor}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('proveedorId', newValue.id)\r\n                                } else {\r\n                                    setFieldValue('proveedorId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.proveedorId}\r\n                                        label=\"Proveedores\"\r\n                                        error={Boolean(touched.proveedorId && errors.proveedorId)}\r\n                                        helperText={touched.proveedorId && errors.proveedorId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Categoria</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={optionCategoria}\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('categoriaId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('categoriaId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.categoria}\r\n                                        label=\"Grupo\"\r\n                                        error={Boolean(touched.categoriaId && errors.categoriaId)}\r\n                                        helperText={touched.categoriaId && errors.categoriaId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Grupo</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            options={optionGrupo}\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('grupoId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('grupoId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.grupoId}\r\n                                        label=\"Grupo\"\r\n                                        error={Boolean(touched.grupoId && errors.grupoId)}\r\n                                        helperText={touched.grupoId && errors.grupoId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Marca</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            options={optionMarca}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('marcaId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('marcaId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.marcaId}\r\n                                        label=\"Marca\"\r\n                                        error={Boolean(touched.marcaId && errors.marcaId)}\r\n                                        helperText={touched.marcaId && errors.marcaId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={6} xs={12}>\r\n                        <H6 mb={1}>Modelo</H6>\r\n                        <Autocomplete\r\n                            disablePortal\r\n                            id=\"combo-box-demo\"\r\n                            getOptionLabel={(options) => options.nombreClasificacion}\r\n                            options={optionModelo}\r\n                            size=\"small\"\r\n                            onChange={(event, newValue) => {\r\n                                if (newValue != null) {\r\n                                    setFieldValue('modeloId', newValue.id);\r\n                                    ApiClasificacionPorId(newValue.id);\r\n                                } else {\r\n                                    setFieldValue('modeloId', initialState.id)\r\n                                }\r\n                            }}\r\n                            renderInput={\r\n                                (params) =>\r\n                                    <TextField\r\n                                        {...params}\r\n                                        value={values.modeloId}\r\n                                        label=\"Modelo\"\r\n                                        error={Boolean(touched.modeloId && errors.modeloId)}\r\n                                        helperText={touched.modeloId && errors.modeloId}\r\n                                    />}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n                <Grid item xs={12}>\r\n                    <H6 pb={1}>Imagenes de producto</H6>\r\n                    <Box sx={{\r\n                        padding: 1,\r\n                        borderRadius: \"8px\",\r\n                        border: \"1px dashed\",\r\n                        borderColor: \"text.disabled\",\r\n                        backgroundColor: \"grey.100\"\r\n                    }}>\r\n                        <Grid container spacing={1}>\r\n                            {imagenes.map((item, i) =>\r\n                                <Grid item sm={3} xs={4} key={i}>\r\n                                    <Box sx={{\r\n                                        minHeight: 140,\r\n                                        borderRadius: \"8px\",\r\n                                        overflow: \"hidden\",\r\n                                        position: \"relative\"\r\n                                    }}>\r\n                                        <img src={item} width=\"100%\" height=\"100%\" alt={item} />\r\n                                        <ImageDeleteWrapper>\r\n                                            <IconButton\r\n                                                onClick={() => { onImagenRemove(i) }}\r\n                                            >\r\n                                                <DeleteIcon\r\n                                                    sx={{\r\n                                                        fontSize: 12,\r\n                                                        color: \"white\"\r\n                                                    }}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </ImageDeleteWrapper>\r\n                                    </Box>\r\n                                </Grid>\r\n                            )}\r\n                            <Grid item sm={3} xs={4}>\r\n                                <label htmlFor=\"image-upload\">\r\n                                    <input type=\"file\" accept=\"image/*\" id=\"image-upload\"\r\n                                        style={{\r\n                                            display: \"none\"\r\n                                        }}\r\n                                        onChange={onImagenChange}\r\n                                    />\r\n                                    <ImageUploadWrapper textAlign=\"center\">\r\n                                        <Box>\r\n                                            <Add color=\"disabled\" />\r\n                                            <Small fontWeight={600} display=\"block\">\r\n                                                Choose a file\r\n                                            </Small>\r\n                                            <Small fontWeight={600} color=\"text.disabled\">\r\n                                                or drag it here\r\n                                            </Small>\r\n                                        </Box>\r\n                                    </ImageUploadWrapper>\r\n                                </label>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Scrollbar>\r\n\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <FlexBox justifyContent=\"flex-end\" gap={2} marginTop={2}>\r\n                        <Button fullWidth variant=\"outlined\" onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button fullWidth type=\"submit\" variant=\"contained\">\r\n                            Save\r\n                        </Button>\r\n                    </FlexBox>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </StyledAppModal>;\r\n};\r\n\r\nexport default CreateProductoModal;","import { Edit } from \"@mui/icons-material\";\r\nimport { Box, IconButton, Rating } from \"@mui/material\";\r\nimport { Fragment, useState } from \"react\";\r\nimport CreateProductoModal from \"./create-producto\";\r\nimport Delete from \"icons/Delete\";\r\nconst ProductosColumns = [\r\n    {\r\n        Header: \"Cod barras\",\r\n        accessor: \"codigoBarra\"\r\n    },\r\n    {\r\n        Header: \"Nombre\",\r\n        accessor: \"nombreProducto\"\r\n    },\r\n    {\r\n        Header: \"Cantidad\",\r\n        accessor: \"cantidad\"\r\n    },\r\n    {\r\n        Header: \"Stock actual\",\r\n        accessor: \"stockActual\"\r\n    },\r\n    {\r\n        Header: \"Lote\",\r\n        accessor: \"lote\"\r\n    },\r\n    {\r\n        Header: \"Unidad Medida\",\r\n        accessor: \"unidadMedida\"\r\n    },\r\n    {\r\n        Header: \"Precio venta min\",\r\n        accessor: \"precioVentaMin\"\r\n    },\r\n    {\r\n        Header: \"Precio venta max\",\r\n        accessor: \"precioVentaMax\"\r\n    },\r\n    {\r\n        Header: \"Fecha vencimiento\",\r\n        accessor: \"fechaVencimiento\"\r\n    },\r\n    {\r\n        Header: \"Acciones\",\r\n        accessor: \"acciones\",\r\n        Cell: ({\r\n            row\r\n        }) => {\r\n            const style = {\r\n                fontSize: 19,\r\n                transition: \"color 0.3s\",\r\n                color: row.isSelected ? \"white\" : \"text.disabled\"\r\n            };\r\n            const [tipo, setTipo] = useState('');\r\n            const [openModal, setOpenModal] = useState(false);\r\n            return <Fragment>\r\n                <IconButton\r\n                    onClick={() => {\r\n                        setOpenModal(true)\r\n                        setTipo('editar')\r\n                    }}\r\n                >\r\n                    <Edit\r\n                        sx={{\r\n                            fontSize: 18,\r\n                            color: \"text.disabled\"\r\n                        }}\r\n                    />\r\n                </IconButton>\r\n                <IconButton onClick={() => { alert('funcion pendiente') }}>\r\n                    <Delete sx={style} />\r\n                </IconButton>\r\n                <CreateProductoModal\r\n                    editProduct\r\n                    open={openModal}\r\n                    data={row.original}\r\n                    id={row.original.id}\r\n                    onClose={\r\n                        () => {\r\n                            setOpenModal(false);\r\n                            setTipo('')\r\n                        }}\r\n                    tipo={tipo}\r\n                />\r\n            </Fragment>;\r\n        }\r\n    }];\r\nexport default ProductosColumns;","import { format } from \"date-fns\";\r\nexport const productosFake = [{\r\n  id:'1',\r\n  nombreClasificacion: \"categoria 1 \",\r\n  acciones: \"\",\r\n}];\r\n\r\n\r\n\r\nexport const ordersFakeData = [{\r\n  orderNo: \"UY3769\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  orderNo: \"UY3770\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Paid\"\r\n}, {\r\n  orderNo: \"UY3761\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Unpaid\"\r\n}, {\r\n  orderNo: \"UY3762\",\r\n  customer: \"Mark Ruffle\",\r\n  date: format(new Date(), \"dd-MM-yyyy\"),\r\n  total: \"$789\",\r\n  payment: \"Paypal\",\r\n  status: \"Paid\"\r\n}];\r\nexport const customersFakeData = [{\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  position: \"UI Designer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/001-man.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Austin, USA\",\r\n  status: \"Active\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  position: \"Editor\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/002-girl.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Austin, USA\",\r\n  status: \"Blocked\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Lily Collins\",\r\n  position: \"UI Designer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/003-boy.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Corner View, Sylhet\",\r\n  status: \"Active\"\r\n}, {\r\n  date: format(new Date(), \"MMM dd, yyyy\"),\r\n  name: \"Natalie Dormer\",\r\n  phone: \"+00578115245\",\r\n  avatar: \"/static/avatar/004-woman.svg\",\r\n  email: \"Uilib@gmail.com\",\r\n  location: \"Corner View, Sylhet\",\r\n  status: \"Blocked\"\r\n}];","import { Add } from \"@mui/icons-material\";\r\nimport { Box, Button, styled } from \"@mui/material\";\r\nimport FlexBox from \"components/flexbox/FlexBox\";\r\nimport IconWrapper from \"components/IconWrapper\";\r\nimport SearchInput from \"components/input-fields/SearchInput\";\r\nimport { H5 } from \"components/Typography\";\r\nimport ShoppingBasket from \"icons/ShoppingBasket\";\r\nimport CustomTable from \"page-sections/admin-ecommerce/CustomTable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport CreateProductoModal from \"./components/create-producto\";\r\nimport ProductosColumns from \"./components/productos-columns\";\r\nimport { productosFake } from \"./components/productosFake\";\r\nimport { searchByNombre } from \"./components/utils-productos\";\r\nimport { ObtenerProductoService } from \"Services/api-ventas-erp/proveedorService\";\r\nimport { Context } from \"contexts/ContextDataTable\";\r\nexport const HeadingWrapper = styled(FlexBox)(({\r\n    theme\r\n}) => ({\r\n    marginBottom: 20,\r\n    flexWrap: \"wrap\",\r\n    [theme.breakpoints.down(530)]: {\r\n        \"& .MuiButton-root\": {\r\n            width: \"100%\"\r\n        },\r\n        \"& .MuiInputBase-root\": {\r\n            maxWidth: \"100%\",\r\n            marginBottom: 15\r\n        }\r\n    }\r\n}));\r\n\r\nconst ProductosList = () => {\r\n    const {\r\n        t\r\n    } = useTranslation();\r\n    const [openModal, setOpenModal] = useState(false); // search input\r\n    const [actualizarTable, setActualizarTableContext] = useState(false);\r\n\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [filteredItem, setFilteredItem] = useState(productosFake);\r\n\r\n    const ApiObtenerTodo = async () => {\r\n        const { data } = await ObtenerProductoService();\r\n        setFilteredItem(data.data);\r\n    }\r\n    useEffect(() => {\r\n        ApiObtenerTodo()\r\n        const result = searchByNombre(productosFake, searchValue);\r\n        setFilteredItem(result);\r\n        setActualizarTableContext(false);\r\n    }, [searchValue, actualizarTable]);\r\n    return (\r\n        <Context.Provider value={[actualizarTable, setActualizarTableContext]}>\r\n            <Box pt={2} pb={4}>\r\n                <HeadingWrapper justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <FlexBox gap={0.5} alignItems=\"center\">\r\n                        <IconWrapper>\r\n                            <ShoppingBasket sx={{\r\n                                color: \"primary.main\"\r\n                            }} />\r\n                        </IconWrapper>\r\n                        <H5>Productos</H5>\r\n                    </FlexBox>\r\n                    <SearchInput bordered={'true'} placeholder=\"Buscar productos\" onChange={e => setSearchValue(e.target.value)} />\r\n                    <Button variant=\"contained\" endIcon={<Add />} onClick={() => setOpenModal(true)}>\r\n                        {t(\"Añadir Producto\")}\r\n                    </Button>\r\n                </HeadingWrapper>\r\n\r\n                <CustomTable columnShape={ProductosColumns} data={filteredItem} />\r\n\r\n                <CreateProductoModal open={openModal} onClose={() => setOpenModal(false)} tipo={'nuevo'} />\r\n            </Box>\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport default ProductosList;","export const searchByNombre = (listData, searchValue) => {\r\n    if (searchValue.length > 0) {\r\n      const searchResult = listData.filter(item => item.nombreClasificacion.toLocaleLowerCase().match(searchValue.toLowerCase()));\r\n      return searchResult;\r\n    } else {\r\n      return listData;\r\n    }\r\n  };\r\n  export const getRoute = pathname => {\r\n    const str = pathname.split(\"/\");\r\n    return `/${str[1]}`;\r\n  };"],"sourceRoot":""}